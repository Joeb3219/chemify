android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void dismissInternal(boolean) -> a
    int getTheme() -> a
    void onAttach(android.app.Activity) -> a
    void onDetach() -> b
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> c
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> d
    void onDestroyView() -> e
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> f
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> g
    android.content.res.Resources getResources() -> h
    android.support.v4.app.FragmentManager getFragmentManager() -> i
    boolean isDetached() -> j
    void onHiddenChanged(boolean) -> b
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> k
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> g
    void onStart() -> c
    void onResume() -> l
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> m
    void onStop() -> d
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> e
    void onDestroy() -> n
    void initState() -> o
    void onDetach() -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> p
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> q
    void performCreate(android.os.Bundle) -> h
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> i
    void performStart() -> r
    void performResume() -> s
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> t
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> j
    void performPause() -> u
    void performStop() -> v
    void performReallyStop() -> w
    void performDestroyView() -> x
    void performDestroy() -> y
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.j:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.k:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.l:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.m:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack(int,int) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.n:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.o:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.p:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.q:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.u:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.w:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.x:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> Y
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> Z
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> e
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> a
android.support.v4.app.ListFragment$1 -> android.support.v4.app.y:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.z:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.aa:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ab:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ac:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ad:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ae:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.af:
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.a:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.b:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.Loader -> android.support.v4.content.c:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.d:
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.a.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.a.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.b.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.b.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.b.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.b.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.b.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.b.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.b.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.b.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.b.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.b.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.b.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.b.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.b.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.z:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aa:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ab:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ac:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ad:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ae:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.af:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ag:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ah:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ai:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aj:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.al:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.am:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.an:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ao:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ap:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ar:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.as:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.at:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.au:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.av:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ax:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.charredgames.chemify.Controller -> com.charredgames.chemify.a:
    android.content.res.AssetManager assets -> n
    java.util.ArrayList types -> a
    java.util.ArrayList prefixes -> b
    java.util.ArrayList units -> c
    java.util.ArrayList conversionSymbols -> d
    android.util.SparseArray romanNumerals -> e
    java.util.ArrayList unitPrefixes -> f
    java.util.Locale _LOCALE -> g
    boolean autoFormat -> h
    boolean calculateReasoning -> i
    boolean sendUsage -> j
    java.util.Map reactionSymbols -> k
    android.content.Context context -> l
    android.content.res.Resources resources -> m
    void reset(android.content.res.AssetManager) -> a
    java.lang.String replaceReactionSymbols(java.lang.String) -> a
    java.lang.String replaceConversionSymbols(java.lang.String) -> b
    java.lang.String convertIntToNumeral(int) -> a
    int convertNumeralToInt(java.lang.String) -> c
    void setElements(java.lang.String) -> f
    void setIons(java.lang.String) -> g
    void setDefinitions(java.lang.String) -> h
    java.io.File getFileFromStream(java.lang.String,java.io.InputStream) -> a
    com.charredgames.chemify.constant.Ion getIon(java.lang.String) -> d
    java.lang.String stripHtmlTags(java.lang.String) -> e
    void reloadSettings(android.content.Context) -> a
    int getGCD(int,int) -> a
    int getGCD(java.util.ArrayList) -> a
    java.lang.String normalizeString(java.lang.String,boolean) -> a
    void sendUsageReport(java.lang.String,com.charredgames.chemify.problems.Problem) -> a
    java.lang.String doubleToScientific(java.lang.Double) -> a
com.charredgames.chemify.activity.AboutActivity -> com.charredgames.chemify.activity.AboutActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void responseClicked(android.view.View) -> responseClicked
com.charredgames.chemify.activity.ActivitySeriesActivity -> com.charredgames.chemify.activity.ActivitySeriesActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void responseClicked(android.view.View) -> responseClicked
com.charredgames.chemify.activity.BugReport -> com.charredgames.chemify.activity.BugReport:
    java.lang.String[] report -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    java.lang.String[] access$0(com.charredgames.chemify.activity.BugReport) -> a
com.charredgames.chemify.activity.BugReport$1 -> com.charredgames.chemify.activity.a:
    com.charredgames.chemify.activity.BugReport this$0 -> a
    android.view.View val$layout -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.charredgames.chemify.activity.BugReport$2 -> com.charredgames.chemify.activity.b:
    com.charredgames.chemify.activity.BugReport this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.charredgames.chemify.activity.ConstantsActivity -> com.charredgames.chemify.activity.ConstantsActivity:
    java.lang.String search -> a
    void onCreate(android.os.Bundle) -> onCreate
    void fillResults() -> a
    void responseClicked(android.view.View) -> responseClicked
    void access$0(com.charredgames.chemify.activity.ConstantsActivity,java.lang.String) -> a
    void access$1(com.charredgames.chemify.activity.ConstantsActivity) -> a
com.charredgames.chemify.activity.ConstantsActivity$1 -> com.charredgames.chemify.activity.c:
    com.charredgames.chemify.activity.ConstantsActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.charredgames.chemify.activity.DefinitionsActivity -> com.charredgames.chemify.activity.DefinitionsActivity:
    java.lang.String search -> a
    void onCreate(android.os.Bundle) -> onCreate
    void fillResults() -> a
    void responseClicked(android.view.View) -> responseClicked
    void access$0(com.charredgames.chemify.activity.DefinitionsActivity,java.lang.String) -> a
    void access$1(com.charredgames.chemify.activity.DefinitionsActivity) -> a
com.charredgames.chemify.activity.DefinitionsActivity$1 -> com.charredgames.chemify.activity.d:
    com.charredgames.chemify.activity.DefinitionsActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.charredgames.chemify.activity.ElementEdit -> com.charredgames.chemify.activity.ElementEdit:
    void onCreate(android.os.Bundle) -> onCreate
com.charredgames.chemify.activity.MainActivity -> com.charredgames.chemify.activity.MainActivity:
    android.widget.Spinner problem_type -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void submit(android.view.View) -> submit
    void onPause() -> onPause
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onResume() -> onResume
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.charredgames.chemify.activity.MainActivity$1 -> com.charredgames.chemify.activity.e:
    com.charredgames.chemify.activity.MainActivity this$0 -> a
    void onReceiveAd(com.google.ads.Ad) -> a
    void onPresentScreen(com.google.ads.Ad) -> b
    void onLeaveApplication(com.google.ads.Ad) -> c
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onDismissScreen(com.google.ads.Ad) -> d
com.charredgames.chemify.activity.MainActivity$2 -> com.charredgames.chemify.activity.f:
    com.charredgames.chemify.activity.MainActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.charredgames.chemify.activity.PolyIonsActivity -> com.charredgames.chemify.activity.PolyIonsActivity:
    java.lang.String search -> a
    void onCreate(android.os.Bundle) -> onCreate
    void fillResults() -> a
    void responseClicked(android.view.View) -> responseClicked
    void access$0(com.charredgames.chemify.activity.PolyIonsActivity,java.lang.String) -> a
    void access$1(com.charredgames.chemify.activity.PolyIonsActivity) -> a
com.charredgames.chemify.activity.PolyIonsActivity$1 -> com.charredgames.chemify.activity.g:
    com.charredgames.chemify.activity.PolyIonsActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.charredgames.chemify.activity.Response -> com.charredgames.chemify.activity.Response:
    com.charredgames.chemify.problems.Problem problem -> a
    java.util.ArrayList expandedViews -> b
    java.util.Map answers -> c
    java.lang.String input -> d
    java.lang.String selectedOperation -> e
    int[] $SWITCH_TABLE$com$charredgames$chemify$problems$ResponseType -> f
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void sendBugReport() -> b
    void responseClicked(android.view.View) -> responseClicked
    int[] $SWITCH_TABLE$com$charredgames$chemify$problems$ResponseType() -> a
com.charredgames.chemify.activity.SendPost -> com.charredgames.chemify.activity.h:
    org.apache.http.client.HttpClient client -> b
    org.apache.http.client.methods.HttpPost post -> c
    java.lang.Exception exception -> a
    org.apache.http.HttpResponse doInBackground(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.charredgames.chemify.activity.SettingsActivity -> com.charredgames.chemify.activity.SettingsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onStop() -> onStop
com.charredgames.chemify.constant.Compound -> com.charredgames.chemify.a.a:
    java.util.ArrayList elementGroups -> a
    int moles -> b
    int soluble -> c
    com.charredgames.chemify.constant.MatterState state -> d
    int getMoles() -> a
    java.util.ArrayList getElementGroups() -> b
    double getMass() -> c
    void setMoles(int) -> a
    int getNumberOfElements() -> d
    int getNumberOfMolecules() -> e
    boolean isCommonlySolid() -> w
    boolean isCommonlyGas() -> x
    boolean isCommonlyLiquid() -> y
    com.charredgames.chemify.constant.MatterState getMatterState() -> f
    boolean containsElement(com.charredgames.chemify.constant.Element) -> a
    boolean isHydrocarbon() -> g
    boolean isWater() -> h
    boolean isMetal() -> i
    boolean isNonMetal() -> j
    boolean containsOnlyNMAndPoly() -> k
    boolean containsOnlyMAndPoly() -> l
    boolean containsOnlyG1AndIon(com.charredgames.chemify.constant.Ion) -> a
    boolean containsOnlyGroupAndElement(int,com.charredgames.chemify.constant.Element) -> a
    boolean containsOnlyNM() -> m
    boolean containsOnlyM() -> n
    java.lang.String getDrawStringWithAllCharges() -> o
    java.lang.String getDrawString() -> p
    java.lang.String getDrawStringWithoutCharges() -> q
    java.lang.String getDrawString(boolean) -> a
    int getOverallCharge() -> r
    boolean containsPolyatomic(com.charredgames.chemify.constant.Ion) -> b
    boolean allElementsInGroup(int) -> b
    boolean isSoluble() -> s
    java.util.ArrayList breakIntoIons() -> t
    void reduceAtomCount() -> u
    void sortElements() -> z
    void normalizeCompound() -> v
com.charredgames.chemify.constant.Constant -> com.charredgames.chemify.a.b:
    java.util.ArrayList constants -> a
    java.lang.String name -> b
    java.lang.String symbol -> c
    java.lang.String units -> d
    double value -> e
    android.text.Spanned drawString -> f
    com.charredgames.chemify.constant.Constant SPEED_OF_LIGHT -> g
    com.charredgames.chemify.constant.Constant PLANCK_CONSTANT -> h
    com.charredgames.chemify.constant.Constant BOLTZMANN_CONSTANT -> i
    com.charredgames.chemify.constant.Constant AVOGADROS_NUMBER -> j
    com.charredgames.chemify.constant.Constant ELECTRON_MASS -> k
    com.charredgames.chemify.constant.Constant PROTON_MASS -> l
    com.charredgames.chemify.constant.Constant NEUTRON_MASS -> m
    com.charredgames.chemify.constant.Constant BOHR_RADIUS -> n
    com.charredgames.chemify.constant.Constant GAS_CONSTANT -> o
    com.charredgames.chemify.constant.Constant GRAVITY_ACCELERATION -> p
    com.charredgames.chemify.constant.Constant ELEMENTARY_CHARGE -> q
    com.charredgames.chemify.constant.Constant FARADY_CONSTANT -> r
    com.charredgames.chemify.constant.Constant GRAVITY_CONSTANT -> s
    com.charredgames.chemify.constant.Constant RYDBERG_CONSTANT -> t
    android.text.Spanned getDrawString() -> a
    boolean matchesSearch(java.lang.String) -> a
com.charredgames.chemify.constant.Definition -> com.charredgames.chemify.a.c:
    java.lang.String word -> a
    java.lang.String definition -> b
    java.lang.String example -> c
    android.text.Spanned response -> d
    java.util.ArrayList definitions -> e
    void setExample(java.lang.String) -> a
    java.lang.String getWord() -> a
    java.lang.String getDefinition() -> b
    java.lang.String getExample() -> c
    android.text.Spanned getDrawString() -> d
    boolean containsWord(java.lang.String) -> b
com.charredgames.chemify.constant.Element -> com.charredgames.chemify.a.d:
    java.lang.String name -> bp
    java.lang.String symbol -> bq
    java.lang.String electronConfig -> br
    int atomicNumber -> bs
    int period -> bt
    int group -> bu
    int protons -> bv
    int electrons -> bw
    int neutrons -> bx
    int charge -> by
    int valence -> bz
    int activityNum -> bA
    double atomicMass -> bB
    com.charredgames.chemify.constant.MetalType metalType -> bC
    java.util.ArrayList elements -> a
    com.charredgames.chemify.constant.Element HYDROGEN -> b
    com.charredgames.chemify.constant.Element HELIUM -> c
    com.charredgames.chemify.constant.Element LITHIUM -> d
    com.charredgames.chemify.constant.Element BERYLLIUM -> e
    com.charredgames.chemify.constant.Element BORON -> f
    com.charredgames.chemify.constant.Element CARBON -> g
    com.charredgames.chemify.constant.Element NITROGEN -> h
    com.charredgames.chemify.constant.Element OXYGEN -> i
    com.charredgames.chemify.constant.Element FLUORINE -> j
    com.charredgames.chemify.constant.Element NEON -> k
    com.charredgames.chemify.constant.Element SODIUM -> l
    com.charredgames.chemify.constant.Element MAGNESIUM -> m
    com.charredgames.chemify.constant.Element ALUMINIUM -> n
    com.charredgames.chemify.constant.Element SILICON -> o
    com.charredgames.chemify.constant.Element PHOSPHORUS -> p
    com.charredgames.chemify.constant.Element SULFUR -> q
    com.charredgames.chemify.constant.Element CHLORINE -> r
    com.charredgames.chemify.constant.Element ARGON -> s
    com.charredgames.chemify.constant.Element POTASSIUM -> t
    com.charredgames.chemify.constant.Element CALCIUM -> u
    com.charredgames.chemify.constant.Element SCANDIUM -> v
    com.charredgames.chemify.constant.Element TITANIUM -> w
    com.charredgames.chemify.constant.Element VANADIUM -> x
    com.charredgames.chemify.constant.Element CHROMIUM -> y
    com.charredgames.chemify.constant.Element MANGANESE -> z
    com.charredgames.chemify.constant.Element IRON -> A
    com.charredgames.chemify.constant.Element COBALT -> B
    com.charredgames.chemify.constant.Element NICKEL -> C
    com.charredgames.chemify.constant.Element COPPER -> D
    com.charredgames.chemify.constant.Element ZINC -> E
    com.charredgames.chemify.constant.Element GALLIUM -> F
    com.charredgames.chemify.constant.Element GERMANIUM -> G
    com.charredgames.chemify.constant.Element ARSENIC -> H
    com.charredgames.chemify.constant.Element SELENIUM -> I
    com.charredgames.chemify.constant.Element BROMINE -> J
    com.charredgames.chemify.constant.Element KRYPTON -> K
    com.charredgames.chemify.constant.Element RUBIDIUM -> L
    com.charredgames.chemify.constant.Element STRONTIUM -> M
    com.charredgames.chemify.constant.Element YTTRIUM -> N
    com.charredgames.chemify.constant.Element ZIRCONIUM -> O
    com.charredgames.chemify.constant.Element NIOBIUM -> P
    com.charredgames.chemify.constant.Element MOLYBDENUM -> Q
    com.charredgames.chemify.constant.Element TECHNETIUM -> R
    com.charredgames.chemify.constant.Element RUTHENIUM -> S
    com.charredgames.chemify.constant.Element RHODIUM -> T
    com.charredgames.chemify.constant.Element PALLADIUM -> U
    com.charredgames.chemify.constant.Element SILVER -> V
    com.charredgames.chemify.constant.Element CADMIUM -> W
    com.charredgames.chemify.constant.Element INDIUM -> X
    com.charredgames.chemify.constant.Element TIN -> Y
    com.charredgames.chemify.constant.Element ANTIMONY -> Z
    com.charredgames.chemify.constant.Element TELLURIUM -> aa
    com.charredgames.chemify.constant.Element IODINE -> ab
    com.charredgames.chemify.constant.Element XENON -> ac
    com.charredgames.chemify.constant.Element CESIUM -> ad
    com.charredgames.chemify.constant.Element BARIUM -> ae
    com.charredgames.chemify.constant.Element LANTHANUM -> af
    com.charredgames.chemify.constant.Element CERIUM -> ag
    com.charredgames.chemify.constant.Element PRASEODYMIUM -> ah
    com.charredgames.chemify.constant.Element NEODYMIUM -> ai
    com.charredgames.chemify.constant.Element PROMETHIUM -> aj
    com.charredgames.chemify.constant.Element SAMARIUM -> ak
    com.charredgames.chemify.constant.Element EUROPIUM -> al
    com.charredgames.chemify.constant.Element GADOLINIUM -> am
    com.charredgames.chemify.constant.Element TERBIUM -> an
    com.charredgames.chemify.constant.Element DYSPROSIUM -> ao
    com.charredgames.chemify.constant.Element HOLMIUM -> ap
    com.charredgames.chemify.constant.Element ERBIUM -> aq
    com.charredgames.chemify.constant.Element THULIUM -> ar
    com.charredgames.chemify.constant.Element YTTERBIUM -> as
    com.charredgames.chemify.constant.Element LUTETIUM -> at
    com.charredgames.chemify.constant.Element HAFNIUM -> au
    com.charredgames.chemify.constant.Element TANTALUM -> av
    com.charredgames.chemify.constant.Element TUNGSTEN -> aw
    com.charredgames.chemify.constant.Element RHENIUM -> ax
    com.charredgames.chemify.constant.Element OSMIUM -> ay
    com.charredgames.chemify.constant.Element IRIDIUM -> az
    com.charredgames.chemify.constant.Element PLATINUM -> aA
    com.charredgames.chemify.constant.Element GOLD -> aB
    com.charredgames.chemify.constant.Element MERCURY -> aC
    com.charredgames.chemify.constant.Element THALLIUM -> aD
    com.charredgames.chemify.constant.Element LEAD -> aE
    com.charredgames.chemify.constant.Element BISMUTH -> aF
    com.charredgames.chemify.constant.Element POLONIUM -> aG
    com.charredgames.chemify.constant.Element ASTATINE -> aH
    com.charredgames.chemify.constant.Element RADON -> aI
    com.charredgames.chemify.constant.Element FRANCIUM -> aJ
    com.charredgames.chemify.constant.Element RADIUM -> aK
    com.charredgames.chemify.constant.Element ACTINIUM -> aL
    com.charredgames.chemify.constant.Element THORIUM -> aM
    com.charredgames.chemify.constant.Element PROTACTINIUM -> aN
    com.charredgames.chemify.constant.Element URANIUM -> aO
    com.charredgames.chemify.constant.Element NEPTUNIUM -> aP
    com.charredgames.chemify.constant.Element PLUTONIUM -> aQ
    com.charredgames.chemify.constant.Element AMERICIUM -> aR
    com.charredgames.chemify.constant.Element CURIUM -> aS
    com.charredgames.chemify.constant.Element BERKELIUM -> aT
    com.charredgames.chemify.constant.Element CALIFORNIUM -> aU
    com.charredgames.chemify.constant.Element EINSTEINIUM -> aV
    com.charredgames.chemify.constant.Element FERMIUM -> aW
    com.charredgames.chemify.constant.Element MENDELEVIUM -> aX
    com.charredgames.chemify.constant.Element NOBELIUM -> aY
    com.charredgames.chemify.constant.Element LAWRENCIUM -> aZ
    com.charredgames.chemify.constant.Element RUTHERFORDIUM -> ba
    com.charredgames.chemify.constant.Element DUBNIUM -> bb
    com.charredgames.chemify.constant.Element SEABORGIUM -> bc
    com.charredgames.chemify.constant.Element BOHRIUM -> bd
    com.charredgames.chemify.constant.Element HASSIUM -> be
    com.charredgames.chemify.constant.Element MEITNERIUM -> bf
    com.charredgames.chemify.constant.Element DARMSTADTIUM -> bg
    com.charredgames.chemify.constant.Element ROENTGENIUM -> bh
    com.charredgames.chemify.constant.Element COPERNICIUM -> bi
    com.charredgames.chemify.constant.Element UNUNTRIUM -> bj
    com.charredgames.chemify.constant.Element UNUNQUADIUM -> bk
    com.charredgames.chemify.constant.Element UNUNPENTIUM -> bl
    com.charredgames.chemify.constant.Element UNUNHEXIUM -> bm
    com.charredgames.chemify.constant.Element UNUNSEPTIUM -> bn
    com.charredgames.chemify.constant.Element UNUNOCTIUM -> bo
    void setInfo(java.lang.String,int,double,int,int,int,int,int) -> a
    com.charredgames.chemify.constant.Element getElement(java.lang.String) -> a
    java.lang.String getSymbol() -> a
    java.lang.String getName() -> b
    int getAtomicNumber() -> c
    double getAtomicMass() -> d
    int getPeriod() -> e
    int getGroup() -> f
    int getCharge() -> g
    int getValence() -> h
    int getActivityNumber() -> i
    int getProtons() -> j
    int getNeutrons() -> k
    int getElectrons() -> l
    com.charredgames.chemify.constant.MetalType getMetalType() -> m
    java.lang.String getElectronConfig() -> n
    java.lang.String getFilledPortion(java.lang.String,int,int,int) -> a
    java.lang.String getDrawString() -> o
com.charredgames.chemify.constant.ElementGroup -> com.charredgames.chemify.a.e:
    java.util.ArrayList elementSets -> a
    int quantity -> b
    int charge -> c
    com.charredgames.chemify.constant.Ion ion -> d
    java.util.ArrayList getElementSets() -> a
    void addElementSet(com.charredgames.chemify.constant.ElementSet) -> a
    double getOverallWeight() -> b
    int getAdditiveCharge() -> c
    void setCharge(int) -> a
    int getCharge() -> d
    com.charredgames.chemify.constant.Ion getIon() -> e
    void setIon(com.charredgames.chemify.constant.Ion) -> a
    int getQuantity() -> f
    void setQuantity(int) -> b
    int getElementCount() -> g
    java.lang.String getDrawString() -> h
    boolean isPolyatomic() -> i
    int compareTo(com.charredgames.chemify.constant.ElementGroup) -> a
    boolean containsOnlyNM() -> j
    boolean containsOnlyM() -> k
    int compareTo(java.lang.Object) -> compareTo
com.charredgames.chemify.constant.ElementSet -> com.charredgames.chemify.a.f:
    com.charredgames.chemify.constant.Element element -> a
    int quantity -> b
    int oxidationNumber -> c
    com.charredgames.chemify.constant.Element getElement() -> a
    int getQuantity() -> b
    double getWeight() -> c
    int getTotalCharge() -> d
    java.lang.String getDrawString() -> e
    void setQuantity(int) -> a
    int getOxidationNumber() -> f
    void setOxidationNumber(int) -> b
com.charredgames.chemify.constant.Equation -> com.charredgames.chemify.a.g:
    java.util.ArrayList left -> a
    java.util.ArrayList right -> b
    int balanceAttempts -> c
    boolean hasProducts() -> a
    boolean hasReactants() -> b
    java.util.ArrayList getReactants() -> c
    java.util.ArrayList getProducts() -> d
    java.util.ArrayList getAllCompounds() -> e
    void addCompound(com.charredgames.chemify.constant.Compound,int) -> a
    void addCompounds(java.util.ArrayList,int) -> a
    java.lang.String getDrawString(boolean) -> a
    java.lang.String getDrawStringWithAllCharges(boolean) -> b
    double getMass() -> f
    void balance() -> g
    boolean isBalanced() -> h
    java.util.Map getElementQuantityMap(java.util.ArrayList) -> a
    boolean compoundOnBothSides(com.charredgames.chemify.constant.Compound) -> a
    void removeAllInstancesOfCompound(com.charredgames.chemify.constant.Compound) -> b
com.charredgames.chemify.constant.Ion -> com.charredgames.chemify.a.h:
    java.util.ArrayList ions -> a
    java.util.ArrayList elements -> b
    java.lang.String name -> c
    java.lang.String elementString -> d
    com.charredgames.chemify.constant.Compound compound -> e
    int charge -> f
    java.lang.String getElementString() -> a
    java.lang.String getName() -> b
    int getCharge() -> c
    java.util.ArrayList getElementSet() -> d
    boolean containsString(java.lang.String) -> a
    java.lang.String getDrawString() -> e
com.charredgames.chemify.constant.MatterState -> com.charredgames.chemify.a.i:
    com.charredgames.chemify.constant.MatterState GAS -> a
    com.charredgames.chemify.constant.MatterState LIQUID -> b
    com.charredgames.chemify.constant.MatterState SOLID -> c
    com.charredgames.chemify.constant.MatterState AQUEOUS -> d
    com.charredgames.chemify.constant.MatterState UNKNOWN -> e
    java.lang.String symbol -> f
    com.charredgames.chemify.constant.MatterState[] ENUM$VALUES -> g
    java.lang.String getDrawSymbol() -> a
    com.charredgames.chemify.constant.MatterState[] values() -> values
    com.charredgames.chemify.constant.MatterState valueOf(java.lang.String) -> valueOf
com.charredgames.chemify.constant.Measurement -> com.charredgames.chemify.a.j:
    double value -> a
    com.charredgames.chemify.constant.Unit unit -> b
    int sigFigs -> c
    double getValue() -> a
    com.charredgames.chemify.constant.Unit getUnit() -> b
    void setValue(double) -> a
    java.lang.String getDrawString() -> c
    com.charredgames.chemify.constant.Measurement convertUnit(com.charredgames.chemify.constant.Unit) -> a
    com.charredgames.chemify.constant.Measurement getMeasurementFromString(java.lang.String) -> a
    boolean stringContainsMeasurement(java.lang.String) -> b
com.charredgames.chemify.constant.MetalType -> com.charredgames.chemify.a.k:
    com.charredgames.chemify.constant.MetalType METAL -> a
    com.charredgames.chemify.constant.MetalType METALLOID -> b
    com.charredgames.chemify.constant.MetalType NONMETAL -> c
    com.charredgames.chemify.constant.MetalType[] ENUM$VALUES -> d
    com.charredgames.chemify.constant.MetalType[] values() -> values
    com.charredgames.chemify.constant.MetalType valueOf(java.lang.String) -> valueOf
com.charredgames.chemify.constant.Unit -> com.charredgames.chemify.a.l:
    com.charredgames.chemify.constant.Unit GRAM -> a
    com.charredgames.chemify.constant.Unit SECOND -> b
    com.charredgames.chemify.constant.Unit METER -> c
    com.charredgames.chemify.constant.Unit KELVIN -> d
    com.charredgames.chemify.constant.Unit MOLE -> e
    com.charredgames.chemify.constant.Unit COULOMB -> f
    com.charredgames.chemify.constant.Unit NEWTON -> g
    com.charredgames.chemify.constant.Unit JOULE -> h
    com.charredgames.chemify.constant.Unit PASCAL -> i
    com.charredgames.chemify.constant.Unit WATT -> j
    com.charredgames.chemify.constant.Unit AMPERE -> k
    com.charredgames.chemify.constant.Unit VOLT -> l
    com.charredgames.chemify.constant.Unit LITRE -> m
    com.charredgames.chemify.constant.Unit CELSIUS -> n
    com.charredgames.chemify.constant.Unit FAHRENHEIT -> o
    com.charredgames.chemify.constant.Unit ATOMS -> p
    com.charredgames.chemify.constant.Unit MOLECULES -> q
    com.charredgames.chemify.constant.Unit TORR -> r
    com.charredgames.chemify.constant.Unit ATOMOSPHERES -> s
    com.charredgames.chemify.constant.Unit MM_HG -> t
    com.charredgames.chemify.constant.Unit MINUTE -> u
    com.charredgames.chemify.constant.Unit HOUR -> v
    com.charredgames.chemify.constant.Unit DAY -> w
    com.charredgames.chemify.constant.Unit WEEK -> x
    com.charredgames.chemify.constant.Unit MONTH -> y
    com.charredgames.chemify.constant.Unit YEAR -> z
    com.charredgames.chemify.constant.Unit DECADE -> A
    com.charredgames.chemify.constant.Unit CENTURY -> B
    com.charredgames.chemify.constant.Unit INCH -> C
    com.charredgames.chemify.constant.Unit FOOT -> D
    com.charredgames.chemify.constant.Unit YARD -> E
    com.charredgames.chemify.constant.Unit MILE -> F
    com.charredgames.chemify.constant.Unit ACRE -> G
    com.charredgames.chemify.constant.Unit GALLON -> H
    com.charredgames.chemify.constant.Unit QUART -> I
    com.charredgames.chemify.constant.Unit PINT -> J
    com.charredgames.chemify.constant.Unit CUP -> K
    com.charredgames.chemify.constant.Unit FL_OUNCE -> L
    com.charredgames.chemify.constant.Unit TABLESPOON -> M
    com.charredgames.chemify.constant.Unit TEASPOON -> N
    com.charredgames.chemify.constant.Unit OUNCE -> O
    com.charredgames.chemify.constant.Unit POUND -> P
    java.lang.String name -> Q
    java.util.ArrayList abbreviations -> R
    double factor -> S
    com.charredgames.chemify.constant.UnitType type -> T
    boolean base -> U
    java.lang.String getCommonAbbreviation() -> a
    com.charredgames.chemify.constant.Unit getUnitFromString(java.lang.String) -> a
    java.lang.String getScientificFactor() -> b
com.charredgames.chemify.constant.UnitPrefix -> com.charredgames.chemify.a.m:
    com.charredgames.chemify.constant.UnitPrefix YOTTA -> a
    com.charredgames.chemify.constant.UnitPrefix ZETTA -> b
    com.charredgames.chemify.constant.UnitPrefix EXA -> c
    com.charredgames.chemify.constant.UnitPrefix PETA -> d
    com.charredgames.chemify.constant.UnitPrefix TERA -> e
    com.charredgames.chemify.constant.UnitPrefix GIGA -> f
    com.charredgames.chemify.constant.UnitPrefix MEGA -> g
    com.charredgames.chemify.constant.UnitPrefix KILO -> h
    com.charredgames.chemify.constant.UnitPrefix HECTO -> i
    com.charredgames.chemify.constant.UnitPrefix DECA -> j
    com.charredgames.chemify.constant.UnitPrefix BASE -> k
    com.charredgames.chemify.constant.UnitPrefix DECI -> l
    com.charredgames.chemify.constant.UnitPrefix CENTI -> m
    com.charredgames.chemify.constant.UnitPrefix MILLI -> n
    com.charredgames.chemify.constant.UnitPrefix MICRO -> o
    com.charredgames.chemify.constant.UnitPrefix MICRO_U -> p
    com.charredgames.chemify.constant.UnitPrefix NANO -> q
    com.charredgames.chemify.constant.UnitPrefix PICO -> r
    com.charredgames.chemify.constant.UnitPrefix FEMTO -> s
    com.charredgames.chemify.constant.UnitPrefix ATTO -> t
    com.charredgames.chemify.constant.UnitPrefix ZEPTO -> u
    com.charredgames.chemify.constant.UnitPrefix YOCTO -> v
    double value -> w
    java.lang.String name -> x
    java.lang.String abbreviation -> y
    com.charredgames.chemify.constant.UnitPrefix[] ENUM$VALUES -> z
    com.charredgames.chemify.constant.UnitPrefix[] values() -> values
    com.charredgames.chemify.constant.UnitPrefix valueOf(java.lang.String) -> valueOf
com.charredgames.chemify.constant.UnitType -> com.charredgames.chemify.a.n:
    com.charredgames.chemify.constant.UnitType LENGTH -> a
    com.charredgames.chemify.constant.UnitType TIME -> b
    com.charredgames.chemify.constant.UnitType MASS -> c
    com.charredgames.chemify.constant.UnitType TEMPERATURE -> d
    com.charredgames.chemify.constant.UnitType AMOUNT_SUBSTANCE -> e
    com.charredgames.chemify.constant.UnitType ELECTRICAL_CHARGE -> f
    com.charredgames.chemify.constant.UnitType FORCE -> g
    com.charredgames.chemify.constant.UnitType ENERGY -> h
    com.charredgames.chemify.constant.UnitType PRESSURE -> i
    com.charredgames.chemify.constant.UnitType POWER -> j
    com.charredgames.chemify.constant.UnitType ELECTRICAL_CURRENT -> k
    com.charredgames.chemify.constant.UnitType ELECTRICAL_POTENTIAL -> l
    com.charredgames.chemify.constant.UnitType VOLUME -> m
    com.charredgames.chemify.constant.Unit baseUnit -> n
    boolean usesPrefixes -> o
    com.charredgames.chemify.constant.UnitType[] ENUM$VALUES -> p
    com.charredgames.chemify.constant.Unit getBaseUnit(com.charredgames.chemify.constant.UnitType) -> a
    com.charredgames.chemify.constant.UnitType[] values() -> values
    com.charredgames.chemify.constant.UnitType valueOf(java.lang.String) -> valueOf
com.charredgames.chemify.gui.ResponseBlock -> com.charredgames.chemify.b.a:
    android.text.Spanned answer -> a
    android.text.Spanned expanded -> b
    android.text.Spanned getAnswer() -> a
    java.lang.CharSequence getExpanded() -> b
    java.lang.CharSequence removeWhiteSpace(java.lang.CharSequence) -> a
com.charredgames.chemify.gui.ResponsePanel -> com.charredgames.chemify.b.b:
    java.util.ArrayList response -> a
    void addLine(java.lang.String,com.charredgames.chemify.problems.ResponseType) -> a
    void addLine(java.lang.String) -> a
    java.util.ArrayList getResponses() -> a
    java.lang.String getResponse() -> b
com.charredgames.chemify.problems.DimensionalAnalysis -> com.charredgames.chemify.c.a:
    void solve(boolean) -> a
com.charredgames.chemify.problems.ElementInfo -> com.charredgames.chemify.c.b:
    com.charredgames.chemify.problems.ResponseType type -> a
    void solve(boolean) -> a
com.charredgames.chemify.problems.Ionic -> com.charredgames.chemify.c.c:
    void solve(boolean) -> a
com.charredgames.chemify.problems.Nomenclature -> com.charredgames.chemify.c.d:
    com.charredgames.chemify.problems.ResponseType type -> a
    void solve(boolean) -> a
    java.lang.String convertGroupsToName(java.util.ArrayList,com.charredgames.chemify.problems.Problem) -> a
    java.util.ArrayList convertNameToElementGroups(java.lang.String,com.charredgames.chemify.problems.Problem) -> a
com.charredgames.chemify.problems.Oxidation -> com.charredgames.chemify.c.e:
    com.charredgames.chemify.problems.ResponseType type -> a
    void solve(boolean) -> a
    void predictViaScan(java.util.ArrayList,com.charredgames.chemify.constant.ElementGroup) -> a
    boolean numbersEqualCharge(java.util.ArrayList,int,int) -> a
com.charredgames.chemify.problems.Prefix -> com.charredgames.chemify.c.f:
    com.charredgames.chemify.problems.Prefix mono -> a
    com.charredgames.chemify.problems.Prefix di -> b
    com.charredgames.chemify.problems.Prefix tri -> c
    com.charredgames.chemify.problems.Prefix tetra -> d
    com.charredgames.chemify.problems.Prefix penta -> e
    com.charredgames.chemify.problems.Prefix hexa -> f
    com.charredgames.chemify.problems.Prefix hepta -> g
    com.charredgames.chemify.problems.Prefix octa -> h
    com.charredgames.chemify.problems.Prefix nona -> i
    com.charredgames.chemify.problems.Prefix deca -> j
    int value -> k
    java.lang.String printed -> l
    java.lang.String secondaryPrint -> m
    com.charredgames.chemify.problems.Prefix[] ENUM$VALUES -> n
    java.lang.String getPrinted() -> a
    java.lang.String getSecondary() -> b
    int getValue() -> c
    boolean stringMatchesPrefix(java.lang.String) -> a
    java.lang.String emitPrefix(java.lang.String) -> b
    com.charredgames.chemify.problems.Prefix[] values() -> values
    com.charredgames.chemify.problems.Prefix valueOf(java.lang.String) -> valueOf
com.charredgames.chemify.problems.Problem -> com.charredgames.chemify.c.g:
    java.lang.String input -> b
    com.charredgames.chemify.gui.ResponsePanel response -> c
    java.util.ArrayList elementGroups -> d
    java.lang.String reason -> e
    com.charredgames.chemify.problems.ResponseType type -> f
    com.charredgames.chemify.constant.Equation equation -> g
    java.lang.String getInput() -> a
    void solve(boolean) -> a
    com.charredgames.chemify.gui.ResponsePanel getResponse() -> b
    java.lang.String getFormattedDisplay(java.lang.String) -> a
    com.charredgames.chemify.constant.Compound correctAtomCount(com.charredgames.chemify.constant.Compound) -> a
    com.charredgames.chemify.constant.Equation getEquationFromString(java.lang.String) -> b
    java.util.ArrayList getCompoundsFromString(java.lang.String) -> c
    java.util.ArrayList getElementGroups(java.lang.String) -> d
    java.util.ArrayList getElementSets(java.lang.String) -> e
    java.lang.String changeEnding(java.lang.String,java.lang.String) -> a
    com.charredgames.chemify.constant.ElementGroup revertEnding(java.lang.String,boolean) -> a
    java.lang.String getAcidEnding(java.lang.String,boolean) -> b
    void addProblemToPanel(com.charredgames.chemify.gui.ResponsePanel,com.charredgames.chemify.problems.Problem) -> a
com.charredgames.chemify.problems.Reaction -> com.charredgames.chemify.c.h:
    void solve(boolean) -> a
com.charredgames.chemify.problems.ResponseType -> com.charredgames.chemify.c.i:
    com.charredgames.chemify.problems.ResponseType input -> a
    com.charredgames.chemify.problems.ResponseType answer -> b
    com.charredgames.chemify.problems.ResponseType element_info -> c
    com.charredgames.chemify.problems.ResponseType nomenclature -> d
    com.charredgames.chemify.problems.ResponseType weight -> e
    com.charredgames.chemify.problems.ResponseType dimensional_analysis -> f
    com.charredgames.chemify.problems.ResponseType reactions -> g
    com.charredgames.chemify.problems.ResponseType oxidation -> h
    com.charredgames.chemify.problems.ResponseType thermo -> i
    com.charredgames.chemify.problems.ResponseType stoichiometry -> j
    com.charredgames.chemify.problems.ResponseType hess -> k
    com.charredgames.chemify.problems.ResponseType ionic -> l
    com.charredgames.chemify.problems.ResponseType solubility -> m
    java.lang.String name -> n
    com.charredgames.chemify.problems.ResponseType[] ENUM$VALUES -> o
    java.lang.String getName() -> a
    com.charredgames.chemify.problems.ResponseType getTypeByString(java.lang.String) -> a
    com.charredgames.chemify.problems.ResponseType[] values() -> values
    com.charredgames.chemify.problems.ResponseType valueOf(java.lang.String) -> valueOf
com.charredgames.chemify.problems.Solubility -> com.charredgames.chemify.c.j:
    void solve(boolean) -> a
com.charredgames.chemify.problems.Weight -> com.charredgames.chemify.c.k:
    com.charredgames.chemify.problems.ResponseType type -> a
    void solve(boolean) -> a
com.google.ads.Ad -> com.google.ads.a:
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    com.google.ads.internal.a a -> a
    java.lang.Object b -> b
    com.google.ads.AdActivity c -> c
    com.google.ads.internal.d d -> d
    com.google.ads.AdActivity e -> e
    com.google.ads.AdActivity f -> f
    com.google.ads.AdActivity$StaticMethodWrapper g -> g
    com.google.ads.internal.AdWebView h -> h
    android.widget.FrameLayout i -> i
    int j -> j
    android.view.ViewGroup k -> k
    boolean l -> l
    long m -> m
    android.widget.RelativeLayout n -> n
    com.google.ads.AdActivity o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    com.google.ads.internal.AdVideoView t -> t
    android.view.View a(int,boolean) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    com.google.ads.internal.AdVideoView getAdVideoView() -> a
    boolean isShowing() -> b
    boolean leftApplication() -> c
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
    void a(java.util.HashMap,com.google.ads.internal.d) -> a
    void a(com.google.ads.internal.d) -> a
    com.google.ads.internal.AdVideoView a(android.app.Activity) -> a
    void moveAdVideoView(int,int,int,int) -> a
    void newAdVideoView(int,int,int,int) -> b
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(com.google.ads.internal.AdWebView,boolean,int,boolean,boolean) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void e() -> h
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void setCustomClose(boolean) -> a
    java.lang.Object a() -> d
    com.google.ads.AdActivity b() -> e
    com.google.ads.AdActivity c() -> f
    com.google.ads.internal.d d() -> g
    com.google.ads.internal.d b(com.google.ads.internal.d) -> b
com.google.ads.AdActivity$StaticMethodWrapper -> com.google.ads.b:
    boolean isShowing() -> a
    boolean leftApplication() -> b
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
com.google.ads.AdListener -> com.google.ads.c:
    void onReceiveAd(com.google.ads.Ad) -> a
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen(com.google.ads.Ad) -> b
    void onDismissScreen(com.google.ads.Ad) -> d
    void onLeaveApplication(com.google.ads.Ad) -> c
com.google.ads.AdRequest -> com.google.ads.d:
    java.text.SimpleDateFormat a -> b
    java.lang.reflect.Method b -> c
    java.lang.reflect.Method c -> d
    com.google.ads.AdRequest$Gender d -> e
    java.util.Date e -> f
    java.util.Set f -> g
    java.util.Map g -> h
    java.util.Map h -> i
    android.location.Location i -> j
    boolean j -> k
    boolean k -> l
    java.lang.String TEST_EMULATOR -> a
    java.util.Set l -> m
    com.google.ads.AdRequest setKeywords(java.util.Set) -> a
    com.google.ads.AdRequest addKeyword(java.lang.String) -> a
    com.google.ads.AdRequest setNetworkExtras(com.google.ads.mediation.NetworkExtras) -> a
    java.lang.Object getNetworkExtras(java.lang.Class) -> a
    java.util.Map getRequestMap(android.content.Context) -> a
    com.google.ads.AdRequest setTestDevices(java.util.Set) -> b
    boolean isTestDevice(android.content.Context) -> b
com.google.ads.AdRequest$ErrorCode -> com.google.ads.e:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> a
    com.google.ads.AdRequest$ErrorCode NO_FILL -> b
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> c
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> d
    java.lang.String a -> e
    com.google.ads.AdRequest$ErrorCode[] b -> f
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.f:
    com.google.ads.AdRequest$Gender UNKNOWN -> a
    com.google.ads.AdRequest$Gender MALE -> b
    com.google.ads.AdRequest$Gender FEMALE -> c
    com.google.ads.AdRequest$Gender[] a -> d
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.ads.g:
    com.google.ads.AdSize SMART_BANNER -> a
    com.google.ads.AdSize BANNER -> b
    com.google.ads.AdSize IAB_MRECT -> c
    com.google.ads.AdSize IAB_BANNER -> d
    com.google.ads.AdSize IAB_LEADERBOARD -> e
    com.google.ads.AdSize IAB_WIDE_SKYSCRAPER -> f
    int a -> g
    int b -> h
    boolean c -> i
    boolean d -> j
    boolean e -> k
    java.lang.String f -> l
    com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getWidth() -> a
    int getHeight() -> b
    boolean a() -> f
    boolean isFullWidth() -> c
    boolean isAutoHeight() -> d
    boolean isCustomAdSize() -> e
    java.lang.String toString() -> toString
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
com.google.ads.AdView -> com.google.ads.AdView:
    com.google.ads.internal.d a -> a
    com.google.ads.internal.a b -> b
    void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> b
    void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet) -> a
    com.google.ads.AdSize[] a(java.lang.String) -> a
    void a(android.content.Context,android.util.AttributeSet) -> a
    boolean a(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> a
    java.lang.String b(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> b
    java.util.Set c(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> c
    boolean a(java.lang.String,android.util.AttributeSet) -> a
    void a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    boolean isRefreshing() -> a
    void loadAd(com.google.ads.AdRequest) -> a
    void setAdListener(com.google.ads.AdListener) -> setAdListener
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void setSwipeableEventListener(com.google.ads.SwipeableAdListener) -> setSwipeableEventListener
    void setSupportedAdSizes(com.google.ads.AdSize[]) -> setSupportedAdSizes
    void a(com.google.ads.AdSize[]) -> a
    void onMeasure(int,int) -> onMeasure
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
com.google.ads.AppEventListener -> com.google.ads.h:
    void onAppEvent(com.google.ads.Ad,java.lang.String,java.lang.String) -> a
com.google.ads.InterstitialAd -> com.google.ads.i:
com.google.ads.SwipeableAdListener -> com.google.ads.j:
    void onAdActivated(com.google.ads.Ad) -> a
    void onAdDeactivated(com.google.ads.Ad) -> b
com.google.ads.a -> com.google.ads.k:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.HashMap e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.HashMap e() -> e
com.google.ads.aa -> com.google.ads.l:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ab -> com.google.ads.m:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ac -> com.google.ads.n:
    com.google.ads.internal.a a -> a
    int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics) -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ae -> com.google.ads.o:
    android.content.Context a -> a
    java.lang.String b -> b
    java.net.HttpURLConnection a(java.net.URL) -> a
    void run() -> run
com.google.ads.af -> com.google.ads.p:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.ag -> com.google.ads.q:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int M -> M
    int N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int aa -> aa
    int ab -> ab
    int ac -> ac
    int ad -> ad
    int ae -> ae
    int af -> af
    int ag -> ag
    int ah -> ah
    int ai -> ai
    int aj -> aj
    int ak -> ak
    int al -> al
    int am -> am
    int an -> an
    int ao -> ao
    int ap -> ap
    int aq -> aq
    int ar -> ar
    int as -> as
    int at -> at
    int au -> au
    int av -> av
    int aw -> aw
    int ax -> ax
    int ay -> ay
    int az -> az
    int aA -> aA
    int aB -> aB
    int aC -> aC
    int aD -> aD
    int aE -> aE
    int aF -> aF
    int aG -> aG
    int aH -> aH
    int aI -> aI
    int aJ -> aJ
    int aK -> aK
    int aL -> aL
    int aM -> aM
    int aN -> aN
    int aO -> aO
    int aP -> aP
    int aQ -> aQ
    int aR -> aR
    int aS -> aS
    int aT -> aT
    int aU -> aU
    int aV -> aV
    int aW -> aW
    int aX -> aX
    int aY -> aY
    int aZ -> aZ
    int ba -> ba
    int bb -> bb
    int bc -> bc
    int bd -> bd
    int be -> be
    int bf -> bf
    int bg -> bg
    int bh -> bh
    int bi -> bi
    int bj -> bj
    int bk -> bk
    int bl -> bl
    int bm -> bm
    int bn -> bn
    int bo -> bo
    int bp -> bp
    int bq -> bq
    int br -> br
    int bs -> bs
    int bt -> bt
    int bu -> bu
    int bv -> bv
    int bw -> bw
    int bx -> bx
    int by -> by
    int bz -> bz
    int bA -> bA
    int bB -> bB
    int bC -> bC
    int bD -> bD
    int bE -> bE
    int bF -> bF
    int bG -> bG
    int bH -> bH
    int bI -> bI
    int bJ -> bJ
    int bK -> bK
    int bL -> bL
    int bM -> bM
    int bN -> bN
    int bO -> bO
    int bP -> bP
    int bQ -> bQ
    int bR -> bR
    int bS -> bS
    int bT -> bT
    int bU -> bU
    int bV -> bV
    int bW -> bW
    int bX -> bX
    int bY -> bY
    int bZ -> bZ
    int ca -> ca
    int cb -> cb
    int cc -> cc
    int cd -> cd
    int ce -> ce
    int cf -> cf
    int cg -> cg
    int ch -> ch
    int ci -> ci
    int cj -> cj
    int ck -> ck
    int cl -> cl
    int cm -> cm
    int cn -> cn
    int co -> co
    int cp -> cp
    int cq -> cq
    int cr -> cr
    int cs -> cs
    int ct -> ct
    int cu -> cu
    int cv -> cv
    int cw -> cw
    int cx -> cx
    int cy -> cy
    int cz -> cz
    int cA -> cA
    int cB -> cB
    int cC -> cC
    int cD -> cD
    int cE -> cE
    int cF -> cF
    int cG -> cG
    int cH -> cH
    int cI -> cI
    int cJ -> cJ
    int cK -> cK
    int cL -> cL
    int cM -> cM
    com.google.ads.ag$a[] cN -> cN
    void a(byte[],byte[]) -> a
com.google.ads.ag$1 -> com.google.ads.r:
com.google.ads.ag$a -> com.google.ads.s:
    void a(byte[],byte[]) -> a
com.google.ads.ag$b -> com.google.ads.t:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$c -> com.google.ads.u:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$d -> com.google.ads.v:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$e -> com.google.ads.w:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$f -> com.google.ads.x:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$g -> com.google.ads.y:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$h -> com.google.ads.z:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$i -> com.google.ads.aa:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$j -> com.google.ads.ab:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$k -> com.google.ads.ac:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$l -> com.google.ads.ad:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$m -> com.google.ads.ae:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ah -> com.google.ads.af:
    java.lang.String[] a -> a
com.google.ads.ai -> com.google.ads.ag:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
com.google.ads.aj -> com.google.ads.ah:
    com.google.ads.au c -> c
    java.io.ByteArrayOutputStream d -> d
    android.view.MotionEvent a -> a
    android.util.DisplayMetrics b -> b
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.view.MotionEvent) -> a
    void a(int,int,int) -> a
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void a() -> a
    byte[] b() -> b
    java.lang.String a(byte[],java.lang.String) -> a
    void a(java.lang.String,byte[]) -> a
com.google.ads.ak -> com.google.ads.ai:
    java.lang.reflect.Method d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.reflect.Method h -> h
    java.lang.String i -> i
    long j -> j
    boolean c -> c
    com.google.ads.ak a(java.lang.String,android.content.Context) -> a
    void b(java.lang.String,android.content.Context) -> b
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String a() -> a
    java.lang.Long b() -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String c() -> c
    java.util.ArrayList a(android.view.MotionEvent,android.util.DisplayMetrics) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String b(byte[],java.lang.String) -> b
    void f(android.content.Context) -> f
com.google.ads.ak$a -> com.google.ads.aj:
com.google.ads.al -> com.google.ads.ak:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String[] c -> c
    com.google.ads.ai d -> d
    com.google.ads.ah e -> e
    boolean a(android.net.Uri) -> a
    void a(java.lang.String) -> a
    android.net.Uri a(android.net.Uri,android.content.Context) -> a
    android.net.Uri a(android.net.Uri,java.lang.String,java.lang.String) -> a
    android.net.Uri a(android.net.Uri,android.content.Context,java.lang.String,boolean) -> a
com.google.ads.am -> com.google.ads.al:
com.google.ads.an -> com.google.ads.am:
    void a(byte[]) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String) -> a
com.google.ads.an$a -> com.google.ads.an:
com.google.ads.ao -> com.google.ads.ao:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
com.google.ads.ap -> com.google.ads.ap:
com.google.ads.aq -> com.google.ads.aq:
    char[] a -> a
    char[] b -> b
    byte[] c -> c
    byte[] d -> d
    char[] a(byte[],int,int,char[],int,char[]) -> a
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],int,int,char[],boolean) -> a
    char[] a(byte[],int,int,char[],int) -> a
    int a(char[],int,byte[],int,byte[]) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(char[],int,int) -> a
    byte[] a(char[],int,int,byte[]) -> a
com.google.ads.ar -> com.google.ads.ar:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
com.google.ads.as -> com.google.ads.as:
    android.net.Uri a -> a
    java.lang.String[] b -> b
com.google.ads.at -> com.google.ads.at:
    com.google.ads.internal.a a -> a
    boolean a(android.content.Context,long) -> a
    boolean a(android.content.Context,long,android.content.SharedPreferences) -> a
    void a(android.app.Activity) -> a
com.google.ads.at$1 -> com.google.ads.au:
    android.content.Context a -> a
    void run() -> run
com.google.ads.at$a -> com.google.ads.av:
    java.lang.ref.WeakReference a -> a
    android.content.SharedPreferences$Editor b -> b
    android.content.SharedPreferences$Editor a(android.content.Context) -> a
    void run() -> run
com.google.ads.au -> com.google.ads.aw:
    byte[] a -> a
    int b -> b
    int c -> c
    int d -> d
    java.io.OutputStream e -> e
    com.google.ads.au a(java.io.OutputStream) -> a
    com.google.ads.au a(java.io.OutputStream,int) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void a(long) -> a
    void a(java.lang.String) -> a
    void b() -> b
    void a() -> a
    void a(byte) -> a
    void a(int) -> a
    void a(byte[]) -> a
    void a(byte[],int,int) -> a
    void a(int,int) -> a
    void b(int) -> b
    void b(long) -> b
com.google.ads.au$a -> com.google.ads.ax:
com.google.ads.av -> com.google.ads.ay:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int a(int,int) -> a
com.google.ads.b -> com.google.ads.az:
    java.math.BigInteger a -> a
    java.math.BigInteger b -> b
    com.google.ads.b c -> c
    com.google.ads.b a() -> a
    java.math.BigInteger b() -> b
    java.math.BigInteger c() -> c
    java.math.BigInteger d() -> d
    byte[] a(long) -> a
com.google.ads.c -> com.google.ads.ba:
    java.util.Map a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.lang.Integer e -> e
    java.lang.Integer f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.util.List i -> i
    com.google.ads.c a(java.lang.String) -> a
    boolean a() -> a
    int b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    int e() -> e
    java.util.List f() -> f
    java.util.List g() -> g
    java.util.List h() -> h
    java.util.List i() -> i
    com.google.ads.a a(org.json.JSONObject) -> a
    com.google.ads.internal.h j() -> j
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
com.google.ads.c$1 -> com.google.ads.bb:
com.google.ads.d -> com.google.ads.bc:
    com.google.ads.c a -> a
    long b -> b
    boolean a() -> a
    void a(com.google.ads.c,int) -> a
    com.google.ads.c b() -> b
com.google.ads.doubleclick.DfpAdView -> com.google.ads.a.a:
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void setSupportedAdSizes(com.google.ads.AdSize[]) -> setSupportedAdSizes
com.google.ads.doubleclick.DfpExtras -> com.google.ads.a.b:
    java.lang.String a -> a
    java.lang.String getPublisherProvidedId() -> a
    com.google.ads.doubleclick.DfpExtras clearExtras() -> b
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> c
com.google.ads.doubleclick.SwipeableDfpAdView -> com.google.ads.a.c:
    void setSwipeableEventListener(com.google.ads.SwipeableAdListener) -> setSwipeableEventListener
com.google.ads.e -> com.google.ads.bd:
    com.google.ads.internal.d a -> a
    com.google.ads.h b -> b
    java.lang.Object c -> c
    java.lang.Thread d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.lang.Object g -> g
    boolean a() -> a
    void a(com.google.ads.c,com.google.ads.AdRequest) -> a
    boolean a(com.google.ads.c,com.google.ads.internal.d) -> a
    boolean d() -> b
    void b(com.google.ads.c,com.google.ads.AdRequest) -> b
    boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long) -> a
    boolean e(com.google.ads.h) -> b
    void d(com.google.ads.h) -> a
    void a(com.google.ads.e,com.google.ads.c,com.google.ads.AdRequest) -> a
    java.lang.Object a(com.google.ads.e) -> a
    java.lang.Thread a(com.google.ads.e,java.lang.Thread) -> a
    com.google.ads.internal.d b(com.google.ads.e) -> b
    boolean a(com.google.ads.e,com.google.ads.h) -> a
com.google.ads.e$1 -> com.google.ads.be:
    com.google.ads.c a -> a
    com.google.ads.AdRequest b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$7 -> com.google.ads.bf:
    com.google.ads.c a -> a
    com.google.ads.e b -> b
    void run() -> run
com.google.ads.e$8 -> com.google.ads.bg:
    com.google.ads.h a -> a
    android.view.View b -> b
    com.google.ads.f c -> c
    com.google.ads.e d -> d
    void run() -> run
com.google.ads.f -> com.google.ads.bh:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.util.List d() -> d
com.google.ads.g -> com.google.ads.bi:
    java.lang.String a(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object a(java.lang.String,java.lang.Class) -> a
com.google.ads.g$a -> com.google.ads.bj:
    com.google.ads.g$a a -> a
    com.google.ads.g$a b -> b
    com.google.ads.g$a c -> c
    com.google.ads.g$a d -> d
    com.google.ads.g$a e -> e
    com.google.ads.g$a f -> f
    com.google.ads.g$a[] g -> g
    com.google.ads.g$a[] values() -> values
    com.google.ads.g$a valueOf(java.lang.String) -> valueOf
com.google.ads.h -> com.google.ads.bk:
    com.google.ads.internal.h a -> a
    com.google.ads.f b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.g$a e -> e
    com.google.ads.e f -> f
    com.google.ads.mediation.MediationAdapter g -> g
    boolean h -> h
    boolean i -> i
    android.view.View j -> j
    java.lang.String k -> k
    com.google.ads.AdRequest l -> l
    java.util.HashMap m -> m
    void a(android.app.Activity) -> a
    void b() -> a
    boolean c() -> b
    boolean d() -> c
    com.google.ads.g$a e() -> d
    android.view.View f() -> e
    java.lang.String h() -> f
    void a(boolean,com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
    void k() -> g
    boolean l() -> h
    com.google.ads.mediation.MediationAdapter a(com.google.ads.h) -> a
com.google.ads.h$1 -> com.google.ads.bl:
    com.google.ads.h a -> a
    void run() -> run
com.google.ads.i -> com.google.ads.bm:
    com.google.ads.h a -> a
    java.lang.String b -> b
    com.google.ads.AdRequest c -> c
    java.util.HashMap d -> d
    boolean e -> e
    java.lang.ref.WeakReference f -> f
    boolean a(java.util.Map) -> a
    void run() -> run
    void a(java.lang.String,java.lang.Throwable,com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
com.google.ads.i$a -> com.google.ads.bn:
com.google.ads.internal.ActivationOverlay -> com.google.ads.b.a:
    boolean b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.google.ads.internal.i f -> f
    void setOverlayEnabled(boolean) -> setOverlayEnabled
    void setOverlayActivated(boolean) -> setOverlayActivated
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    void setYPosition(int) -> setYPosition
    int d() -> d
    void setXPosition(int) -> setXPosition
    com.google.ads.internal.i e() -> e
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.internal.ActivationOverlay$1 -> com.google.ads.b.b:
    com.google.ads.internal.ActivationOverlay a -> a
    com.google.ads.internal.ActivationOverlay b -> b
    void run() -> run
com.google.ads.internal.AdVideoView -> com.google.ads.b.c:
    com.google.ads.internal.a b -> b
    java.lang.ref.WeakReference c -> c
    com.google.ads.internal.AdWebView d -> d
    android.widget.MediaController a -> a
    long e -> e
    android.widget.VideoView f -> f
    java.lang.String g -> g
    void a() -> a
    void b() -> b
    void setMediaControllerEnabled(boolean) -> setMediaControllerEnabled
    void setSrc(java.lang.String) -> setSrc
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void c() -> c
    void d() -> d
    void a(int) -> a
    void a(android.view.MotionEvent) -> a
    void e() -> e
    void f() -> f
com.google.ads.internal.AdVideoView$a -> com.google.ads.b.d:
    java.lang.ref.WeakReference a -> a
    void run() -> run
    void a() -> a
com.google.ads.internal.AdWebView -> com.google.ads.b.e:
    java.lang.ref.WeakReference b -> b
    com.google.ads.AdSize c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.google.ads.n a -> a
    void f() -> f
    void g() -> g
    void h() -> h
    com.google.ads.AdActivity i() -> i
    boolean j() -> j
    boolean k() -> k
    void setAdActivity(com.google.ads.AdActivity) -> setAdActivity
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void loadUrl(java.lang.String) -> loadUrl
    void stopLoading() -> stopLoading
    void destroy() -> destroy
    void setAdSize(com.google.ads.AdSize) -> setAdSize
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setCustomClose(boolean) -> setCustomClose
    void setIsExpandedMraid(boolean) -> setIsExpandedMraid
    void a(boolean) -> a
com.google.ads.internal.AdWebView$1 -> com.google.ads.b.f:
    com.google.ads.internal.AdWebView a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.google.ads.internal.AdWebView$2 -> com.google.ads.b.g:
    com.google.ads.internal.AdWebView a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.ads.internal.a -> com.google.ads.b.h:
    com.google.ads.internal.a e -> e
    com.google.ads.util.f a -> a
    java.util.Map b -> b
    java.util.Map c -> c
    java.util.Map d -> d
    java.lang.String a(android.net.Uri,java.util.HashMap) -> a
    void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.util.Map) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
    com.google.ads.internal.a a() -> a
com.google.ads.internal.a$1 -> com.google.ads.b.i:
com.google.ads.internal.a$2 -> com.google.ads.b.j:
    com.google.ads.internal.a a() -> a
    java.lang.Object b() -> b
com.google.ads.internal.a$3 -> com.google.ads.b.k:
com.google.ads.internal.a$4 -> com.google.ads.b.l:
com.google.ads.internal.b -> com.google.ads.b.m:
    boolean a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.google.ads.internal.c -> com.google.ads.b.n:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    com.google.ads.internal.f g -> g
    com.google.ads.AdRequest h -> h
    android.webkit.WebView i -> i
    com.google.ads.l j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.util.LinkedList m -> m
    java.lang.String n -> n
    com.google.ads.AdSize o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    com.google.ads.AdRequest$ErrorCode s -> s
    boolean t -> t
    int u -> u
    java.lang.Thread v -> v
    boolean w -> w
    com.google.ads.internal.c$d x -> x
    boolean a -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a(com.google.ads.AdRequest) -> a
    void run() -> run
    void b() -> a
    void a(java.lang.String,com.google.ads.c,com.google.ads.d) -> a
    java.lang.String a(java.util.Map,android.app.Activity) -> a
    java.lang.String d() -> c
    java.lang.String e() -> d
    java.lang.String f() -> e
    java.lang.String g() -> f
    java.lang.String h() -> g
    void a(com.google.ads.AdRequest$ErrorCode,boolean) -> a
    void b(java.lang.String,java.lang.String) -> b
    void i() -> h
    void j() -> i
    void b(boolean) -> b
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void a(com.google.ads.AdSize) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void c() -> b
    void c(boolean) -> c
    void a(int) -> a
    void d(boolean) -> d
    void a(com.google.ads.internal.c$d) -> a
    void e(boolean) -> e
    boolean a(com.google.ads.internal.c) -> a
    com.google.ads.l b(com.google.ads.internal.c) -> b
    java.lang.String c(com.google.ads.internal.c) -> c
    android.webkit.WebView d(com.google.ads.internal.c) -> d
    java.lang.String e(com.google.ads.internal.c) -> e
    com.google.ads.AdSize f(com.google.ads.internal.c) -> f
com.google.ads.internal.c$1 -> com.google.ads.b.o:
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$2 -> com.google.ads.b.p:
    com.google.ads.c a -> a
    com.google.ads.internal.c b -> b
    void run() -> run
com.google.ads.internal.c$3 -> com.google.ads.b.q:
    int[] a -> a
com.google.ads.internal.c$a -> com.google.ads.b.r:
    com.google.ads.internal.d a -> a
    android.webkit.WebView b -> b
    com.google.ads.internal.f c -> c
    com.google.ads.AdRequest$ErrorCode d -> d
    boolean e -> e
    void run() -> run
com.google.ads.internal.c$b -> com.google.ads.b.s:
    com.google.ads.internal.c a -> a
com.google.ads.internal.c$c -> com.google.ads.b.t:
    java.lang.String b -> b
    java.lang.String c -> c
    android.webkit.WebView d -> d
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$d -> com.google.ads.b.u:
    com.google.ads.internal.c$d a -> a
    com.google.ads.internal.c$d b -> b
    com.google.ads.internal.c$d c -> c
    com.google.ads.internal.c$d d -> d
    java.lang.String e -> e
    com.google.ads.internal.c$d[] f -> f
    com.google.ads.internal.c$d[] values() -> values
    com.google.ads.internal.c$d valueOf(java.lang.String) -> valueOf
com.google.ads.internal.c$e -> com.google.ads.b.v:
    com.google.ads.internal.d b -> b
    android.webkit.WebView c -> c
    java.util.LinkedList d -> d
    int e -> e
    boolean f -> f
    java.lang.String g -> g
    com.google.ads.AdSize h -> h
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.d -> com.google.ads.b.w:
    java.lang.Object a -> a
    com.google.ads.n b -> b
    com.google.ads.internal.c c -> c
    com.google.ads.AdRequest d -> d
    com.google.ads.internal.g e -> e
    com.google.ads.internal.AdWebView f -> f
    com.google.ads.internal.i g -> g
    boolean h -> h
    long i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.content.SharedPreferences o -> o
    long p -> p
    com.google.ads.af q -> q
    boolean r -> r
    java.util.LinkedList s -> s
    java.util.LinkedList t -> t
    java.util.LinkedList u -> u
    int v -> v
    java.lang.Boolean w -> w
    com.google.ads.d x -> x
    com.google.ads.e y -> y
    com.google.ads.f z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    void a() -> a
    void a(java.lang.String) -> a
    java.lang.String c() -> b
    java.lang.String d() -> c
    void e() -> d
    void f() -> e
    void g() -> f
    void h() -> g
    com.google.ads.n i() -> h
    com.google.ads.d j() -> i
    com.google.ads.internal.c k() -> j
    com.google.ads.internal.AdWebView l() -> k
    com.google.ads.internal.i m() -> l
    com.google.ads.internal.g n() -> m
    void a(int) -> a
    int o() -> n
    long p() -> o
    boolean q() -> p
    boolean r() -> q
    boolean t() -> r
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void a(com.google.ads.c) -> a
    void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean) -> a
    void b(com.google.ads.c) -> b
    void u() -> s
    void v() -> t
    void w() -> u
    void a(java.lang.String,java.lang.String) -> a
    void x() -> v
    void a(com.google.ads.f,java.lang.Boolean) -> a
    void a(java.util.List,java.lang.String) -> a
    void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String) -> a
    void y() -> w
    void A() -> x
    void a(long) -> a
    void a(boolean) -> a
    void a(android.view.View) -> a
    void a(float) -> a
    void b(long) -> b
    void D() -> y
    void E() -> z
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(java.util.LinkedList) -> a
    void b(boolean) -> b
    void a(com.google.ads.l,boolean,int,int,int,int) -> a
    void a(int,int,int,int) -> a
    java.util.LinkedList F() -> A
com.google.ads.internal.e -> com.google.ads.b.x:
    java.lang.String a -> a
    java.util.HashMap b -> b
    java.util.HashMap a(java.io.Serializable) -> a
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
com.google.ads.internal.f -> com.google.ads.b.y:
    com.google.ads.l a -> a
    com.google.ads.internal.f$a b -> b
    boolean c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.Thread f -> f
    void a() -> a
    void a(java.net.HttpURLConnection) -> a
    void b(java.net.HttpURLConnection) -> b
    void c(java.net.HttpURLConnection) -> c
    void d(java.net.HttpURLConnection) -> d
    void e(java.net.HttpURLConnection) -> e
    void f(java.net.HttpURLConnection) -> f
    void g(java.net.HttpURLConnection) -> g
    void h(java.net.HttpURLConnection) -> h
    void i(java.net.HttpURLConnection) -> i
    void j(java.net.HttpURLConnection) -> j
    void k(java.net.HttpURLConnection) -> k
    void a(boolean) -> a
    void l(java.net.HttpURLConnection) -> l
    void m(java.net.HttpURLConnection) -> m
    void n(java.net.HttpURLConnection) -> n
    void a(java.lang.String) -> a
    void a(java.net.HttpURLConnection,int) -> a
    void run() -> run
    void b() -> b
    void a(android.content.Context,java.net.HttpURLConnection) -> a
com.google.ads.internal.f$1 -> com.google.ads.b.z:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.f$a -> com.google.ads.b.aa:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.g -> com.google.ads.b.ab:
    java.util.LinkedList a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.LinkedList e -> e
    long f -> f
    long g -> g
    long h -> h
    long i -> i
    long j -> j
    boolean k -> k
    boolean l -> l
    java.lang.String m -> m
    long n -> n
    java.util.LinkedList o -> o
    java.util.LinkedList p -> p
    void a() -> a
    void b() -> b
    void c() -> c
    void a(com.google.ads.g$a) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    long j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    long m() -> m
    long n() -> n
    long o() -> o
    long p() -> p
    void q() -> q
    void r() -> r
    long s() -> s
    void t() -> t
    void u() -> u
    long v() -> v
    void w() -> w
    void x() -> x
    boolean y() -> y
    void z() -> z
    boolean A() -> A
    void B() -> B
    void C() -> C
    java.lang.String D() -> D
    void a(java.lang.String) -> a
    long E() -> E
com.google.ads.internal.h -> com.google.ads.b.ac:
    com.google.ads.AdSize b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.internal.h a -> a
    com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context) -> a
    com.google.ads.internal.h a(com.google.ads.AdSize) -> a
    boolean a() -> a
    boolean b() -> b
    com.google.ads.AdSize c() -> c
    void b(com.google.ads.AdSize) -> b
    void a(boolean) -> a
com.google.ads.internal.i -> com.google.ads.b.ad:
    com.google.ads.internal.a c -> c
    com.google.ads.internal.d a -> a
    java.util.Map d -> d
    boolean b -> b
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    boolean a() -> a
com.google.ads.internal.j -> com.google.ads.b.ae:
    java.lang.String a -> a
    android.content.Context b -> b
    java.net.HttpURLConnection a(java.net.URL) -> a
    java.io.BufferedOutputStream a(java.net.HttpURLConnection) -> a
    void run() -> run
com.google.ads.internal.j$a -> com.google.ads.b.af:
    java.lang.String a -> a
    org.json.JSONObject a() -> a
com.google.ads.internal.k -> com.google.ads.b.ag:
    byte[] a -> a
    android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d) -> a
com.google.ads.internal.k$a -> com.google.ads.b.ah:
    android.gesture.GestureStore a -> a
    android.app.Activity b -> b
    com.google.ads.internal.d c -> c
    void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture) -> onGesturePerformed
    com.google.ads.internal.d a(com.google.ads.internal.k$a) -> a
    android.app.Activity b(com.google.ads.internal.k$a) -> b
com.google.ads.internal.k$a$1 -> com.google.ads.b.ai:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$2 -> com.google.ads.b.aj:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$3 -> com.google.ads.b.ak:
    java.lang.String a -> a
    com.google.ads.internal.k$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.j -> com.google.ads.bo:
    com.google.ads.h a -> a
com.google.ads.k -> com.google.ads.bp:
    com.google.ads.h a -> a
com.google.ads.l -> com.google.ads.bq:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
com.google.ads.m -> com.google.ads.br:
    com.google.ads.m d -> d
    com.google.ads.util.i$c a -> a
    com.google.ads.util.i$b b -> b
    com.google.ads.util.i$b c -> c
    com.google.ads.m a() -> a
com.google.ads.m$a -> com.google.ads.bs:
    com.google.ads.util.i$c a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
    com.google.ads.util.i$c d -> d
    com.google.ads.util.i$c e -> e
    com.google.ads.util.i$c f -> f
    com.google.ads.util.i$c g -> g
    com.google.ads.util.i$c h -> h
    com.google.ads.util.i$c i -> i
    com.google.ads.util.i$c j -> j
    com.google.ads.util.i$c k -> k
    com.google.ads.util.i$c l -> l
    com.google.ads.util.i$c m -> m
    com.google.ads.util.i$c n -> n
    com.google.ads.util.i$c o -> o
com.google.ads.mediation.MediationAdRequest -> com.google.ads.c.a:
    com.google.ads.AdRequest a -> a
    boolean b -> b
    boolean c -> c
com.google.ads.mediation.MediationAdapter -> com.google.ads.c.b:
    void destroy() -> a
    java.lang.Class getAdditionalParametersType() -> b
    java.lang.Class getServerParametersType() -> c
com.google.ads.mediation.MediationBannerAdapter -> com.google.ads.c.c:
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
com.google.ads.mediation.MediationBannerListener -> com.google.ads.c.d:
com.google.ads.mediation.MediationInterstitialAdapter -> com.google.ads.c.e:
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
com.google.ads.mediation.MediationInterstitialListener -> com.google.ads.c.f:
com.google.ads.mediation.MediationServerParameters -> com.google.ads.c.g:
    void load(java.util.Map) -> a
    void a() -> a
com.google.ads.mediation.MediationServerParameters$MappingException -> com.google.ads.c.h:
com.google.ads.mediation.MediationServerParameters$Parameter -> com.google.ads.c.i:
    java.lang.String name() -> a
    boolean required() -> b
com.google.ads.mediation.NetworkExtras -> com.google.ads.c.j:
com.google.ads.mediation.admob.AdMobAdapterExtras -> com.google.ads.c.a.a:
    boolean a -> a
    java.util.Map b -> b
    java.util.Map getExtras() -> d
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> c
com.google.ads.n -> com.google.ads.bt:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$b b -> b
    com.google.ads.util.i$d c -> c
    com.google.ads.util.i$b d -> d
    com.google.ads.util.i$b e -> e
    com.google.ads.util.i$b f -> f
    com.google.ads.util.i$b g -> g
    com.google.ads.util.i$b h -> h
    com.google.ads.util.i$b i -> i
    com.google.ads.util.i$b j -> j
    com.google.ads.util.i$b k -> k
    com.google.ads.util.i$c l -> l
    com.google.ads.util.i$c m -> m
    com.google.ads.util.i$c n -> n
    com.google.ads.util.i$c o -> o
    com.google.ads.util.i$c p -> p
    com.google.ads.util.i$c q -> q
    com.google.ads.util.i$c r -> r
    com.google.ads.util.i$c s -> s
    com.google.ads.util.i$c t -> t
    boolean a() -> a
    boolean b() -> b
com.google.ads.o -> com.google.ads.bu:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.p -> com.google.ads.bv:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.q -> com.google.ads.bw:
    com.google.ads.internal.a a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.r -> com.google.ads.bx:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.s -> com.google.ads.by:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.searchads.SearchAdRequest -> com.google.ads.d.a:
    java.lang.String a -> b
    int b -> c
    int c -> d
    int d -> e
    int e -> f
    int f -> g
    int g -> h
    java.lang.String h -> i
    int i -> j
    int j -> k
    com.google.ads.searchads.SearchAdRequest$BorderType k -> l
    int l -> m
    java.lang.String m -> n
    java.util.Map getRequestMap(android.content.Context) -> a
    java.lang.String a(int) -> a
com.google.ads.searchads.SearchAdRequest$BorderType -> com.google.ads.d.b:
    com.google.ads.searchads.SearchAdRequest$BorderType NONE -> a
    com.google.ads.searchads.SearchAdRequest$BorderType DASHED -> b
    com.google.ads.searchads.SearchAdRequest$BorderType DOTTED -> c
    com.google.ads.searchads.SearchAdRequest$BorderType SOLID -> d
    java.lang.String a -> e
    com.google.ads.searchads.SearchAdRequest$BorderType[] b -> f
    com.google.ads.searchads.SearchAdRequest$BorderType[] values() -> values
    com.google.ads.searchads.SearchAdRequest$BorderType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.t -> com.google.ads.bz:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.u -> com.google.ads.ca:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.util.AdUtil -> com.google.ads.util.AdUtil:
    int a -> a
    java.lang.Boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.media.AudioManager f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    boolean a(android.content.Intent,android.content.Context) -> a
    java.lang.String a(java.lang.Readable) -> a
    int a(java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    boolean b(android.content.Context) -> b
    boolean a(int,int,java.lang.String) -> a
    boolean c(android.content.Context) -> c
    boolean c() -> c
    boolean a(com.google.ads.util.d) -> a
    boolean a(android.net.Uri) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    com.google.ads.util.AdUtil$a g(android.content.Context) -> g
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.util.HashMap a(android.location.Location) -> a
    java.util.HashMap b(android.net.Uri) -> b
    boolean d() -> d
    void a(boolean) -> a
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    void a(android.webkit.WebView) -> a
    void a(java.net.HttpURLConnection,android.content.Context) -> a
    java.lang.String a(java.util.Map) -> a
    org.json.JSONObject b(java.util.Map) -> b
    org.json.JSONArray a(java.util.Set) -> a
    int a(android.content.Context,int) -> a
com.google.ads.util.AdUtil$UserActivityReceiver -> com.google.ads.util.AdUtil$UserActivityReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.ads.util.AdUtil$a -> com.google.ads.util.a:
    com.google.ads.util.AdUtil$a a -> a
    com.google.ads.util.AdUtil$a b -> b
    com.google.ads.util.AdUtil$a c -> c
    com.google.ads.util.AdUtil$a d -> d
    com.google.ads.util.AdUtil$a e -> e
    com.google.ads.util.AdUtil$a f -> f
    com.google.ads.util.AdUtil$a[] g -> g
    com.google.ads.util.AdUtil$a[] values() -> values
    com.google.ads.util.AdUtil$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.IcsUtil -> com.google.ads.util.b:
com.google.ads.util.IcsUtil$IcsAdWebView -> com.google.ads.util.c:
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.util.IcsUtil$a -> com.google.ads.util.d:
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
com.google.ads.util.a -> com.google.ads.util.e:
    boolean a -> a
    void a(boolean,java.lang.String) -> a
    void b(boolean) -> a
    void b(boolean,java.lang.String) -> b
    void b(java.lang.Object) -> a
    void a(java.lang.Object,java.lang.Object) -> a
    void a(java.lang.String) -> a
    void c(boolean,java.lang.String) -> c
com.google.ads.util.a$a -> com.google.ads.util.f:
com.google.ads.util.b -> com.google.ads.util.g:
    com.google.ads.util.b$b a -> a
    int b -> b
    void a(com.google.ads.util.b$a,java.lang.String) -> a
    void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String) -> c
    void c(java.lang.String,java.lang.Throwable) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void d(java.lang.String,java.lang.Throwable) -> d
    boolean a(java.lang.String,int) -> a
    boolean a(int) -> a
com.google.ads.util.b$a -> com.google.ads.util.h:
    com.google.ads.util.b$a a -> a
    com.google.ads.util.b$a b -> b
    com.google.ads.util.b$a c -> c
    com.google.ads.util.b$a d -> d
    com.google.ads.util.b$a e -> e
    int f -> f
    com.google.ads.util.b$a[] g -> g
    com.google.ads.util.b$a[] values() -> values
    com.google.ads.util.b$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.b$b -> com.google.ads.util.i:
    void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable) -> a
com.google.ads.util.c -> com.google.ads.util.j:
    boolean a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
com.google.ads.util.c$a -> com.google.ads.util.k:
    byte[] a -> a
    int b -> b
com.google.ads.util.c$b -> com.google.ads.util.l:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a(byte[],int,int,boolean) -> a
com.google.ads.util.d -> com.google.ads.util.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.google.ads.util.d d -> d
    com.google.ads.util.d e -> e
    com.google.ads.util.d f -> f
    boolean equals(java.lang.Object) -> equals
    boolean a(java.lang.String,java.lang.String) -> a
    int hashCode() -> hashCode
com.google.ads.util.e -> com.google.ads.util.n:
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    int a(android.content.Context,float,int) -> a
    void a(android.content.Intent,java.lang.String) -> a
com.google.ads.util.f -> com.google.ads.util.o:
    java.lang.Object b() -> b
com.google.ads.util.g -> com.google.ads.util.p:
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
    void a(android.view.View) -> a
    void b(android.view.View) -> b
    void a(android.view.Window) -> a
com.google.ads.util.g$1 -> com.google.ads.util.q:
    int[] a -> a
com.google.ads.util.g$a -> com.google.ads.util.r:
    com.google.ads.n a -> a
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean) -> a
    void a(android.app.AlertDialog$Builder,java.lang.String,android.webkit.JsResult) -> a
    void a(android.app.AlertDialog$Builder,android.content.Context,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> a
com.google.ads.util.g$a$1 -> com.google.ads.util.s:
    android.webkit.JsResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$2 -> com.google.ads.util.t:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$3 -> com.google.ads.util.u:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$4 -> com.google.ads.util.v:
    android.webkit.JsPromptResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$5 -> com.google.ads.util.w:
    android.webkit.JsPromptResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$6 -> com.google.ads.util.x:
    android.webkit.JsPromptResult a -> a
    android.widget.EditText b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$b -> com.google.ads.util.y:
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    android.webkit.WebResourceResponse a(java.lang.String,android.content.Context) -> a
com.google.ads.util.h -> com.google.ads.util.z:
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
com.google.ads.util.i -> com.google.ads.util.aa:
    java.lang.Object a -> a
    int b -> b
    java.util.HashMap c -> c
    int u -> u
    java.util.ArrayList d -> d
    void finalize() -> finalize
    java.lang.String toString() -> toString
    void a(com.google.ads.util.i$a) -> a
    void a(com.google.ads.util.i,com.google.ads.util.i$a) -> a
com.google.ads.util.i$1 -> com.google.ads.util.ab:
com.google.ads.util.i$a -> com.google.ads.util.ac:
    java.lang.Object a -> a
    java.lang.String b -> b
    com.google.ads.util.i c -> c
    java.lang.String toString() -> toString
com.google.ads.util.i$b -> com.google.ads.util.ad:
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$c -> com.google.ads.util.ae:
    boolean e -> e
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    void a(java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$d -> com.google.ads.util.af:
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.v -> com.google.ads.cb:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.w -> com.google.ads.cc:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.x -> com.google.ads.cd:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
    void a(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> a
    void b(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> b
    void c(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> c
com.google.ads.y -> com.google.ads.ce:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.z -> com.google.ads.cf:
    com.google.ads.AdActivity$StaticMethodWrapper a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
org.jdom2.Attribute -> org.jdom2.Attribute:
    long serialVersionUID -> serialVersionUID
    org.jdom2.AttributeType UNDECLARED_TYPE -> UNDECLARED_TYPE
    org.jdom2.AttributeType CDATA_TYPE -> CDATA_TYPE
    org.jdom2.AttributeType ID_TYPE -> ID_TYPE
    org.jdom2.AttributeType IDREF_TYPE -> IDREF_TYPE
    org.jdom2.AttributeType IDREFS_TYPE -> IDREFS_TYPE
    org.jdom2.AttributeType ENTITY_TYPE -> ENTITY_TYPE
    org.jdom2.AttributeType ENTITIES_TYPE -> ENTITIES_TYPE
    org.jdom2.AttributeType NMTOKEN_TYPE -> NMTOKEN_TYPE
    org.jdom2.AttributeType NMTOKENS_TYPE -> NMTOKENS_TYPE
    org.jdom2.AttributeType NOTATION_TYPE -> NOTATION_TYPE
    org.jdom2.AttributeType ENUMERATED_TYPE -> ENUMERATED_TYPE
    java.lang.String name -> name
    org.jdom2.Namespace namespace -> namespace
    java.lang.String value -> value
    org.jdom2.AttributeType type -> type
    boolean specified -> specified
    org.jdom2.Element parent -> parent
    org.jdom2.Element getParent() -> getParent
    org.jdom2.Document getDocument() -> getDocument
    java.lang.String getName() -> getName
    org.jdom2.Attribute setName(java.lang.String) -> setName
    java.lang.String getQualifiedName() -> getQualifiedName
    java.lang.String getNamespacePrefix() -> getNamespacePrefix
    java.lang.String getNamespaceURI() -> getNamespaceURI
    org.jdom2.Namespace getNamespace() -> getNamespace
    org.jdom2.Attribute setNamespace(org.jdom2.Namespace) -> setNamespace
    java.lang.String getValue() -> getValue
    org.jdom2.Attribute setValue(java.lang.String) -> setValue
    org.jdom2.AttributeType getAttributeType() -> getAttributeType
    org.jdom2.Attribute setAttributeType(org.jdom2.AttributeType) -> setAttributeType
    org.jdom2.Attribute setAttributeType(int) -> setAttributeType
    boolean isSpecified() -> isSpecified
    void setSpecified(boolean) -> setSpecified
    java.lang.String toString() -> toString
    org.jdom2.Attribute clone() -> clone
    org.jdom2.Attribute detach() -> detach
    org.jdom2.Attribute setParent(org.jdom2.Element) -> setParent
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    boolean getBooleanValue() -> getBooleanValue
    java.util.List getNamespacesInScope() -> getNamespacesInScope
    java.util.List getNamespacesIntroduced() -> getNamespacesIntroduced
    java.util.List getNamespacesInherited() -> getNamespacesInherited
    java.util.List orderFirst(org.jdom2.Namespace,java.util.List) -> orderFirst
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
org.jdom2.AttributeList -> org.jdom2.AttributeList:
    int INITIAL_ARRAY_SIZE -> INITIAL_ARRAY_SIZE
    org.jdom2.Attribute[] attributeData -> attributeData
    int size -> size
    org.jdom2.Element parent -> parent
    void uncheckedAddAttribute(org.jdom2.Attribute) -> uncheckedAddAttribute
    boolean add(org.jdom2.Attribute) -> add
    void add(int,org.jdom2.Attribute) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void clear() -> clear
    void clearAndSet(java.util.Collection) -> clearAndSet
    void ensureCapacity(int) -> ensureCapacity
    org.jdom2.Attribute get(int) -> get
    org.jdom2.Attribute get(java.lang.String,org.jdom2.Namespace) -> get
    int indexOf(java.lang.String,org.jdom2.Namespace) -> indexOf
    org.jdom2.Attribute remove(int) -> remove
    boolean remove(java.lang.String,org.jdom2.Namespace) -> remove
    org.jdom2.Attribute set(int,org.jdom2.Attribute) -> set
    int indexOfDuplicate(org.jdom2.Attribute) -> indexOfDuplicate
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.String toString() -> toString
    int binarySearch(int[],int,int,java.util.Comparator) -> binarySearch
    void sortInPlace(int[]) -> sortInPlace
    void sort(java.util.Comparator) -> sort
    java.lang.Object remove(int) -> remove
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
    boolean add(java.lang.Object) -> add
    int access$100(org.jdom2.AttributeList) -> access$100
    int access$200(org.jdom2.AttributeList) -> access$200
    int access$300(org.jdom2.AttributeList) -> access$300
    org.jdom2.Attribute[] access$400(org.jdom2.AttributeList) -> access$400
    int access$500(org.jdom2.AttributeList) -> access$500
    int access$600(org.jdom2.AttributeList) -> access$600
org.jdom2.AttributeList$1 -> org.jdom2.AttributeList$1:
org.jdom2.AttributeList$ALIterator -> org.jdom2.AttributeList$ALIterator:
    int expect -> expect
    int cursor -> cursor
    boolean canremove -> canremove
    org.jdom2.AttributeList this$0 -> this$0
    boolean hasNext() -> hasNext
    org.jdom2.Attribute next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jdom2.AttributeType -> org.jdom2.AttributeType:
    org.jdom2.AttributeType UNDECLARED -> UNDECLARED
    org.jdom2.AttributeType CDATA -> CDATA
    org.jdom2.AttributeType ID -> ID
    org.jdom2.AttributeType IDREF -> IDREF
    org.jdom2.AttributeType IDREFS -> IDREFS
    org.jdom2.AttributeType ENTITY -> ENTITY
    org.jdom2.AttributeType ENTITIES -> ENTITIES
    org.jdom2.AttributeType NMTOKEN -> NMTOKEN
    org.jdom2.AttributeType NMTOKENS -> NMTOKENS
    org.jdom2.AttributeType NOTATION -> NOTATION
    org.jdom2.AttributeType ENUMERATION -> ENUMERATION
    org.jdom2.AttributeType[] $VALUES -> $VALUES
    org.jdom2.AttributeType[] values() -> values
    org.jdom2.AttributeType valueOf(java.lang.String) -> valueOf
    org.jdom2.AttributeType byIndex(int) -> byIndex
    org.jdom2.AttributeType getAttributeType(java.lang.String) -> getAttributeType
org.jdom2.CDATA -> org.jdom2.CDATA:
    long serialVersionUID -> serialVersionUID
    org.jdom2.CDATA setText(java.lang.String) -> setText
    void append(java.lang.String) -> append
    void append(org.jdom2.Text) -> append
    java.lang.String toString() -> toString
    org.jdom2.CDATA clone() -> clone
    org.jdom2.CDATA detach() -> detach
    org.jdom2.CDATA setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Text setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Text detach() -> detach
    org.jdom2.Text clone() -> clone
    org.jdom2.Text setText(java.lang.String) -> setText
    org.jdom2.Content clone() -> clone
    org.jdom2.Content setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Content detach() -> detach
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
org.jdom2.CloneBase -> org.jdom2.CloneBase:
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
org.jdom2.Comment -> org.jdom2.Comment:
    long serialVersionUID -> serialVersionUID
    java.lang.String text -> text
    java.lang.String getValue() -> getValue
    java.lang.String getText() -> getText
    org.jdom2.Comment setText(java.lang.String) -> setText
    org.jdom2.Comment clone() -> clone
    org.jdom2.Comment detach() -> detach
    org.jdom2.Comment setParent(org.jdom2.Parent) -> setParent
    java.lang.String toString() -> toString
    org.jdom2.Content clone() -> clone
    org.jdom2.Content setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Content detach() -> detach
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
org.jdom2.Content -> org.jdom2.Content:
    long serialVersionUID -> serialVersionUID
    org.jdom2.Parent parent -> parent
    org.jdom2.Content$CType ctype -> ctype
    org.jdom2.Content$CType getCType() -> getCType
    org.jdom2.Content detach() -> detach
    org.jdom2.Parent getParent() -> getParent
    org.jdom2.Element getParentElement() -> getParentElement
    org.jdom2.Content setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Document getDocument() -> getDocument
    java.lang.String getValue() -> getValue
    org.jdom2.Content clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.List getNamespacesInScope() -> getNamespacesInScope
    java.util.List getNamespacesIntroduced() -> getNamespacesIntroduced
    java.util.List getNamespacesInherited() -> getNamespacesInherited
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
org.jdom2.Content$CType -> org.jdom2.Content$CType:
    org.jdom2.Content$CType Comment -> Comment
    org.jdom2.Content$CType Element -> Element
    org.jdom2.Content$CType ProcessingInstruction -> ProcessingInstruction
    org.jdom2.Content$CType EntityRef -> EntityRef
    org.jdom2.Content$CType Text -> Text
    org.jdom2.Content$CType CDATA -> CDATA
    org.jdom2.Content$CType DocType -> DocType
    org.jdom2.Content$CType[] $VALUES -> $VALUES
    org.jdom2.Content$CType[] values() -> values
    org.jdom2.Content$CType valueOf(java.lang.String) -> valueOf
org.jdom2.ContentList -> org.jdom2.ContentList:
    int INITIAL_ARRAY_SIZE -> INITIAL_ARRAY_SIZE
    org.jdom2.Content[] elementData -> elementData
    int size -> size
    int sizeModCount -> sizeModCount
    int dataModiCount -> dataModiCount
    org.jdom2.Parent parent -> parent
    void uncheckedAddContent(org.jdom2.Content) -> uncheckedAddContent
    void setModCount(int,int) -> setModCount
    int getModCount() -> getModCount
    void incModCount() -> incModCount
    void incDataModOnly() -> incDataModOnly
    int getDataModCount() -> getDataModCount
    void checkIndex(int,boolean) -> checkIndex
    void checkPreConditions(org.jdom2.Content,int,boolean) -> checkPreConditions
    void add(int,org.jdom2.Content) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void clear() -> clear
    void clearAndSet(java.util.Collection) -> clearAndSet
    void ensureCapacity(int) -> ensureCapacity
    org.jdom2.Content get(int) -> get
    java.util.List getView(org.jdom2.filter.Filter) -> getView
    int indexOfFirstElement() -> indexOfFirstElement
    int indexOfDocType() -> indexOfDocType
    org.jdom2.Content remove(int) -> remove
    void removeParent(org.jdom2.Content) -> removeParent
    org.jdom2.Content set(int,org.jdom2.Content) -> set
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.String toString() -> toString
    void sortInPlace(int[]) -> sortInPlace
    int binarySearch(int[],int,int,java.util.Comparator) -> binarySearch
    void sort(java.util.Comparator) -> sort
    java.lang.Object remove(int) -> remove
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
    int access$100(org.jdom2.ContentList) -> access$100
    int access$200(org.jdom2.ContentList) -> access$200
    org.jdom2.Content[] access$300(org.jdom2.ContentList) -> access$300
    void access$400(org.jdom2.ContentList,int,boolean) -> access$400
    int access$500(org.jdom2.ContentList) -> access$500
    void access$600(org.jdom2.ContentList,int,int) -> access$600
    void access$700(org.jdom2.ContentList,int[]) -> access$700
org.jdom2.ContentList$1 -> org.jdom2.ContentList$1:
org.jdom2.ContentList$CLIterator -> org.jdom2.ContentList$CLIterator:
    int expect -> expect
    int cursor -> cursor
    boolean canremove -> canremove
    org.jdom2.ContentList this$0 -> this$0
    boolean hasNext() -> hasNext
    org.jdom2.Content next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jdom2.ContentList$CLListIterator -> org.jdom2.ContentList$CLListIterator:
    boolean forward -> forward
    boolean canremove -> canremove
    boolean canset -> canset
    int expectedmod -> expectedmod
    int cursor -> cursor
    org.jdom2.ContentList this$0 -> this$0
    void checkConcurrent() -> checkConcurrent
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    org.jdom2.Content next() -> next
    org.jdom2.Content previous() -> previous
    void add(org.jdom2.Content) -> add
    void remove() -> remove
    void set(org.jdom2.Content) -> set
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.lang.Object previous() -> previous
    java.lang.Object next() -> next
org.jdom2.ContentList$FilterList -> org.jdom2.ContentList$FilterList:
    org.jdom2.filter.Filter filter -> filter
    int[] backingpos -> backingpos
    int backingsize -> backingsize
    int xdata -> xdata
    org.jdom2.ContentList this$0 -> this$0
    boolean isEmpty() -> isEmpty
    int resync(int) -> resync
    void add(int,org.jdom2.Content) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    org.jdom2.Content get(int) -> get
    java.util.Iterator iterator() -> iterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    org.jdom2.Content remove(int) -> remove
    org.jdom2.Content set(int,org.jdom2.Content) -> set
    int size() -> size
    int fbinarySearch(int[],int,int,java.util.Comparator) -> fbinarySearch
    void sort(java.util.Comparator) -> sort
    java.lang.Object remove(int) -> remove
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
    int access$800(org.jdom2.ContentList$FilterList,int) -> access$800
org.jdom2.ContentList$FilterListIterator -> org.jdom2.ContentList$FilterListIterator:
    org.jdom2.ContentList$FilterList filterlist -> filterlist
    boolean forward -> forward
    boolean canremove -> canremove
    boolean canset -> canset
    int expectedmod -> expectedmod
    int cursor -> cursor
    org.jdom2.ContentList this$0 -> this$0
    void checkConcurrent() -> checkConcurrent
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    org.jdom2.Content next() -> next
    org.jdom2.Content previous() -> previous
    void add(org.jdom2.Content) -> add
    void remove() -> remove
    void set(org.jdom2.Content) -> set
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.lang.Object previous() -> previous
    java.lang.Object next() -> next
org.jdom2.DataConversionException -> org.jdom2.DataConversionException:
    long serialVersionUID -> serialVersionUID
org.jdom2.DefaultJDOMFactory -> org.jdom2.DefaultJDOMFactory:
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,int,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.AttributeType,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,int) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.AttributeType) -> attribute
    org.jdom2.CDATA cdata(java.lang.String) -> cdata
    org.jdom2.CDATA cdata(int,int,java.lang.String) -> cdata
    org.jdom2.Text text(java.lang.String) -> text
    org.jdom2.Text text(int,int,java.lang.String) -> text
    org.jdom2.Comment comment(java.lang.String) -> comment
    org.jdom2.Comment comment(int,int,java.lang.String) -> comment
    org.jdom2.DocType docType(java.lang.String,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String) -> docType
    org.jdom2.Document document(org.jdom2.Element,org.jdom2.DocType) -> document
    org.jdom2.Document document(org.jdom2.Element,org.jdom2.DocType,java.lang.String) -> document
    org.jdom2.Document document(org.jdom2.Element) -> document
    org.jdom2.Element element(java.lang.String,org.jdom2.Namespace) -> element
    org.jdom2.Element element(int,int,java.lang.String,org.jdom2.Namespace) -> element
    org.jdom2.Element element(java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String) -> element
    org.jdom2.Element element(java.lang.String,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,java.lang.String) -> element
    org.jdom2.Element element(java.lang.String,java.lang.String,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,java.lang.String,java.lang.String) -> element
    org.jdom2.ProcessingInstruction processingInstruction(java.lang.String) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(java.lang.String,java.util.Map) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.util.Map) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.lang.String) -> processingInstruction
    org.jdom2.EntityRef entityRef(java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(java.lang.String,java.lang.String,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(java.lang.String,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String) -> entityRef
    void addContent(org.jdom2.Parent,org.jdom2.Content) -> addContent
    void setAttribute(org.jdom2.Element,org.jdom2.Attribute) -> setAttribute
    void addNamespaceDeclaration(org.jdom2.Element,org.jdom2.Namespace) -> addNamespaceDeclaration
    void setRoot(org.jdom2.Document,org.jdom2.Element) -> setRoot
org.jdom2.DescendantIterator -> org.jdom2.DescendantIterator:
    org.jdom2.Parent parent -> parent
    java.lang.Object[] stack -> stack
    int ssize -> ssize
    java.util.Iterator current -> current
    java.util.Iterator descending -> descending
    java.util.Iterator ascending -> ascending
    boolean hasnext -> hasnext
    org.jdom2.DescendantIterator iterator() -> iterator
    boolean hasNext() -> hasNext
    org.jdom2.Content next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
org.jdom2.DocType -> org.jdom2.DocType:
    long serialVersionUID -> serialVersionUID
    java.lang.String elementName -> elementName
    java.lang.String publicID -> publicID
    java.lang.String systemID -> systemID
    java.lang.String internalSubset -> internalSubset
    java.lang.String getElementName() -> getElementName
    org.jdom2.DocType setElementName(java.lang.String) -> setElementName
    java.lang.String getPublicID() -> getPublicID
    org.jdom2.DocType setPublicID(java.lang.String) -> setPublicID
    java.lang.String getSystemID() -> getSystemID
    org.jdom2.DocType setSystemID(java.lang.String) -> setSystemID
    java.lang.String getValue() -> getValue
    void setInternalSubset(java.lang.String) -> setInternalSubset
    java.lang.String getInternalSubset() -> getInternalSubset
    java.lang.String toString() -> toString
    org.jdom2.DocType clone() -> clone
    org.jdom2.DocType detach() -> detach
    org.jdom2.DocType setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Document getParent() -> getParent
    org.jdom2.Content clone() -> clone
    org.jdom2.Content setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Parent getParent() -> getParent
    org.jdom2.Content detach() -> detach
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
org.jdom2.Document -> org.jdom2.Document:
    org.jdom2.ContentList content -> content
    java.lang.String baseURI -> baseURI
    java.util.HashMap propertyMap -> propertyMap
    long serialVersionUID -> serialVersionUID
    int getContentSize() -> getContentSize
    int indexOf(org.jdom2.Content) -> indexOf
    boolean hasRootElement() -> hasRootElement
    org.jdom2.Element getRootElement() -> getRootElement
    org.jdom2.Document setRootElement(org.jdom2.Element) -> setRootElement
    org.jdom2.Element detachRootElement() -> detachRootElement
    org.jdom2.DocType getDocType() -> getDocType
    org.jdom2.Document setDocType(org.jdom2.DocType) -> setDocType
    org.jdom2.Document addContent(org.jdom2.Content) -> addContent
    org.jdom2.Document addContent(java.util.Collection) -> addContent
    org.jdom2.Document addContent(int,org.jdom2.Content) -> addContent
    org.jdom2.Document addContent(int,java.util.Collection) -> addContent
    java.util.List cloneContent() -> cloneContent
    org.jdom2.Content getContent(int) -> getContent
    java.util.List getContent() -> getContent
    java.util.List getContent(org.jdom2.filter.Filter) -> getContent
    java.util.List removeContent() -> removeContent
    java.util.List removeContent(org.jdom2.filter.Filter) -> removeContent
    org.jdom2.Document setContent(java.util.Collection) -> setContent
    void setBaseURI(java.lang.String) -> setBaseURI
    java.lang.String getBaseURI() -> getBaseURI
    org.jdom2.Document setContent(int,org.jdom2.Content) -> setContent
    org.jdom2.Document setContent(int,java.util.Collection) -> setContent
    boolean removeContent(org.jdom2.Content) -> removeContent
    org.jdom2.Content removeContent(int) -> removeContent
    org.jdom2.Document setContent(org.jdom2.Content) -> setContent
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jdom2.Document clone() -> clone
    org.jdom2.util.IteratorIterable getDescendants() -> getDescendants
    org.jdom2.util.IteratorIterable getDescendants(org.jdom2.filter.Filter) -> getDescendants
    org.jdom2.Parent getParent() -> getParent
    org.jdom2.Document getDocument() -> getDocument
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void canContainContent(org.jdom2.Content,int,boolean) -> canContainContent
    java.util.List getNamespacesInScope() -> getNamespacesInScope
    java.util.List getNamespacesIntroduced() -> getNamespacesIntroduced
    java.util.List getNamespacesInherited() -> getNamespacesInherited
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
    org.jdom2.Parent addContent(int,java.util.Collection) -> addContent
    org.jdom2.Parent addContent(int,org.jdom2.Content) -> addContent
    org.jdom2.Parent addContent(java.util.Collection) -> addContent
    org.jdom2.Parent addContent(org.jdom2.Content) -> addContent
org.jdom2.Element -> org.jdom2.Element:
    int INITIAL_ARRAY_SIZE -> INITIAL_ARRAY_SIZE
    java.lang.String name -> name
    org.jdom2.Namespace namespace -> namespace
    java.util.List additionalNamespaces -> additionalNamespaces
    org.jdom2.AttributeList attributes -> attributes
    org.jdom2.ContentList content -> content
    long serialVersionUID -> serialVersionUID
    java.lang.String getName() -> getName
    org.jdom2.Element setName(java.lang.String) -> setName
    org.jdom2.Namespace getNamespace() -> getNamespace
    org.jdom2.Element setNamespace(org.jdom2.Namespace) -> setNamespace
    java.lang.String getNamespacePrefix() -> getNamespacePrefix
    java.lang.String getNamespaceURI() -> getNamespaceURI
    org.jdom2.Namespace getNamespace(java.lang.String) -> getNamespace
    java.lang.String getQualifiedName() -> getQualifiedName
    boolean addNamespaceDeclaration(org.jdom2.Namespace) -> addNamespaceDeclaration
    void removeNamespaceDeclaration(org.jdom2.Namespace) -> removeNamespaceDeclaration
    java.util.List getAdditionalNamespaces() -> getAdditionalNamespaces
    java.lang.String getValue() -> getValue
    boolean isRootElement() -> isRootElement
    int getContentSize() -> getContentSize
    int indexOf(org.jdom2.Content) -> indexOf
    java.lang.String getText() -> getText
    java.lang.String getTextTrim() -> getTextTrim
    java.lang.String getTextNormalize() -> getTextNormalize
    java.lang.String getChildText(java.lang.String) -> getChildText
    java.lang.String getChildTextTrim(java.lang.String) -> getChildTextTrim
    java.lang.String getChildTextNormalize(java.lang.String) -> getChildTextNormalize
    java.lang.String getChildText(java.lang.String,org.jdom2.Namespace) -> getChildText
    java.lang.String getChildTextTrim(java.lang.String,org.jdom2.Namespace) -> getChildTextTrim
    java.lang.String getChildTextNormalize(java.lang.String,org.jdom2.Namespace) -> getChildTextNormalize
    org.jdom2.Element setText(java.lang.String) -> setText
    boolean coalesceText(boolean) -> coalesceText
    java.util.List getContent() -> getContent
    java.util.List getContent(org.jdom2.filter.Filter) -> getContent
    java.util.List removeContent() -> removeContent
    java.util.List removeContent(org.jdom2.filter.Filter) -> removeContent
    org.jdom2.Element setContent(java.util.Collection) -> setContent
    org.jdom2.Element setContent(int,org.jdom2.Content) -> setContent
    org.jdom2.Parent setContent(int,java.util.Collection) -> setContent
    org.jdom2.Element addContent(java.lang.String) -> addContent
    org.jdom2.Element addContent(org.jdom2.Content) -> addContent
    org.jdom2.Element addContent(java.util.Collection) -> addContent
    org.jdom2.Element addContent(int,org.jdom2.Content) -> addContent
    org.jdom2.Element addContent(int,java.util.Collection) -> addContent
    java.util.List cloneContent() -> cloneContent
    org.jdom2.Content getContent(int) -> getContent
    boolean removeContent(org.jdom2.Content) -> removeContent
    org.jdom2.Content removeContent(int) -> removeContent
    org.jdom2.Element setContent(org.jdom2.Content) -> setContent
    boolean isAncestor(org.jdom2.Element) -> isAncestor
    boolean hasAttributes() -> hasAttributes
    boolean hasAdditionalNamespaces() -> hasAdditionalNamespaces
    org.jdom2.AttributeList getAttributeList() -> getAttributeList
    java.util.List getAttributes() -> getAttributes
    org.jdom2.Attribute getAttribute(java.lang.String) -> getAttribute
    org.jdom2.Attribute getAttribute(java.lang.String,org.jdom2.Namespace) -> getAttribute
    java.lang.String getAttributeValue(java.lang.String) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,org.jdom2.Namespace) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,org.jdom2.Namespace,java.lang.String) -> getAttributeValue
    org.jdom2.Element setAttributes(java.util.Collection) -> setAttributes
    org.jdom2.Element setAttribute(java.lang.String,java.lang.String) -> setAttribute
    org.jdom2.Element setAttribute(java.lang.String,java.lang.String,org.jdom2.Namespace) -> setAttribute
    org.jdom2.Element setAttribute(org.jdom2.Attribute) -> setAttribute
    boolean removeAttribute(java.lang.String) -> removeAttribute
    boolean removeAttribute(java.lang.String,org.jdom2.Namespace) -> removeAttribute
    boolean removeAttribute(org.jdom2.Attribute) -> removeAttribute
    java.lang.String toString() -> toString
    org.jdom2.Element clone() -> clone
    org.jdom2.util.IteratorIterable getDescendants() -> getDescendants
    org.jdom2.util.IteratorIterable getDescendants(org.jdom2.filter.Filter) -> getDescendants
    java.util.List getChildren() -> getChildren
    java.util.List getChildren(java.lang.String) -> getChildren
    java.util.List getChildren(java.lang.String,org.jdom2.Namespace) -> getChildren
    org.jdom2.Element getChild(java.lang.String,org.jdom2.Namespace) -> getChild
    org.jdom2.Element getChild(java.lang.String) -> getChild
    boolean removeChild(java.lang.String) -> removeChild
    boolean removeChild(java.lang.String,org.jdom2.Namespace) -> removeChild
    boolean removeChildren(java.lang.String) -> removeChildren
    boolean removeChildren(java.lang.String,org.jdom2.Namespace) -> removeChildren
    java.util.List getNamespacesInScope() -> getNamespacesInScope
    java.util.List getNamespacesInherited() -> getNamespacesInherited
    java.util.List getNamespacesIntroduced() -> getNamespacesIntroduced
    org.jdom2.Element detach() -> detach
    void canContainContent(org.jdom2.Content,int,boolean) -> canContainContent
    void sortContent(java.util.Comparator) -> sortContent
    void sortChildren(java.util.Comparator) -> sortChildren
    void sortAttributes(java.util.Comparator) -> sortAttributes
    void sortContent(org.jdom2.filter.Filter,java.util.Comparator) -> sortContent
    java.net.URI resolve(java.lang.String,java.net.URI) -> resolve
    java.net.URI getXMLBaseURI() -> getXMLBaseURI
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    org.jdom2.Content clone() -> clone
    org.jdom2.Content detach() -> detach
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
    org.jdom2.Parent addContent(int,java.util.Collection) -> addContent
    org.jdom2.Parent addContent(int,org.jdom2.Content) -> addContent
    org.jdom2.Parent addContent(java.util.Collection) -> addContent
    org.jdom2.Parent addContent(org.jdom2.Content) -> addContent
org.jdom2.EntityRef -> org.jdom2.EntityRef:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String publicID -> publicID
    java.lang.String systemID -> systemID
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getPublicID() -> getPublicID
    java.lang.String getSystemID() -> getSystemID
    org.jdom2.EntityRef setName(java.lang.String) -> setName
    org.jdom2.EntityRef setPublicID(java.lang.String) -> setPublicID
    org.jdom2.EntityRef setSystemID(java.lang.String) -> setSystemID
    java.lang.String toString() -> toString
    org.jdom2.EntityRef detach() -> detach
    org.jdom2.EntityRef setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Element getParent() -> getParent
    org.jdom2.EntityRef clone() -> clone
    org.jdom2.Content clone() -> clone
    org.jdom2.Content setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Parent getParent() -> getParent
    org.jdom2.Content detach() -> detach
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
org.jdom2.FilterIterator -> org.jdom2.FilterIterator:
    org.jdom2.DescendantIterator iterator -> iterator
    org.jdom2.filter.Filter filter -> filter
    java.lang.Object nextObject -> nextObject
    boolean canremove -> canremove
    java.util.Iterator iterator() -> iterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.jdom2.IllegalAddException -> org.jdom2.IllegalAddException:
    long serialVersionUID -> serialVersionUID
org.jdom2.IllegalDataException -> org.jdom2.IllegalDataException:
    long serialVersionUID -> serialVersionUID
org.jdom2.IllegalNameException -> org.jdom2.IllegalNameException:
    long serialVersionUID -> serialVersionUID
org.jdom2.IllegalTargetException -> org.jdom2.IllegalTargetException:
    long serialVersionUID -> serialVersionUID
org.jdom2.JDOMConstants -> org.jdom2.JDOMConstants:
    java.lang.String NS_PREFIX_DEFAULT -> NS_PREFIX_DEFAULT
    java.lang.String NS_URI_DEFAULT -> NS_URI_DEFAULT
    java.lang.String NS_PREFIX_XML -> NS_PREFIX_XML
    java.lang.String NS_URI_XML -> NS_URI_XML
    java.lang.String NS_PREFIX_XMLNS -> NS_PREFIX_XMLNS
    java.lang.String NS_URI_XMLNS -> NS_URI_XMLNS
    java.lang.String SAX_PROPERTY_DECLARATION_HANDLER -> SAX_PROPERTY_DECLARATION_HANDLER
    java.lang.String SAX_PROPERTY_DECLARATION_HANDLER_ALT -> SAX_PROPERTY_DECLARATION_HANDLER_ALT
    java.lang.String SAX_PROPERTY_LEXICAL_HANDLER -> SAX_PROPERTY_LEXICAL_HANDLER
    java.lang.String SAX_PROPERTY_LEXICAL_HANDLER_ALT -> SAX_PROPERTY_LEXICAL_HANDLER_ALT
    java.lang.String SAX_FEATURE_EXTERNAL_ENT -> SAX_FEATURE_EXTERNAL_ENT
    java.lang.String SAX_FEATURE_VALIDATION -> SAX_FEATURE_VALIDATION
    java.lang.String SAX_FEATURE_NAMESPACES -> SAX_FEATURE_NAMESPACES
    java.lang.String SAX_FEATURE_NAMESPACE_PREFIXES -> SAX_FEATURE_NAMESPACE_PREFIXES
    java.lang.String JDOM2_FEATURE_JDOMSOURCE -> JDOM2_FEATURE_JDOMSOURCE
    java.lang.String JDOM2_FEATURE_JDOMRESULT -> JDOM2_FEATURE_JDOMRESULT
    java.lang.String JDOM2_PROPERTY_XPATH_FACTORY -> JDOM2_PROPERTY_XPATH_FACTORY
    java.lang.String JDOM2_PROPERTY_LINE_SEPARATOR -> JDOM2_PROPERTY_LINE_SEPARATOR
org.jdom2.JDOMException -> org.jdom2.JDOMException:
    long serialVersionUID -> serialVersionUID
org.jdom2.JDOMFactory -> org.jdom2.JDOMFactory:
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,int,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.AttributeType,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,int) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.AttributeType) -> attribute
    org.jdom2.CDATA cdata(java.lang.String) -> cdata
    org.jdom2.CDATA cdata(int,int,java.lang.String) -> cdata
    org.jdom2.Text text(int,int,java.lang.String) -> text
    org.jdom2.Text text(java.lang.String) -> text
    org.jdom2.Comment comment(java.lang.String) -> comment
    org.jdom2.Comment comment(int,int,java.lang.String) -> comment
    org.jdom2.DocType docType(java.lang.String,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String) -> docType
    org.jdom2.Document document(org.jdom2.Element,org.jdom2.DocType) -> document
    org.jdom2.Document document(org.jdom2.Element,org.jdom2.DocType,java.lang.String) -> document
    org.jdom2.Document document(org.jdom2.Element) -> document
    org.jdom2.Element element(java.lang.String,org.jdom2.Namespace) -> element
    org.jdom2.Element element(java.lang.String) -> element
    org.jdom2.Element element(java.lang.String,java.lang.String) -> element
    org.jdom2.Element element(java.lang.String,java.lang.String,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,org.jdom2.Namespace) -> element
    org.jdom2.Element element(int,int,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,java.lang.String,java.lang.String) -> element
    org.jdom2.ProcessingInstruction processingInstruction(java.lang.String,java.util.Map) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(java.lang.String) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.util.Map) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.lang.String) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String) -> processingInstruction
    org.jdom2.EntityRef entityRef(java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(java.lang.String,java.lang.String,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(java.lang.String,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String) -> entityRef
    void addContent(org.jdom2.Parent,org.jdom2.Content) -> addContent
    void setAttribute(org.jdom2.Element,org.jdom2.Attribute) -> setAttribute
    void addNamespaceDeclaration(org.jdom2.Element,org.jdom2.Namespace) -> addNamespaceDeclaration
    void setRoot(org.jdom2.Document,org.jdom2.Element) -> setRoot
org.jdom2.Namespace -> org.jdom2.Namespace:
    java.util.concurrent.ConcurrentMap namespacemap -> namespacemap
    org.jdom2.Namespace NO_NAMESPACE -> NO_NAMESPACE
    org.jdom2.Namespace XML_NAMESPACE -> XML_NAMESPACE
    java.lang.String prefix -> prefix
    java.lang.String uri -> uri
    long serialVersionUID -> serialVersionUID
    org.jdom2.Namespace getNamespace(java.lang.String,java.lang.String) -> getNamespace
    org.jdom2.Namespace getNamespace(java.lang.String) -> getNamespace
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getURI() -> getURI
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object readResolve() -> readResolve
org.jdom2.Namespace$NamespaceSerializationProxy -> org.jdom2.Namespace$NamespaceSerializationProxy:
    long serialVersionUID -> serialVersionUID
    java.lang.String pprefix -> pprefix
    java.lang.String puri -> puri
    java.lang.Object readResolve() -> readResolve
org.jdom2.NamespaceAware -> org.jdom2.NamespaceAware:
    java.util.List getNamespacesInScope() -> getNamespacesInScope
    java.util.List getNamespacesIntroduced() -> getNamespacesIntroduced
    java.util.List getNamespacesInherited() -> getNamespacesInherited
org.jdom2.Parent -> org.jdom2.Parent:
    int getContentSize() -> getContentSize
    int indexOf(org.jdom2.Content) -> indexOf
    java.util.List cloneContent() -> cloneContent
    org.jdom2.Content getContent(int) -> getContent
    java.util.List getContent() -> getContent
    java.util.List getContent(org.jdom2.filter.Filter) -> getContent
    java.util.List removeContent() -> removeContent
    java.util.List removeContent(org.jdom2.filter.Filter) -> removeContent
    boolean removeContent(org.jdom2.Content) -> removeContent
    org.jdom2.Content removeContent(int) -> removeContent
    java.lang.Object clone() -> clone
    org.jdom2.util.IteratorIterable getDescendants() -> getDescendants
    org.jdom2.util.IteratorIterable getDescendants(org.jdom2.filter.Filter) -> getDescendants
    org.jdom2.Parent getParent() -> getParent
    org.jdom2.Document getDocument() -> getDocument
    void canContainContent(org.jdom2.Content,int,boolean) -> canContainContent
    org.jdom2.Parent addContent(org.jdom2.Content) -> addContent
    org.jdom2.Parent addContent(java.util.Collection) -> addContent
    org.jdom2.Parent addContent(int,org.jdom2.Content) -> addContent
    org.jdom2.Parent addContent(int,java.util.Collection) -> addContent
org.jdom2.ProcessingInstruction -> org.jdom2.ProcessingInstruction:
    long serialVersionUID -> serialVersionUID
    java.lang.String target -> target
    java.lang.String rawData -> rawData
    java.util.Map mapData -> mapData
    org.jdom2.ProcessingInstruction setTarget(java.lang.String) -> setTarget
    java.lang.String getValue() -> getValue
    java.lang.String getTarget() -> getTarget
    java.lang.String getData() -> getData
    java.util.List getPseudoAttributeNames() -> getPseudoAttributeNames
    org.jdom2.ProcessingInstruction setData(java.lang.String) -> setData
    org.jdom2.ProcessingInstruction setData(java.util.Map) -> setData
    java.lang.String getPseudoAttributeValue(java.lang.String) -> getPseudoAttributeValue
    org.jdom2.ProcessingInstruction setPseudoAttribute(java.lang.String,java.lang.String) -> setPseudoAttribute
    boolean removePseudoAttribute(java.lang.String) -> removePseudoAttribute
    java.lang.String toString(java.util.Map) -> toString
    java.util.Map parseData(java.lang.String) -> parseData
    int[] extractQuotedString(java.lang.String) -> extractQuotedString
    java.lang.String toString() -> toString
    org.jdom2.ProcessingInstruction clone() -> clone
    org.jdom2.ProcessingInstruction detach() -> detach
    org.jdom2.ProcessingInstruction setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Content clone() -> clone
    org.jdom2.Content setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Content detach() -> detach
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
org.jdom2.SlimJDOMFactory -> org.jdom2.SlimJDOMFactory:
    org.jdom2.StringBin cache -> cache
    boolean cachetext -> cachetext
    void clearCache() -> clearCache
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,int,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.AttributeType,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,int) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.AttributeType) -> attribute
    org.jdom2.CDATA cdata(int,int,java.lang.String) -> cdata
    org.jdom2.Text text(int,int,java.lang.String) -> text
    org.jdom2.Comment comment(int,int,java.lang.String) -> comment
    org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String) -> docType
    org.jdom2.Element element(int,int,java.lang.String,org.jdom2.Namespace) -> element
    org.jdom2.Element element(int,int,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,java.lang.String,java.lang.String) -> element
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.util.Map) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.lang.String) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String) -> processingInstruction
    org.jdom2.EntityRef entityRef(int,int,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String) -> entityRef
org.jdom2.StringBin -> org.jdom2.StringBin:
    int GROW -> GROW
    int DEFAULTCAP -> DEFAULTCAP
    int MAXBUCKET -> MAXBUCKET
    java.lang.String[][] buckets -> buckets
    int[] lengths -> lengths
    int mask -> mask
    int locate(int,java.lang.String,java.lang.String[],int) -> locate
    java.lang.String reuse(java.lang.String) -> reuse
    void rehash() -> rehash
    java.lang.String compact(java.lang.String) -> compact
    int size() -> size
org.jdom2.Text -> org.jdom2.Text:
    long serialVersionUID -> serialVersionUID
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    java.lang.String value -> value
    java.lang.String getText() -> getText
    java.lang.String getTextTrim() -> getTextTrim
    java.lang.String getTextNormalize() -> getTextNormalize
    java.lang.String normalizeString(java.lang.String) -> normalizeString
    org.jdom2.Text setText(java.lang.String) -> setText
    void append(java.lang.String) -> append
    void append(org.jdom2.Text) -> append
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    org.jdom2.Text clone() -> clone
    org.jdom2.Text detach() -> detach
    org.jdom2.Text setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Element getParent() -> getParent
    org.jdom2.Content clone() -> clone
    org.jdom2.Content setParent(org.jdom2.Parent) -> setParent
    org.jdom2.Parent getParent() -> getParent
    org.jdom2.Content detach() -> detach
    org.jdom2.CloneBase clone() -> clone
    java.lang.Object clone() -> clone
org.jdom2.UncheckedJDOMFactory -> org.jdom2.UncheckedJDOMFactory:
    org.jdom2.Element element(int,int,java.lang.String,org.jdom2.Namespace) -> element
    org.jdom2.Element element(int,int,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,java.lang.String,java.lang.String) -> element
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,int,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.AttributeType,org.jdom2.Namespace) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,int) -> attribute
    org.jdom2.Attribute attribute(java.lang.String,java.lang.String,org.jdom2.AttributeType) -> attribute
    org.jdom2.Text text(int,int,java.lang.String) -> text
    org.jdom2.CDATA cdata(int,int,java.lang.String) -> cdata
    org.jdom2.Comment comment(int,int,java.lang.String) -> comment
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.util.Map) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.lang.String) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String) -> processingInstruction
    org.jdom2.EntityRef entityRef(int,int,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String,java.lang.String) -> entityRef
    org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String) -> docType
    org.jdom2.Document document(org.jdom2.Element,org.jdom2.DocType,java.lang.String) -> document
    org.jdom2.Document document(org.jdom2.Element,org.jdom2.DocType) -> document
    org.jdom2.Document document(org.jdom2.Element) -> document
    void addContent(org.jdom2.Parent,org.jdom2.Content) -> addContent
    void setAttribute(org.jdom2.Element,org.jdom2.Attribute) -> setAttribute
    void addNamespaceDeclaration(org.jdom2.Element,org.jdom2.Namespace) -> addNamespaceDeclaration
    void setRoot(org.jdom2.Document,org.jdom2.Element) -> setRoot
org.jdom2.Verifier -> org.jdom2.Verifier:
    byte[] VALCONST -> VALCONST
    int[] LENCONST -> LENCONST
    int CHARCNT -> CHARCNT
    byte[] CHARFLAGS -> CHARFLAGS
    byte MASKXMLCHARACTER -> MASKXMLCHARACTER
    byte MASKXMLLETTER -> MASKXMLLETTER
    byte MASKXMLSTARTCHAR -> MASKXMLSTARTCHAR
    byte MASKXMLNAMECHAR -> MASKXMLNAMECHAR
    byte MASKXMLDIGIT -> MASKXMLDIGIT
    byte MASKXMLCOMBINING -> MASKXMLCOMBINING
    byte MASKURICHAR -> MASKURICHAR
    byte MASKXMLLETTERORDIGIT -> MASKXMLLETTERORDIGIT
    byte[] buildBitFlags() -> buildBitFlags
    java.lang.String checkJDOMName(java.lang.String) -> checkJDOMName
    java.lang.String checkElementName(java.lang.String) -> checkElementName
    java.lang.String checkAttributeName(java.lang.String) -> checkAttributeName
    java.lang.String checkCharacterData(java.lang.String) -> checkCharacterData
    java.lang.String checkCDATASection(java.lang.String) -> checkCDATASection
    java.lang.String checkNamespacePrefix(java.lang.String) -> checkNamespacePrefix
    java.lang.String checkNamespaceURI(java.lang.String) -> checkNamespaceURI
    java.lang.String checkNamespaceCollision(org.jdom2.Namespace,org.jdom2.Namespace) -> checkNamespaceCollision
    java.lang.String checkNamespaceCollision(org.jdom2.Attribute,org.jdom2.Element) -> checkNamespaceCollision
    java.lang.String checkNamespaceCollision(org.jdom2.Attribute,org.jdom2.Element,int) -> checkNamespaceCollision
    java.lang.String checkNamespaceCollision(org.jdom2.Namespace,org.jdom2.Element) -> checkNamespaceCollision
    java.lang.String checkNamespaceCollision(org.jdom2.Namespace,org.jdom2.Element,int) -> checkNamespaceCollision
    java.lang.String checkNamespaceCollision(org.jdom2.Namespace,org.jdom2.Attribute) -> checkNamespaceCollision
    java.lang.String checkNamespaceCollision(org.jdom2.Namespace,java.util.List) -> checkNamespaceCollision
    java.lang.String checkNamespaceCollision(org.jdom2.Namespace,java.util.List,int) -> checkNamespaceCollision
    java.lang.String checkProcessingInstructionTarget(java.lang.String) -> checkProcessingInstructionTarget
    java.lang.String checkProcessingInstructionData(java.lang.String) -> checkProcessingInstructionData
    java.lang.String checkCommentData(java.lang.String) -> checkCommentData
    int decodeSurrogatePair(char,char) -> decodeSurrogatePair
    boolean isXMLPublicIDCharacter(char) -> isXMLPublicIDCharacter
    java.lang.String checkPublicID(java.lang.String) -> checkPublicID
    java.lang.String checkSystemLiteral(java.lang.String) -> checkSystemLiteral
    java.lang.String checkXMLName(java.lang.String) -> checkXMLName
    java.lang.String checkURI(java.lang.String) -> checkURI
    boolean isHexDigit(char) -> isHexDigit
    boolean isHighSurrogate(char) -> isHighSurrogate
    boolean isLowSurrogate(char) -> isLowSurrogate
    boolean isURICharacter(char) -> isURICharacter
    boolean isXMLCharacter(int) -> isXMLCharacter
    boolean isXMLNameCharacter(char) -> isXMLNameCharacter
    boolean isXMLNameStartCharacter(char) -> isXMLNameStartCharacter
    boolean isXMLLetterOrDigit(char) -> isXMLLetterOrDigit
    boolean isXMLLetter(char) -> isXMLLetter
    boolean isXMLCombiningChar(char) -> isXMLCombiningChar
    boolean isXMLExtender(char) -> isXMLExtender
    boolean isXMLDigit(char) -> isXMLDigit
    boolean isXMLWhitespace(char) -> isXMLWhitespace
    boolean isAllXMLWhitespace(java.lang.String) -> isAllXMLWhitespace
org.jdom2.adapters.AbstractDOMAdapter -> org.jdom2.adapters.AbstractDOMAdapter:
    org.w3c.dom.Document createDocument(org.jdom2.DocType) -> createDocument
    void setInternalSubset(org.w3c.dom.DocumentType,java.lang.String) -> setInternalSubset
org.jdom2.adapters.DOMAdapter -> org.jdom2.adapters.DOMAdapter:
    org.w3c.dom.Document createDocument() -> createDocument
    org.w3c.dom.Document createDocument(org.jdom2.DocType) -> createDocument
org.jdom2.adapters.JAXPDOMAdapter -> org.jdom2.adapters.JAXPDOMAdapter:
    java.lang.ThreadLocal localbuilder -> localbuilder
    org.w3c.dom.Document createDocument() -> createDocument
org.jdom2.filter.AbstractFilter -> org.jdom2.filter.AbstractFilter:
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.Object) -> matches
    java.util.List filter(java.util.List) -> filter
    org.jdom2.filter.Filter negate() -> negate
    org.jdom2.filter.Filter or(org.jdom2.filter.Filter) -> or
    org.jdom2.filter.Filter and(org.jdom2.filter.Filter) -> and
    org.jdom2.filter.Filter refine(org.jdom2.filter.Filter) -> refine
org.jdom2.filter.AndFilter -> org.jdom2.filter.AndFilter:
    long serialVersionUID -> serialVersionUID
    org.jdom2.filter.Filter base -> base
    org.jdom2.filter.Filter refiner -> refiner
    java.lang.Object filter(java.lang.Object) -> filter
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.jdom2.filter.AttributeFilter -> org.jdom2.filter.AttributeFilter:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    org.jdom2.Namespace namespace -> namespace
    org.jdom2.Attribute filter(java.lang.Object) -> filter
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object filter(java.lang.Object) -> filter
org.jdom2.filter.ClassFilter -> org.jdom2.filter.ClassFilter:
    long serialVersionUID -> serialVersionUID
    java.lang.Class fclass -> fclass
    java.lang.Object filter(java.lang.Object) -> filter
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jdom2.filter.ContentFilter -> org.jdom2.filter.ContentFilter:
    long serialVersionUID -> serialVersionUID
    int ELEMENT -> ELEMENT
    int CDATA -> CDATA
    int TEXT -> TEXT
    int COMMENT -> COMMENT
    int PI -> PI
    int ENTITYREF -> ENTITYREF
    int DOCUMENT -> DOCUMENT
    int DOCTYPE -> DOCTYPE
    int filterMask -> filterMask
    int getFilterMask() -> getFilterMask
    void setFilterMask(int) -> setFilterMask
    void setDefaultMask() -> setDefaultMask
    void setDocumentContent() -> setDocumentContent
    void setElementContent() -> setElementContent
    void setElementVisible(boolean) -> setElementVisible
    void setCDATAVisible(boolean) -> setCDATAVisible
    void setTextVisible(boolean) -> setTextVisible
    void setCommentVisible(boolean) -> setCommentVisible
    void setPIVisible(boolean) -> setPIVisible
    void setEntityRefVisible(boolean) -> setEntityRefVisible
    void setDocTypeVisible(boolean) -> setDocTypeVisible
    org.jdom2.Content filter(java.lang.Object) -> filter
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object filter(java.lang.Object) -> filter
org.jdom2.filter.ElementFilter -> org.jdom2.filter.ElementFilter:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    org.jdom2.Namespace namespace -> namespace
    org.jdom2.Element filter(java.lang.Object) -> filter
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object filter(java.lang.Object) -> filter
org.jdom2.filter.Filter -> org.jdom2.filter.Filter:
    java.util.List filter(java.util.List) -> filter
    java.lang.Object filter(java.lang.Object) -> filter
    boolean matches(java.lang.Object) -> matches
    org.jdom2.filter.Filter negate() -> negate
    org.jdom2.filter.Filter or(org.jdom2.filter.Filter) -> or
    org.jdom2.filter.Filter and(org.jdom2.filter.Filter) -> and
    org.jdom2.filter.Filter refine(org.jdom2.filter.Filter) -> refine
org.jdom2.filter.Filters -> org.jdom2.filter.Filters:
    org.jdom2.filter.Filter fcontent -> fcontent
    org.jdom2.filter.Filter fattribute -> fattribute
    org.jdom2.filter.Filter fcomment -> fcomment
    org.jdom2.filter.Filter fcdata -> fcdata
    org.jdom2.filter.Filter fdoctype -> fdoctype
    org.jdom2.filter.Filter fentityref -> fentityref
    org.jdom2.filter.Filter fpi -> fpi
    org.jdom2.filter.Filter ftext -> ftext
    org.jdom2.filter.Filter ftextonly -> ftextonly
    org.jdom2.filter.Filter felement -> felement
    org.jdom2.filter.Filter fdocument -> fdocument
    org.jdom2.filter.Filter fdouble -> fdouble
    org.jdom2.filter.Filter fboolean -> fboolean
    org.jdom2.filter.Filter fstring -> fstring
    org.jdom2.filter.Filter fpassthrough -> fpassthrough
    org.jdom2.filter.Filter content() -> content
    org.jdom2.filter.Filter attribute() -> attribute
    org.jdom2.filter.Filter attribute(java.lang.String) -> attribute
    org.jdom2.filter.Filter attribute(java.lang.String,org.jdom2.Namespace) -> attribute
    org.jdom2.filter.Filter attribute(org.jdom2.Namespace) -> attribute
    org.jdom2.filter.Filter comment() -> comment
    org.jdom2.filter.Filter cdata() -> cdata
    org.jdom2.filter.Filter doctype() -> doctype
    org.jdom2.filter.Filter entityref() -> entityref
    org.jdom2.filter.Filter element() -> element
    org.jdom2.filter.Filter document() -> document
    org.jdom2.filter.Filter element(java.lang.String) -> element
    org.jdom2.filter.Filter element(java.lang.String,org.jdom2.Namespace) -> element
    org.jdom2.filter.Filter element(org.jdom2.Namespace) -> element
    org.jdom2.filter.Filter processinginstruction() -> processinginstruction
    org.jdom2.filter.Filter text() -> text
    org.jdom2.filter.Filter textOnly() -> textOnly
    org.jdom2.filter.Filter fboolean() -> fboolean
    org.jdom2.filter.Filter fstring() -> fstring
    org.jdom2.filter.Filter fdouble() -> fdouble
    org.jdom2.filter.Filter fclass(java.lang.Class) -> fclass
    org.jdom2.filter.Filter fpassthrough() -> fpassthrough
org.jdom2.filter.NegateFilter -> org.jdom2.filter.NegateFilter:
    long serialVersionUID -> serialVersionUID
    org.jdom2.filter.Filter filter -> filter
    java.lang.Object filter(java.lang.Object) -> filter
    org.jdom2.filter.Filter getBaseFilter() -> getBaseFilter
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.jdom2.filter.OrFilter -> org.jdom2.filter.OrFilter:
    long serialVersionUID -> serialVersionUID
    org.jdom2.filter.Filter left -> left
    org.jdom2.filter.Filter right -> right
    org.jdom2.Content filter(java.lang.Object) -> filter
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object filter(java.lang.Object) -> filter
org.jdom2.filter.PassThroughFilter -> org.jdom2.filter.PassThroughFilter:
    long serialVersionUID -> serialVersionUID
    java.lang.Object filter(java.lang.Object) -> filter
    java.util.List filter(java.util.List) -> filter
org.jdom2.filter.TextOnlyFilter -> org.jdom2.filter.TextOnlyFilter:
    long serialVersionUID -> serialVersionUID
    org.jdom2.Text filter(java.lang.Object) -> filter
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object filter(java.lang.Object) -> filter
org.jdom2.input.DOMBuilder -> org.jdom2.input.DOMBuilder:
    org.jdom2.JDOMFactory factory -> factory
    void setFactory(org.jdom2.JDOMFactory) -> setFactory
    org.jdom2.JDOMFactory getFactory() -> getFactory
    org.jdom2.Document build(org.w3c.dom.Document) -> build
    org.jdom2.Element build(org.w3c.dom.Element) -> build
    org.jdom2.CDATA build(org.w3c.dom.CDATASection) -> build
    org.jdom2.Text build(org.w3c.dom.Text) -> build
    org.jdom2.Comment build(org.w3c.dom.Comment) -> build
    org.jdom2.ProcessingInstruction build(org.w3c.dom.ProcessingInstruction) -> build
    org.jdom2.EntityRef build(org.w3c.dom.EntityReference) -> build
    org.jdom2.DocType build(org.w3c.dom.DocumentType) -> build
    void buildTree(org.w3c.dom.Node,org.jdom2.Document,org.jdom2.Element,boolean) -> buildTree
org.jdom2.input.JDOMParseException -> org.jdom2.input.JDOMParseException:
    long serialVersionUID -> serialVersionUID
    org.jdom2.Document partialDocument -> partialDocument
    org.jdom2.Document getPartialDocument() -> getPartialDocument
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getSystemId() -> getSystemId
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
org.jdom2.input.SAXBuilder -> org.jdom2.input.SAXBuilder:
    org.jdom2.input.sax.SAXHandlerFactory DEFAULTSAXHANDLERFAC -> DEFAULTSAXHANDLERFAC
    org.jdom2.JDOMFactory DEFAULTJDOMFAC -> DEFAULTJDOMFAC
    org.jdom2.input.sax.XMLReaderJDOMFactory readerfac -> readerfac
    org.jdom2.input.sax.SAXHandlerFactory handlerfac -> handlerfac
    org.jdom2.JDOMFactory jdomfac -> jdomfac
    java.util.HashMap features -> features
    java.util.HashMap properties -> properties
    org.xml.sax.ErrorHandler saxErrorHandler -> saxErrorHandler
    org.xml.sax.EntityResolver saxEntityResolver -> saxEntityResolver
    org.xml.sax.DTDHandler saxDTDHandler -> saxDTDHandler
    org.xml.sax.XMLFilter saxXMLFilter -> saxXMLFilter
    boolean expand -> expand
    boolean ignoringWhite -> ignoringWhite
    boolean ignoringBoundaryWhite -> ignoringBoundaryWhite
    boolean reuseParser -> reuseParser
    org.jdom2.input.sax.SAXEngine engine -> engine
    java.lang.String getDriverClass() -> getDriverClass
    org.jdom2.JDOMFactory getFactory() -> getFactory
    org.jdom2.JDOMFactory getJDOMFactory() -> getJDOMFactory
    void setFactory(org.jdom2.JDOMFactory) -> setFactory
    void setJDOMFactory(org.jdom2.JDOMFactory) -> setJDOMFactory
    org.jdom2.input.sax.XMLReaderJDOMFactory getXMLReaderFactory() -> getXMLReaderFactory
    void setXMLReaderFactory(org.jdom2.input.sax.XMLReaderJDOMFactory) -> setXMLReaderFactory
    org.jdom2.input.sax.SAXHandlerFactory getSAXHandlerFactory() -> getSAXHandlerFactory
    void setSAXHandlerFactory(org.jdom2.input.sax.SAXHandlerFactory) -> setSAXHandlerFactory
    boolean getValidation() -> getValidation
    boolean isValidating() -> isValidating
    void setValidation(boolean) -> setValidation
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    void setErrorHandler(org.xml.sax.ErrorHandler) -> setErrorHandler
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    void setDTDHandler(org.xml.sax.DTDHandler) -> setDTDHandler
    org.xml.sax.XMLFilter getXMLFilter() -> getXMLFilter
    void setXMLFilter(org.xml.sax.XMLFilter) -> setXMLFilter
    boolean getIgnoringElementContentWhitespace() -> getIgnoringElementContentWhitespace
    void setIgnoringElementContentWhitespace(boolean) -> setIgnoringElementContentWhitespace
    boolean getIgnoringBoundaryWhitespace() -> getIgnoringBoundaryWhitespace
    void setIgnoringBoundaryWhitespace(boolean) -> setIgnoringBoundaryWhitespace
    boolean getExpandEntities() -> getExpandEntities
    void setExpandEntities(boolean) -> setExpandEntities
    boolean getReuseParser() -> getReuseParser
    void setReuseParser(boolean) -> setReuseParser
    void setFastReconfigure(boolean) -> setFastReconfigure
    void setFeature(java.lang.String,boolean) -> setFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    org.jdom2.input.sax.SAXEngine buildEngine() -> buildEngine
    org.xml.sax.XMLReader createParser() -> createParser
    org.jdom2.input.sax.SAXEngine getEngine() -> getEngine
    void configureParser(org.xml.sax.XMLReader,org.jdom2.input.sax.SAXHandler) -> configureParser
    void internalSetFeature(org.xml.sax.XMLReader,java.lang.String,boolean,java.lang.String) -> internalSetFeature
    void internalSetProperty(org.xml.sax.XMLReader,java.lang.String,java.lang.Object,java.lang.String) -> internalSetProperty
    org.jdom2.Document build(org.xml.sax.InputSource) -> build
    org.jdom2.Document build(java.io.InputStream) -> build
    org.jdom2.Document build(java.io.File) -> build
    org.jdom2.Document build(java.net.URL) -> build
    org.jdom2.Document build(java.io.InputStream,java.lang.String) -> build
    org.jdom2.Document build(java.io.Reader) -> build
    org.jdom2.Document build(java.io.Reader,java.lang.String) -> build
    org.jdom2.Document build(java.lang.String) -> build
org.jdom2.input.StAXEventBuilder -> org.jdom2.input.StAXEventBuilder:
    org.jdom2.JDOMFactory factory -> factory
    org.jdom2.Document process(org.jdom2.JDOMFactory,javax.xml.stream.XMLEventReader) -> process
    org.jdom2.Element processElement(org.jdom2.JDOMFactory,javax.xml.stream.events.StartElement) -> processElement
    org.jdom2.JDOMFactory getFactory() -> getFactory
    void setFactory(org.jdom2.JDOMFactory) -> setFactory
    org.jdom2.Document build(javax.xml.stream.XMLEventReader) -> build
org.jdom2.input.StAXStreamBuilder -> org.jdom2.input.StAXStreamBuilder:
    org.jdom2.JDOMFactory builderfactory -> builderfactory
    org.jdom2.Document process(org.jdom2.JDOMFactory,javax.xml.stream.XMLStreamReader) -> process
    java.util.List processFragments(org.jdom2.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom2.input.stax.StAXFilter) -> processFragments
    org.jdom2.Element processPrunableElement(org.jdom2.JDOMFactory,javax.xml.stream.XMLStreamReader,int,org.jdom2.input.stax.StAXFilter) -> processPrunableElement
    org.jdom2.Content processFragment(org.jdom2.JDOMFactory,javax.xml.stream.XMLStreamReader) -> processFragment
    org.jdom2.Element processElementFragment(org.jdom2.JDOMFactory,javax.xml.stream.XMLStreamReader) -> processElementFragment
    org.jdom2.Element processElement(org.jdom2.JDOMFactory,javax.xml.stream.XMLStreamReader) -> processElement
    org.jdom2.JDOMFactory getFactory() -> getFactory
    void setFactory(org.jdom2.JDOMFactory) -> setFactory
    org.jdom2.Document build(javax.xml.stream.XMLStreamReader) -> build
    java.util.List buildFragments(javax.xml.stream.XMLStreamReader,org.jdom2.input.stax.StAXFilter) -> buildFragments
    org.jdom2.Content fragment(javax.xml.stream.XMLStreamReader) -> fragment
org.jdom2.input.sax.AbstractReaderSchemaFactory -> org.jdom2.input.sax.AbstractReaderSchemaFactory:
    javax.xml.parsers.SAXParserFactory saxfac -> saxfac
    org.xml.sax.XMLReader createXMLReader() -> createXMLReader
    boolean isValidating() -> isValidating
org.jdom2.input.sax.AbstractReaderXSDFactory -> org.jdom2.input.sax.AbstractReaderXSDFactory:
    java.lang.ThreadLocal schemafactl -> schemafactl
    javax.xml.validation.Schema getSchemaFromString(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,java.lang.String[]) -> getSchemaFromString
    javax.xml.validation.Schema getSchemaFromFile(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,java.io.File[]) -> getSchemaFromFile
    javax.xml.validation.Schema getSchemaFromURL(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,java.net.URL[]) -> getSchemaFromURL
    javax.xml.validation.Schema getSchemaFromSource(org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider,javax.xml.transform.Source[]) -> getSchemaFromSource
org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider -> org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider:
    javax.xml.validation.SchemaFactory getSchemaFactory() -> getSchemaFactory
org.jdom2.input.sax.BuilderErrorHandler -> org.jdom2.input.sax.BuilderErrorHandler:
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
org.jdom2.input.sax.DefaultSAXHandlerFactory -> org.jdom2.input.sax.DefaultSAXHandlerFactory:
    org.jdom2.input.sax.SAXHandler createSAXHandler(org.jdom2.JDOMFactory) -> createSAXHandler
org.jdom2.input.sax.DefaultSAXHandlerFactory$DefaultSAXHandler -> org.jdom2.input.sax.DefaultSAXHandlerFactory$DefaultSAXHandler:
org.jdom2.input.sax.SAXBuilderEngine -> org.jdom2.input.sax.SAXBuilderEngine:
    org.xml.sax.XMLReader saxParser -> saxParser
    org.jdom2.input.sax.SAXHandler saxHandler -> saxHandler
    boolean validating -> validating
    org.jdom2.JDOMFactory getJDOMFactory() -> getJDOMFactory
    boolean isValidating() -> isValidating
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    boolean getIgnoringElementContentWhitespace() -> getIgnoringElementContentWhitespace
    boolean getIgnoringBoundaryWhitespace() -> getIgnoringBoundaryWhitespace
    boolean getExpandEntities() -> getExpandEntities
    org.jdom2.Document build(org.xml.sax.InputSource) -> build
    org.jdom2.Document build(java.io.InputStream) -> build
    org.jdom2.Document build(java.io.File) -> build
    org.jdom2.Document build(java.net.URL) -> build
    org.jdom2.Document build(java.io.InputStream,java.lang.String) -> build
    org.jdom2.Document build(java.io.Reader) -> build
    org.jdom2.Document build(java.io.Reader,java.lang.String) -> build
    org.jdom2.Document build(java.lang.String) -> build
    java.net.URL fileToURL(java.io.File) -> fileToURL
org.jdom2.input.sax.SAXEngine -> org.jdom2.input.sax.SAXEngine:
    org.jdom2.JDOMFactory getJDOMFactory() -> getJDOMFactory
    boolean isValidating() -> isValidating
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    boolean getIgnoringElementContentWhitespace() -> getIgnoringElementContentWhitespace
    boolean getIgnoringBoundaryWhitespace() -> getIgnoringBoundaryWhitespace
    boolean getExpandEntities() -> getExpandEntities
    org.jdom2.Document build(org.xml.sax.InputSource) -> build
    org.jdom2.Document build(java.io.InputStream) -> build
    org.jdom2.Document build(java.io.File) -> build
    org.jdom2.Document build(java.net.URL) -> build
    org.jdom2.Document build(java.io.InputStream,java.lang.String) -> build
    org.jdom2.Document build(java.io.Reader) -> build
    org.jdom2.Document build(java.io.Reader,java.lang.String) -> build
    org.jdom2.Document build(java.lang.String) -> build
org.jdom2.input.sax.SAXHandler -> org.jdom2.input.sax.SAXHandler:
    org.jdom2.JDOMFactory factory -> factory
    java.util.List declaredNamespaces -> declaredNamespaces
    java.lang.StringBuilder internalSubset -> internalSubset
    org.jdom2.input.sax.TextBuffer textBuffer -> textBuffer
    java.util.Map externalEntities -> externalEntities
    org.jdom2.Document currentDocument -> currentDocument
    org.jdom2.Element currentElement -> currentElement
    org.xml.sax.Locator currentLocator -> currentLocator
    boolean atRoot -> atRoot
    boolean inDTD -> inDTD
    boolean inInternalSubset -> inInternalSubset
    boolean previousCDATA -> previousCDATA
    boolean inCDATA -> inCDATA
    boolean expand -> expand
    boolean suppress -> suppress
    int entityDepth -> entityDepth
    boolean ignoringWhite -> ignoringWhite
    boolean ignoringBoundaryWhite -> ignoringBoundaryWhite
    int lastline -> lastline
    int lastcol -> lastcol
    void resetSubCLass() -> resetSubCLass
    void reset() -> reset
    void pushElement(org.jdom2.Element) -> pushElement
    org.jdom2.Document getDocument() -> getDocument
    org.jdom2.JDOMFactory getFactory() -> getFactory
    void setExpandEntities(boolean) -> setExpandEntities
    boolean getExpandEntities() -> getExpandEntities
    void setIgnoringElementContentWhitespace(boolean) -> setIgnoringElementContentWhitespace
    void setIgnoringBoundaryWhitespace(boolean) -> setIgnoringBoundaryWhitespace
    boolean getIgnoringBoundaryWhitespace() -> getIgnoringBoundaryWhitespace
    boolean getIgnoringElementContentWhitespace() -> getIgnoringElementContentWhitespace
    void startDocument() -> startDocument
    void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String) -> externalEntityDecl
    void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> attributeDecl
    void elementDecl(java.lang.String,java.lang.String) -> elementDecl
    void internalEntityDecl(java.lang.String,java.lang.String) -> internalEntityDecl
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void skippedEntity(java.lang.String) -> skippedEntity
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void transferNamespaces(org.jdom2.Element) -> transferNamespaces
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void flushCharacters() -> flushCharacters
    void flushCharacters(java.lang.String) -> flushCharacters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void startDTD(java.lang.String,java.lang.String,java.lang.String) -> startDTD
    void endDTD() -> endDTD
    void startEntity(java.lang.String) -> startEntity
    void endEntity(java.lang.String) -> endEntity
    void startCDATA() -> startCDATA
    void endCDATA() -> endCDATA
    void comment(char[],int,int) -> comment
    void notationDecl(java.lang.String,java.lang.String,java.lang.String) -> notationDecl
    void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> unparsedEntityDecl
    void appendExternalId(java.lang.String,java.lang.String) -> appendExternalId
    org.jdom2.Element getCurrentElement() -> getCurrentElement
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    org.xml.sax.Locator getDocumentLocator() -> getDocumentLocator
org.jdom2.input.sax.SAXHandlerFactory -> org.jdom2.input.sax.SAXHandlerFactory:
    org.jdom2.input.sax.SAXHandler createSAXHandler(org.jdom2.JDOMFactory) -> createSAXHandler
org.jdom2.input.sax.TextBuffer -> org.jdom2.input.sax.TextBuffer:
    char[] array -> array
    int arraySize -> arraySize
    void append(char[],int,int) -> append
    void clear() -> clear
    boolean isAllWhitespace() -> isAllWhitespace
    java.lang.String toString() -> toString
org.jdom2.input.sax.XMLReaderJAXPFactory -> org.jdom2.input.sax.XMLReaderJAXPFactory:
    javax.xml.parsers.SAXParserFactory instance -> instance
    boolean validating -> validating
    org.xml.sax.XMLReader createXMLReader() -> createXMLReader
    boolean isValidating() -> isValidating
org.jdom2.input.sax.XMLReaderJDOMFactory -> org.jdom2.input.sax.XMLReaderJDOMFactory:
    org.xml.sax.XMLReader createXMLReader() -> createXMLReader
    boolean isValidating() -> isValidating
org.jdom2.input.sax.XMLReaderSAX2Factory -> org.jdom2.input.sax.XMLReaderSAX2Factory:
    boolean validate -> validate
    java.lang.String saxdriver -> saxdriver
    org.xml.sax.XMLReader createXMLReader() -> createXMLReader
    java.lang.String getDriverClassName() -> getDriverClassName
    boolean isValidating() -> isValidating
org.jdom2.input.sax.XMLReaderSchemaFactory -> org.jdom2.input.sax.XMLReaderSchemaFactory:
org.jdom2.input.sax.XMLReaderXSDFactory -> org.jdom2.input.sax.XMLReaderXSDFactory:
    org.jdom2.input.sax.AbstractReaderXSDFactory$SchemaFactoryProvider xsdschemas -> xsdschemas
org.jdom2.input.sax.XMLReaderXSDFactory$1 -> org.jdom2.input.sax.XMLReaderXSDFactory$1:
    javax.xml.validation.SchemaFactory getSchemaFactory() -> getSchemaFactory
org.jdom2.input.sax.XMLReaders -> org.jdom2.input.sax.XMLReaders:
    org.jdom2.input.sax.XMLReaders NONVALIDATING -> NONVALIDATING
    org.jdom2.input.sax.XMLReaders DTDVALIDATING -> DTDVALIDATING
    org.jdom2.input.sax.XMLReaders XSDVALIDATING -> XSDVALIDATING
    javax.xml.parsers.SAXParserFactory jaxpfactory -> jaxpfactory
    java.lang.Exception failcause -> failcause
    boolean validates -> validates
    org.jdom2.input.sax.XMLReaders[] $VALUES -> $VALUES
    org.jdom2.input.sax.XMLReaders[] values() -> values
    org.jdom2.input.sax.XMLReaders valueOf(java.lang.String) -> valueOf
    org.xml.sax.XMLReader createXMLReader() -> createXMLReader
    boolean isValidating() -> isValidating
org.jdom2.input.sax.package-info -> org.jdom2.input.sax.package-info:
org.jdom2.input.stax.DTDParser -> org.jdom2.input.stax.DTDParser:
    java.lang.String metapattern -> metapattern
    java.util.regex.Pattern pattern -> pattern
    java.util.HashMap populatePatterns() -> populatePatterns
    java.util.regex.Pattern buildPattern(java.util.HashMap,java.lang.String) -> buildPattern
    java.lang.String getGroup(java.util.regex.Matcher,int[]) -> getGroup
    boolean isWhite(char) -> isWhite
    java.lang.String formatInternal(java.lang.String) -> formatInternal
    org.jdom2.DocType parse(java.lang.String,org.jdom2.JDOMFactory) -> parse
org.jdom2.input.stax.DefaultStAXFilter -> org.jdom2.input.stax.DefaultStAXFilter:
    boolean includeDocType() -> includeDocType
    boolean includeElement(int,java.lang.String,org.jdom2.Namespace) -> includeElement
    java.lang.String includeComment(int,java.lang.String) -> includeComment
    boolean includeEntityRef(int,java.lang.String) -> includeEntityRef
    java.lang.String includeCDATA(int,java.lang.String) -> includeCDATA
    java.lang.String includeText(int,java.lang.String) -> includeText
    boolean includeProcessingInstruction(int,java.lang.String) -> includeProcessingInstruction
    boolean pruneElement(int,java.lang.String,org.jdom2.Namespace) -> pruneElement
    java.lang.String pruneComment(int,java.lang.String) -> pruneComment
    boolean pruneEntityRef(int,java.lang.String) -> pruneEntityRef
    java.lang.String pruneCDATA(int,java.lang.String) -> pruneCDATA
    java.lang.String pruneText(int,java.lang.String) -> pruneText
    boolean pruneProcessingInstruction(int,java.lang.String) -> pruneProcessingInstruction
org.jdom2.input.stax.StAXFilter -> org.jdom2.input.stax.StAXFilter:
    boolean includeDocType() -> includeDocType
    boolean includeElement(int,java.lang.String,org.jdom2.Namespace) -> includeElement
    java.lang.String includeComment(int,java.lang.String) -> includeComment
    boolean includeEntityRef(int,java.lang.String) -> includeEntityRef
    java.lang.String includeCDATA(int,java.lang.String) -> includeCDATA
    java.lang.String includeText(int,java.lang.String) -> includeText
    boolean includeProcessingInstruction(int,java.lang.String) -> includeProcessingInstruction
    boolean pruneElement(int,java.lang.String,org.jdom2.Namespace) -> pruneElement
    java.lang.String pruneComment(int,java.lang.String) -> pruneComment
    boolean pruneEntityRef(int,java.lang.String) -> pruneEntityRef
    java.lang.String pruneCDATA(int,java.lang.String) -> pruneCDATA
    java.lang.String pruneText(int,java.lang.String) -> pruneText
    boolean pruneProcessingInstruction(int,java.lang.String) -> pruneProcessingInstruction
org.jdom2.input.stax.package-info -> org.jdom2.input.stax.package-info:
org.jdom2.internal.ArrayCopy -> org.jdom2.internal.ArrayCopy:
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> copyOfRange
    char[] copyOf(char[],int) -> copyOf
    int[] copyOf(int[],int) -> copyOf
    boolean[] copyOf(boolean[],int) -> copyOf
org.jdom2.internal.ReflectionConstructor -> org.jdom2.internal.ReflectionConstructor:
    java.lang.Object construct(java.lang.String,java.lang.Class) -> construct
org.jdom2.internal.SystemProperty -> org.jdom2.internal.SystemProperty:
    java.lang.String get(java.lang.String,java.lang.String) -> get
org.jdom2.located.Located -> org.jdom2.located.Located:
    int getLine() -> getLine
    int getColumn() -> getColumn
    void setLine(int) -> setLine
    void setColumn(int) -> setColumn
org.jdom2.located.LocatedCDATA -> org.jdom2.located.LocatedCDATA:
    long serialVersionUID -> serialVersionUID
    int line -> line
    int col -> col
    int getLine() -> getLine
    int getColumn() -> getColumn
    void setLine(int) -> setLine
    void setColumn(int) -> setColumn
org.jdom2.located.LocatedComment -> org.jdom2.located.LocatedComment:
    long serialVersionUID -> serialVersionUID
    int line -> line
    int col -> col
    int getLine() -> getLine
    int getColumn() -> getColumn
    void setLine(int) -> setLine
    void setColumn(int) -> setColumn
org.jdom2.located.LocatedDocType -> org.jdom2.located.LocatedDocType:
    long serialVersionUID -> serialVersionUID
    int line -> line
    int col -> col
    int getLine() -> getLine
    int getColumn() -> getColumn
    void setLine(int) -> setLine
    void setColumn(int) -> setColumn
org.jdom2.located.LocatedElement -> org.jdom2.located.LocatedElement:
    long serialVersionUID -> serialVersionUID
    int line -> line
    int col -> col
    int getLine() -> getLine
    int getColumn() -> getColumn
    void setLine(int) -> setLine
    void setColumn(int) -> setColumn
org.jdom2.located.LocatedEntityRef -> org.jdom2.located.LocatedEntityRef:
    long serialVersionUID -> serialVersionUID
    int line -> line
    int col -> col
    int getLine() -> getLine
    int getColumn() -> getColumn
    void setLine(int) -> setLine
    void setColumn(int) -> setColumn
org.jdom2.located.LocatedJDOMFactory -> org.jdom2.located.LocatedJDOMFactory:
    org.jdom2.CDATA cdata(int,int,java.lang.String) -> cdata
    org.jdom2.Text text(int,int,java.lang.String) -> text
    org.jdom2.Comment comment(int,int,java.lang.String) -> comment
    org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String,java.lang.String) -> docType
    org.jdom2.DocType docType(int,int,java.lang.String) -> docType
    org.jdom2.Element element(int,int,java.lang.String,org.jdom2.Namespace) -> element
    org.jdom2.Element element(int,int,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,java.lang.String) -> element
    org.jdom2.Element element(int,int,java.lang.String,java.lang.String,java.lang.String) -> element
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.util.Map) -> processingInstruction
    org.jdom2.ProcessingInstruction processingInstruction(int,int,java.lang.String,java.lang.String) -> processingInstruction
    org.jdom2.EntityRef entityRef(int,int,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String,java.lang.String) -> entityRef
    org.jdom2.EntityRef entityRef(int,int,java.lang.String,java.lang.String) -> entityRef
org.jdom2.located.LocatedProcessingInstruction -> org.jdom2.located.LocatedProcessingInstruction:
    long serialVersionUID -> serialVersionUID
    int line -> line
    int col -> col
    int getLine() -> getLine
    int getColumn() -> getColumn
    void setLine(int) -> setLine
    void setColumn(int) -> setColumn
org.jdom2.located.LocatedText -> org.jdom2.located.LocatedText:
    long serialVersionUID -> serialVersionUID
    int line -> line
    int col -> col
    int getLine() -> getLine
    int getColumn() -> getColumn
    void setLine(int) -> setLine
    void setColumn(int) -> setColumn
org.jdom2.output.DOMOutputter -> org.jdom2.output.DOMOutputter:
    org.jdom2.adapters.DOMAdapter DEFAULT_ADAPTER -> DEFAULT_ADAPTER
    org.jdom2.output.support.DOMOutputProcessor DEFAULT_PROCESSOR -> DEFAULT_PROCESSOR
    org.jdom2.adapters.DOMAdapter adapter -> adapter
    org.jdom2.output.Format format -> format
    org.jdom2.output.support.DOMOutputProcessor processor -> processor
    org.jdom2.adapters.DOMAdapter getDOMAdapter() -> getDOMAdapter
    void setDOMAdapter(org.jdom2.adapters.DOMAdapter) -> setDOMAdapter
    org.jdom2.output.Format getFormat() -> getFormat
    void setFormat(org.jdom2.output.Format) -> setFormat
    org.jdom2.output.support.DOMOutputProcessor getDOMOutputProcessor() -> getDOMOutputProcessor
    void setDOMOutputProcessor(org.jdom2.output.support.DOMOutputProcessor) -> setDOMOutputProcessor
    void setForceNamespaceAware(boolean) -> setForceNamespaceAware
    boolean getForceNamespaceAware() -> getForceNamespaceAware
    org.w3c.dom.Document output(org.jdom2.Document) -> output
    org.w3c.dom.DocumentType output(org.jdom2.DocType) -> output
    org.w3c.dom.Element output(org.jdom2.Element) -> output
    org.w3c.dom.Text output(org.jdom2.Text) -> output
    org.w3c.dom.CDATASection output(org.jdom2.CDATA) -> output
    org.w3c.dom.ProcessingInstruction output(org.jdom2.ProcessingInstruction) -> output
    org.w3c.dom.Comment output(org.jdom2.Comment) -> output
    org.w3c.dom.EntityReference output(org.jdom2.EntityRef) -> output
    org.w3c.dom.Attr output(org.jdom2.Attribute) -> output
    java.util.List output(java.util.List) -> output
    org.w3c.dom.Element output(org.w3c.dom.Document,org.jdom2.Element) -> output
    org.w3c.dom.Text output(org.w3c.dom.Document,org.jdom2.Text) -> output
    org.w3c.dom.CDATASection output(org.w3c.dom.Document,org.jdom2.CDATA) -> output
    org.w3c.dom.ProcessingInstruction output(org.w3c.dom.Document,org.jdom2.ProcessingInstruction) -> output
    org.w3c.dom.Comment output(org.w3c.dom.Document,org.jdom2.Comment) -> output
    org.w3c.dom.EntityReference output(org.w3c.dom.Document,org.jdom2.EntityRef) -> output
    org.w3c.dom.Attr output(org.w3c.dom.Document,org.jdom2.Attribute) -> output
    java.util.List output(org.w3c.dom.Document,java.util.List) -> output
org.jdom2.output.DOMOutputter$1 -> org.jdom2.output.DOMOutputter$1:
org.jdom2.output.DOMOutputter$DefaultDOMOutputProcessor -> org.jdom2.output.DOMOutputter$DefaultDOMOutputProcessor:
org.jdom2.output.EscapeStrategy -> org.jdom2.output.EscapeStrategy:
    boolean shouldEscape(char) -> shouldEscape
org.jdom2.output.Format -> org.jdom2.output.Format:
    org.jdom2.output.EscapeStrategy UTFEscapeStrategy -> UTFEscapeStrategy
    org.jdom2.output.EscapeStrategy Bits8EscapeStrategy -> Bits8EscapeStrategy
    org.jdom2.output.EscapeStrategy Bits7EscapeStrategy -> Bits7EscapeStrategy
    org.jdom2.output.EscapeStrategy DefaultEscapeStrategy -> DefaultEscapeStrategy
    java.lang.String STANDARD_INDENT -> STANDARD_INDENT
    java.lang.String STANDARD_LINE_SEPARATOR -> STANDARD_LINE_SEPARATOR
    java.lang.String STANDARD_ENCODING -> STANDARD_ENCODING
    java.lang.String indent -> indent
    java.lang.String lineSeparator -> lineSeparator
    java.lang.String encoding -> encoding
    boolean omitDeclaration -> omitDeclaration
    boolean omitEncoding -> omitEncoding
    boolean specifiedAttributesOnly -> specifiedAttributesOnly
    boolean expandEmptyElements -> expandEmptyElements
    boolean ignoreTrAXEscapingPIs -> ignoreTrAXEscapingPIs
    org.jdom2.output.Format$TextMode mode -> mode
    org.jdom2.output.EscapeStrategy escapeStrategy -> escapeStrategy
    org.jdom2.output.Format getRawFormat() -> getRawFormat
    org.jdom2.output.Format getPrettyFormat() -> getPrettyFormat
    org.jdom2.output.Format getCompactFormat() -> getCompactFormat
    java.lang.String compact(java.lang.String) -> compact
    java.lang.String trimRight(java.lang.String) -> trimRight
    java.lang.String trimLeft(java.lang.String) -> trimLeft
    java.lang.String trimBoth(java.lang.String) -> trimBoth
    java.lang.String escapeAttribute(org.jdom2.output.EscapeStrategy,java.lang.String) -> escapeAttribute
    java.lang.String escapeText(org.jdom2.output.EscapeStrategy,java.lang.String,java.lang.String) -> escapeText
    org.jdom2.output.EscapeStrategy chooseStrategy(java.lang.String) -> chooseStrategy
    org.jdom2.output.Format setEscapeStrategy(org.jdom2.output.EscapeStrategy) -> setEscapeStrategy
    org.jdom2.output.EscapeStrategy getEscapeStrategy() -> getEscapeStrategy
    org.jdom2.output.Format setLineSeparator(java.lang.String) -> setLineSeparator
    org.jdom2.output.Format setLineSeparator(org.jdom2.output.LineSeparator) -> setLineSeparator
    java.lang.String getLineSeparator() -> getLineSeparator
    org.jdom2.output.Format setOmitEncoding(boolean) -> setOmitEncoding
    boolean getOmitEncoding() -> getOmitEncoding
    org.jdom2.output.Format setOmitDeclaration(boolean) -> setOmitDeclaration
    boolean getOmitDeclaration() -> getOmitDeclaration
    org.jdom2.output.Format setExpandEmptyElements(boolean) -> setExpandEmptyElements
    boolean getExpandEmptyElements() -> getExpandEmptyElements
    void setIgnoreTrAXEscapingPIs(boolean) -> setIgnoreTrAXEscapingPIs
    boolean getIgnoreTrAXEscapingPIs() -> getIgnoreTrAXEscapingPIs
    org.jdom2.output.Format setTextMode(org.jdom2.output.Format$TextMode) -> setTextMode
    org.jdom2.output.Format$TextMode getTextMode() -> getTextMode
    org.jdom2.output.Format setIndent(java.lang.String) -> setIndent
    java.lang.String getIndent() -> getIndent
    org.jdom2.output.Format setEncoding(java.lang.String) -> setEncoding
    java.lang.String getEncoding() -> getEncoding
    boolean isSpecifiedAttributesOnly() -> isSpecifiedAttributesOnly
    void setSpecifiedAttributesOnly(boolean) -> setSpecifiedAttributesOnly
    org.jdom2.output.Format clone() -> clone
    java.lang.Object clone() -> clone
org.jdom2.output.Format$1 -> org.jdom2.output.Format$1:
    boolean shouldEscape(char) -> shouldEscape
org.jdom2.output.Format$DefaultCharsetEscapeStrategy -> org.jdom2.output.Format$DefaultCharsetEscapeStrategy:
    java.nio.charset.CharsetEncoder encoder -> encoder
    boolean shouldEscape(char) -> shouldEscape
org.jdom2.output.Format$EscapeStrategy7Bits -> org.jdom2.output.Format$EscapeStrategy7Bits:
    boolean shouldEscape(char) -> shouldEscape
org.jdom2.output.Format$EscapeStrategy8Bits -> org.jdom2.output.Format$EscapeStrategy8Bits:
    boolean shouldEscape(char) -> shouldEscape
org.jdom2.output.Format$EscapeStrategyUTF -> org.jdom2.output.Format$EscapeStrategyUTF:
    boolean shouldEscape(char) -> shouldEscape
org.jdom2.output.Format$TextMode -> org.jdom2.output.Format$TextMode:
    org.jdom2.output.Format$TextMode PRESERVE -> PRESERVE
    org.jdom2.output.Format$TextMode TRIM -> TRIM
    org.jdom2.output.Format$TextMode NORMALIZE -> NORMALIZE
    org.jdom2.output.Format$TextMode TRIM_FULL_WHITE -> TRIM_FULL_WHITE
    org.jdom2.output.Format$TextMode[] $VALUES -> $VALUES
    org.jdom2.output.Format$TextMode[] values() -> values
    org.jdom2.output.Format$TextMode valueOf(java.lang.String) -> valueOf
org.jdom2.output.JDOMLocator -> org.jdom2.output.JDOMLocator:
    java.lang.Object getNode() -> getNode
org.jdom2.output.LineSeparator -> org.jdom2.output.LineSeparator:
    org.jdom2.output.LineSeparator CRNL -> CRNL
    org.jdom2.output.LineSeparator NL -> NL
    org.jdom2.output.LineSeparator CR -> CR
    org.jdom2.output.LineSeparator DOS -> DOS
    org.jdom2.output.LineSeparator UNIX -> UNIX
    org.jdom2.output.LineSeparator SYSTEM -> SYSTEM
    org.jdom2.output.LineSeparator NONE -> NONE
    org.jdom2.output.LineSeparator DEFAULT -> DEFAULT
    java.lang.String value -> value
    org.jdom2.output.LineSeparator[] $VALUES -> $VALUES
    org.jdom2.output.LineSeparator[] values() -> values
    org.jdom2.output.LineSeparator valueOf(java.lang.String) -> valueOf
    java.lang.String getDefaultLineSeparator() -> getDefaultLineSeparator
    java.lang.String value() -> value
org.jdom2.output.SAXOutputter -> org.jdom2.output.SAXOutputter:
    org.jdom2.output.support.SAXOutputProcessor DEFAULT_PROCESSOR -> DEFAULT_PROCESSOR
    org.xml.sax.ContentHandler contentHandler -> contentHandler
    org.xml.sax.ErrorHandler errorHandler -> errorHandler
    org.xml.sax.DTDHandler dtdHandler -> dtdHandler
    org.xml.sax.EntityResolver entityResolver -> entityResolver
    org.xml.sax.ext.LexicalHandler lexicalHandler -> lexicalHandler
    org.xml.sax.ext.DeclHandler declHandler -> declHandler
    boolean declareNamespaces -> declareNamespaces
    boolean reportDtdEvents -> reportDtdEvents
    org.jdom2.output.support.SAXOutputProcessor processor -> processor
    org.jdom2.output.Format format -> format
    void setContentHandler(org.xml.sax.ContentHandler) -> setContentHandler
    org.xml.sax.ContentHandler getContentHandler() -> getContentHandler
    void setErrorHandler(org.xml.sax.ErrorHandler) -> setErrorHandler
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    void setDTDHandler(org.xml.sax.DTDHandler) -> setDTDHandler
    org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setLexicalHandler(org.xml.sax.ext.LexicalHandler) -> setLexicalHandler
    org.xml.sax.ext.LexicalHandler getLexicalHandler() -> getLexicalHandler
    void setDeclHandler(org.xml.sax.ext.DeclHandler) -> setDeclHandler
    org.xml.sax.ext.DeclHandler getDeclHandler() -> getDeclHandler
    boolean getReportNamespaceDeclarations() -> getReportNamespaceDeclarations
    void setReportNamespaceDeclarations(boolean) -> setReportNamespaceDeclarations
    boolean getReportDTDEvents() -> getReportDTDEvents
    void setReportDTDEvents(boolean) -> setReportDTDEvents
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    org.jdom2.output.support.SAXOutputProcessor getSAXOutputProcessor() -> getSAXOutputProcessor
    void setSAXOutputProcessor(org.jdom2.output.support.SAXOutputProcessor) -> setSAXOutputProcessor
    org.jdom2.output.Format getFormat() -> getFormat
    void setFormat(org.jdom2.output.Format) -> setFormat
    org.jdom2.output.support.SAXTarget buildTarget(org.jdom2.Document) -> buildTarget
    void output(org.jdom2.Document) -> output
    void output(java.util.List) -> output
    void output(org.jdom2.Element) -> output
    void outputFragment(java.util.List) -> outputFragment
    void outputFragment(org.jdom2.Content) -> outputFragment
    void handleError(org.jdom2.JDOMException) -> handleError
    org.jdom2.output.JDOMLocator getLocator() -> getLocator
org.jdom2.output.SAXOutputter$1 -> org.jdom2.output.SAXOutputter$1:
    int[] $SwitchMap$org$jdom2$Content$CType -> $SwitchMap$org$jdom2$Content$CType
org.jdom2.output.SAXOutputter$DefaultSAXOutputProcessor -> org.jdom2.output.SAXOutputter$DefaultSAXOutputProcessor:
org.jdom2.output.StAXEventOutputter -> org.jdom2.output.StAXEventOutputter:
    org.jdom2.output.StAXEventOutputter$DefaultStAXEventProcessor DEFAULTPROCESSOR -> DEFAULTPROCESSOR
    javax.xml.stream.XMLEventFactory DEFAULTEVENTFACTORY -> DEFAULTEVENTFACTORY
    org.jdom2.output.Format myFormat -> myFormat
    org.jdom2.output.support.StAXEventProcessor myProcessor -> myProcessor
    javax.xml.stream.XMLEventFactory myEventFactory -> myEventFactory
    void setFormat(org.jdom2.output.Format) -> setFormat
    org.jdom2.output.Format getFormat() -> getFormat
    org.jdom2.output.support.StAXEventProcessor getStAXStream() -> getStAXStream
    void setStAXEventProcessor(org.jdom2.output.support.StAXEventProcessor) -> setStAXEventProcessor
    javax.xml.stream.XMLEventFactory getEventFactory() -> getEventFactory
    void setEventFactory(javax.xml.stream.XMLEventFactory) -> setEventFactory
    void output(org.jdom2.Document,javax.xml.stream.util.XMLEventConsumer) -> output
    void output(org.jdom2.DocType,javax.xml.stream.util.XMLEventConsumer) -> output
    void output(org.jdom2.Element,javax.xml.stream.util.XMLEventConsumer) -> output
    void outputElementContent(org.jdom2.Element,javax.xml.stream.util.XMLEventConsumer) -> outputElementContent
    void output(java.util.List,javax.xml.stream.util.XMLEventConsumer) -> output
    void output(org.jdom2.CDATA,javax.xml.stream.util.XMLEventConsumer) -> output
    void output(org.jdom2.Text,javax.xml.stream.util.XMLEventConsumer) -> output
    void output(org.jdom2.Comment,javax.xml.stream.util.XMLEventConsumer) -> output
    void output(org.jdom2.ProcessingInstruction,javax.xml.stream.util.XMLEventConsumer) -> output
    void output(org.jdom2.EntityRef,javax.xml.stream.util.XMLEventConsumer) -> output
    org.jdom2.output.StAXEventOutputter clone() -> clone
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.jdom2.output.StAXEventOutputter$1 -> org.jdom2.output.StAXEventOutputter$1:
org.jdom2.output.StAXEventOutputter$DefaultStAXEventProcessor -> org.jdom2.output.StAXEventOutputter$DefaultStAXEventProcessor:
org.jdom2.output.StAXStreamOutputter -> org.jdom2.output.StAXStreamOutputter:
    org.jdom2.output.StAXStreamOutputter$DefaultStAXStreamProcessor DEFAULTPROCESSOR -> DEFAULTPROCESSOR
    org.jdom2.output.Format myFormat -> myFormat
    org.jdom2.output.support.StAXStreamProcessor myProcessor -> myProcessor
    void setFormat(org.jdom2.output.Format) -> setFormat
    org.jdom2.output.Format getFormat() -> getFormat
    org.jdom2.output.support.StAXStreamProcessor getStAXStream() -> getStAXStream
    void setStAXStreamProcessor(org.jdom2.output.support.StAXStreamProcessor) -> setStAXStreamProcessor
    void output(org.jdom2.Document,javax.xml.stream.XMLStreamWriter) -> output
    void output(org.jdom2.DocType,javax.xml.stream.XMLStreamWriter) -> output
    void output(org.jdom2.Element,javax.xml.stream.XMLStreamWriter) -> output
    void outputElementContent(org.jdom2.Element,javax.xml.stream.XMLStreamWriter) -> outputElementContent
    void output(java.util.List,javax.xml.stream.XMLStreamWriter) -> output
    void output(org.jdom2.CDATA,javax.xml.stream.XMLStreamWriter) -> output
    void output(org.jdom2.Text,javax.xml.stream.XMLStreamWriter) -> output
    void output(org.jdom2.Comment,javax.xml.stream.XMLStreamWriter) -> output
    void output(org.jdom2.ProcessingInstruction,javax.xml.stream.XMLStreamWriter) -> output
    void output(org.jdom2.EntityRef,javax.xml.stream.XMLStreamWriter) -> output
    org.jdom2.output.StAXStreamOutputter clone() -> clone
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.jdom2.output.StAXStreamOutputter$1 -> org.jdom2.output.StAXStreamOutputter$1:
org.jdom2.output.StAXStreamOutputter$DefaultStAXStreamProcessor -> org.jdom2.output.StAXStreamOutputter$DefaultStAXStreamProcessor:
org.jdom2.output.XMLOutputter -> org.jdom2.output.XMLOutputter:
    org.jdom2.output.XMLOutputter$DefaultXMLProcessor DEFAULTPROCESSOR -> DEFAULTPROCESSOR
    org.jdom2.output.Format myFormat -> myFormat
    org.jdom2.output.support.XMLOutputProcessor myProcessor -> myProcessor
    java.io.Writer makeWriter(java.io.OutputStream,org.jdom2.output.Format) -> makeWriter
    void setFormat(org.jdom2.output.Format) -> setFormat
    org.jdom2.output.Format getFormat() -> getFormat
    org.jdom2.output.support.XMLOutputProcessor getXMLOutputProcessor() -> getXMLOutputProcessor
    void setXMLOutputProcessor(org.jdom2.output.support.XMLOutputProcessor) -> setXMLOutputProcessor
    void output(org.jdom2.Document,java.io.OutputStream) -> output
    void output(org.jdom2.DocType,java.io.OutputStream) -> output
    void output(org.jdom2.Element,java.io.OutputStream) -> output
    void outputElementContent(org.jdom2.Element,java.io.OutputStream) -> outputElementContent
    void output(java.util.List,java.io.OutputStream) -> output
    void output(org.jdom2.CDATA,java.io.OutputStream) -> output
    void output(org.jdom2.Text,java.io.OutputStream) -> output
    void output(org.jdom2.Comment,java.io.OutputStream) -> output
    void output(org.jdom2.ProcessingInstruction,java.io.OutputStream) -> output
    void output(org.jdom2.EntityRef,java.io.OutputStream) -> output
    java.lang.String outputString(org.jdom2.Document) -> outputString
    java.lang.String outputString(org.jdom2.DocType) -> outputString
    java.lang.String outputString(org.jdom2.Element) -> outputString
    java.lang.String outputString(java.util.List) -> outputString
    java.lang.String outputString(org.jdom2.CDATA) -> outputString
    java.lang.String outputString(org.jdom2.Text) -> outputString
    java.lang.String outputString(org.jdom2.Comment) -> outputString
    java.lang.String outputString(org.jdom2.ProcessingInstruction) -> outputString
    java.lang.String outputString(org.jdom2.EntityRef) -> outputString
    java.lang.String outputElementContentString(org.jdom2.Element) -> outputElementContentString
    void output(org.jdom2.Document,java.io.Writer) -> output
    void output(org.jdom2.DocType,java.io.Writer) -> output
    void output(org.jdom2.Element,java.io.Writer) -> output
    void outputElementContent(org.jdom2.Element,java.io.Writer) -> outputElementContent
    void output(java.util.List,java.io.Writer) -> output
    void output(org.jdom2.CDATA,java.io.Writer) -> output
    void output(org.jdom2.Text,java.io.Writer) -> output
    void output(org.jdom2.Comment,java.io.Writer) -> output
    void output(org.jdom2.ProcessingInstruction,java.io.Writer) -> output
    void output(org.jdom2.EntityRef,java.io.Writer) -> output
    java.lang.String escapeAttributeEntities(java.lang.String) -> escapeAttributeEntities
    java.lang.String escapeElementEntities(java.lang.String) -> escapeElementEntities
    org.jdom2.output.XMLOutputter clone() -> clone
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.jdom2.output.XMLOutputter$1 -> org.jdom2.output.XMLOutputter$1:
org.jdom2.output.XMLOutputter$DefaultXMLProcessor -> org.jdom2.output.XMLOutputter$DefaultXMLProcessor:
    java.lang.String escapeAttributeEntities(java.lang.String,org.jdom2.output.Format) -> escapeAttributeEntities
    java.lang.String escapeElementEntities(java.lang.String,org.jdom2.output.Format) -> escapeElementEntities
org.jdom2.output.support.AbstractDOMOutputProcessor -> org.jdom2.output.support.AbstractDOMOutputProcessor:
    java.lang.String getXmlnsTagFor(org.jdom2.Namespace) -> getXmlnsTagFor
    org.w3c.dom.Document process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.Document) -> process
    org.w3c.dom.Element process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.Element) -> process
    java.util.List process(org.w3c.dom.Document,org.jdom2.output.Format,java.util.List) -> process
    org.w3c.dom.CDATASection process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.CDATA) -> process
    org.w3c.dom.Text process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.Text) -> process
    org.w3c.dom.Comment process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.Comment) -> process
    org.w3c.dom.ProcessingInstruction process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.ProcessingInstruction) -> process
    org.w3c.dom.EntityReference process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.EntityRef) -> process
    org.w3c.dom.Attr process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.Attribute) -> process
    org.w3c.dom.Document printDocument(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.jdom2.Document) -> printDocument
    org.w3c.dom.ProcessingInstruction printProcessingInstruction(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.ProcessingInstruction) -> printProcessingInstruction
    org.w3c.dom.Comment printComment(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Comment) -> printComment
    org.w3c.dom.EntityReference printEntityRef(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.EntityRef) -> printEntityRef
    org.w3c.dom.CDATASection printCDATA(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.CDATA) -> printCDATA
    org.w3c.dom.Text printText(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Text) -> printText
    org.w3c.dom.Attr printAttribute(org.jdom2.output.support.FormatStack,org.w3c.dom.Document,org.jdom2.Attribute) -> printAttribute
    org.w3c.dom.Element printElement(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.jdom2.Element) -> printElement
    void printContent(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.w3c.dom.Node,org.jdom2.output.support.Walker) -> printContent
    org.w3c.dom.Node helperContentDispatcher(org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.w3c.dom.Document,org.jdom2.Content) -> helperContentDispatcher
org.jdom2.output.support.AbstractDOMOutputProcessor$1 -> org.jdom2.output.support.AbstractDOMOutputProcessor$1:
    int[] $SwitchMap$org$jdom2$Content$CType -> $SwitchMap$org$jdom2$Content$CType
org.jdom2.output.support.AbstractFormattedWalker -> org.jdom2.output.support.AbstractFormattedWalker:
    org.jdom2.CDATA CDATATOKEN -> CDATATOKEN
    java.util.Iterator EMPTYIT -> EMPTYIT
    org.jdom2.Content pending -> pending
    java.util.Iterator content -> content
    boolean alltext -> alltext
    boolean allwhite -> allwhite
    java.lang.String newlineindent -> newlineindent
    java.lang.String endofline -> endofline
    org.jdom2.output.EscapeStrategy escape -> escape
    org.jdom2.output.support.FormatStack fstack -> fstack
    boolean hasnext -> hasnext
    org.jdom2.output.support.AbstractFormattedWalker$MultiText multitext -> multitext
    org.jdom2.output.support.AbstractFormattedWalker$MultiText pendingmt -> pendingmt
    org.jdom2.output.support.AbstractFormattedWalker$MultiText holdingmt -> holdingmt
    java.lang.StringBuilder mtbuffer -> mtbuffer
    boolean mtpostpad -> mtpostpad
    boolean mtgottext -> mtgottext
    int mtsize -> mtsize
    int mtsourcesize -> mtsourcesize
    org.jdom2.Content[] mtsource -> mtsource
    org.jdom2.Content[] mtdata -> mtdata
    java.lang.String[] mttext -> mttext
    int mtpos -> mtpos
    java.lang.Boolean mtwasescape -> mtwasescape
    org.jdom2.Content next() -> next
    void resetMultiText() -> resetMultiText
    void analyzeMultiText(org.jdom2.output.support.AbstractFormattedWalker$MultiText,int,int) -> analyzeMultiText
    org.jdom2.Content get(int) -> get
    boolean isAllText() -> isAllText
    boolean hasNext() -> hasNext
    org.jdom2.output.support.AbstractFormattedWalker$MultiText buildMultiText(boolean) -> buildMultiText
    java.lang.String text() -> text
    boolean isCDATA() -> isCDATA
    boolean isAllWhitespace() -> isAllWhitespace
    boolean isTextLike(org.jdom2.Content) -> isTextLike
    int access$000(org.jdom2.output.support.AbstractFormattedWalker) -> access$000
    org.jdom2.Content[] access$100(org.jdom2.output.support.AbstractFormattedWalker) -> access$100
    org.jdom2.Content[] access$102(org.jdom2.output.support.AbstractFormattedWalker,org.jdom2.Content[]) -> access$102
    java.lang.String[] access$202(org.jdom2.output.support.AbstractFormattedWalker,java.lang.String[]) -> access$202
    java.lang.String[] access$200(org.jdom2.output.support.AbstractFormattedWalker) -> access$200
    java.lang.StringBuilder access$300(org.jdom2.output.support.AbstractFormattedWalker) -> access$300
    int access$008(org.jdom2.output.support.AbstractFormattedWalker) -> access$008
    boolean access$402(org.jdom2.output.support.AbstractFormattedWalker,boolean) -> access$402
    org.jdom2.output.EscapeStrategy access$500(org.jdom2.output.support.AbstractFormattedWalker) -> access$500
    org.jdom2.output.support.FormatStack access$600(org.jdom2.output.support.AbstractFormattedWalker) -> access$600
    java.lang.String access$700(org.jdom2.output.support.AbstractFormattedWalker) -> access$700
    org.jdom2.CDATA access$800() -> access$800
    boolean access$900(org.jdom2.output.support.AbstractFormattedWalker) -> access$900
    java.lang.String access$1000(org.jdom2.output.support.AbstractFormattedWalker) -> access$1000
    boolean access$400(org.jdom2.output.support.AbstractFormattedWalker) -> access$400
org.jdom2.output.support.AbstractFormattedWalker$1 -> org.jdom2.output.support.AbstractFormattedWalker$1:
    boolean hasNext() -> hasNext
    org.jdom2.Content next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jdom2.output.support.AbstractFormattedWalker$2 -> org.jdom2.output.support.AbstractFormattedWalker$2:
    int[] $SwitchMap$org$jdom2$output$support$AbstractFormattedWalker$Trim -> $SwitchMap$org$jdom2$output$support$AbstractFormattedWalker$Trim
    int[] $SwitchMap$org$jdom2$Content$CType -> $SwitchMap$org$jdom2$Content$CType
org.jdom2.output.support.AbstractFormattedWalker$MultiText -> org.jdom2.output.support.AbstractFormattedWalker$MultiText:
    org.jdom2.output.support.AbstractFormattedWalker this$0 -> this$0
    void ensurespace() -> ensurespace
    void closeText() -> closeText
    void appendText(org.jdom2.output.support.AbstractFormattedWalker$Trim,java.lang.String) -> appendText
    java.lang.String escapeText(java.lang.String) -> escapeText
    java.lang.String escapeCDATA(java.lang.String) -> escapeCDATA
    void appendCDATA(org.jdom2.output.support.AbstractFormattedWalker$Trim,java.lang.String) -> appendCDATA
    void forceAppend(java.lang.String) -> forceAppend
    void appendRaw(org.jdom2.Content) -> appendRaw
    void done() -> done
    void access$1200(org.jdom2.output.support.AbstractFormattedWalker$MultiText,java.lang.String) -> access$1200
org.jdom2.output.support.AbstractFormattedWalker$Trim -> org.jdom2.output.support.AbstractFormattedWalker$Trim:
    org.jdom2.output.support.AbstractFormattedWalker$Trim LEFT -> LEFT
    org.jdom2.output.support.AbstractFormattedWalker$Trim RIGHT -> RIGHT
    org.jdom2.output.support.AbstractFormattedWalker$Trim BOTH -> BOTH
    org.jdom2.output.support.AbstractFormattedWalker$Trim COMPACT -> COMPACT
    org.jdom2.output.support.AbstractFormattedWalker$Trim NONE -> NONE
    org.jdom2.output.support.AbstractFormattedWalker$Trim[] $VALUES -> $VALUES
    org.jdom2.output.support.AbstractFormattedWalker$Trim[] values() -> values
    org.jdom2.output.support.AbstractFormattedWalker$Trim valueOf(java.lang.String) -> valueOf
org.jdom2.output.support.AbstractOutputProcessor -> org.jdom2.output.support.AbstractOutputProcessor:
    org.jdom2.output.support.Walker buildWalker(org.jdom2.output.support.FormatStack,java.util.List,boolean) -> buildWalker
org.jdom2.output.support.AbstractOutputProcessor$1 -> org.jdom2.output.support.AbstractOutputProcessor$1:
    int[] $SwitchMap$org$jdom2$output$Format$TextMode -> $SwitchMap$org$jdom2$output$Format$TextMode
org.jdom2.output.support.AbstractSAXOutputProcessor -> org.jdom2.output.support.AbstractSAXOutputProcessor:
    void locate(org.jdom2.output.support.SAXTarget) -> locate
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Document) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.DocType) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Element) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,java.util.List) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.CDATA) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Text) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Comment) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.ProcessingInstruction) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.EntityRef) -> process
    void processAsDocument(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,java.util.List) -> processAsDocument
    void processAsDocument(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Element) -> processAsDocument
    void printDocument(org.jdom2.output.support.SAXTarget,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.jdom2.Document) -> printDocument
    void printDocType(org.jdom2.output.support.SAXTarget,org.jdom2.output.support.FormatStack,org.jdom2.DocType) -> printDocType
    void printProcessingInstruction(org.jdom2.output.support.SAXTarget,org.jdom2.output.support.FormatStack,org.jdom2.ProcessingInstruction) -> printProcessingInstruction
    void printComment(org.jdom2.output.support.SAXTarget,org.jdom2.output.support.FormatStack,org.jdom2.Comment) -> printComment
    void printEntityRef(org.jdom2.output.support.SAXTarget,org.jdom2.output.support.FormatStack,org.jdom2.EntityRef) -> printEntityRef
    void printCDATA(org.jdom2.output.support.SAXTarget,org.jdom2.output.support.FormatStack,org.jdom2.CDATA) -> printCDATA
    void printText(org.jdom2.output.support.SAXTarget,org.jdom2.output.support.FormatStack,org.jdom2.Text) -> printText
    void printElement(org.jdom2.output.support.SAXTarget,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.jdom2.Element) -> printElement
    void printContent(org.jdom2.output.support.SAXTarget,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.jdom2.output.support.Walker) -> printContent
    java.lang.String getAttributeTypeName(org.jdom2.AttributeType) -> getAttributeTypeName
    org.xml.sax.XMLReader createParser() -> createParser
    org.xml.sax.XMLReader createDTDParser(org.jdom2.output.support.SAXTarget) -> createDTDParser
org.jdom2.output.support.AbstractSAXOutputProcessor$1 -> org.jdom2.output.support.AbstractSAXOutputProcessor$1:
    int[] $SwitchMap$org$jdom2$Content$CType -> $SwitchMap$org$jdom2$Content$CType
    int[] $SwitchMap$org$jdom2$AttributeType -> $SwitchMap$org$jdom2$AttributeType
org.jdom2.output.support.AbstractStAXEventProcessor -> org.jdom2.output.support.AbstractStAXEventProcessor:
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.Document) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.DocType) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.Element) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,java.util.List) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.CDATA) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.Text) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.Comment) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.ProcessingInstruction) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.EntityRef) -> process
    void printDocument(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,javax.xml.stream.XMLEventFactory,org.jdom2.Document) -> printDocument
    void printDocType(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.DocType) -> printDocType
    void printProcessingInstruction(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.ProcessingInstruction) -> printProcessingInstruction
    void printComment(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Comment) -> printComment
    void printEntityRef(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.EntityRef) -> printEntityRef
    void printCDATA(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.CDATA) -> printCDATA
    void printText(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,javax.xml.stream.XMLEventFactory,org.jdom2.Text) -> printText
    void printElement(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,javax.xml.stream.XMLEventFactory,org.jdom2.Element) -> printElement
    void printContent(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,javax.xml.stream.XMLEventFactory,org.jdom2.output.support.Walker) -> printContent
org.jdom2.output.support.AbstractStAXEventProcessor$1 -> org.jdom2.output.support.AbstractStAXEventProcessor$1:
    int[] $SwitchMap$org$jdom2$Content$CType -> $SwitchMap$org$jdom2$Content$CType
org.jdom2.output.support.AbstractStAXEventProcessor$AttIterator -> org.jdom2.output.support.AbstractStAXEventProcessor$AttIterator:
    java.util.Iterator source -> source
    javax.xml.stream.XMLEventFactory fac -> fac
    java.util.Iterator specified(java.util.Iterator) -> specified
    boolean hasNext() -> hasNext
    javax.xml.stream.events.Attribute next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator -> org.jdom2.output.support.AbstractStAXEventProcessor$NSIterator:
    java.util.Iterator source -> source
    javax.xml.stream.XMLEventFactory fac -> fac
    boolean hasNext() -> hasNext
    javax.xml.stream.events.Namespace next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jdom2.output.support.AbstractStAXStreamProcessor -> org.jdom2.output.support.AbstractStAXStreamProcessor:
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.Document) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.DocType) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.Element) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,java.util.List) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.CDATA) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.Text) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.Comment) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.ProcessingInstruction) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.EntityRef) -> process
    void printDocument(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.jdom2.Document) -> printDocument
    void printDocType(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.DocType) -> printDocType
    void printProcessingInstruction(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.ProcessingInstruction) -> printProcessingInstruction
    void printComment(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.Comment) -> printComment
    void printEntityRef(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.EntityRef) -> printEntityRef
    void printCDATA(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.CDATA) -> printCDATA
    void printText(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.Text) -> printText
    void printElement(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.jdom2.Element) -> printElement
    void printContent(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.jdom2.output.support.Walker) -> printContent
    void printNamespace(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.Namespace) -> printNamespace
    void printAttribute(javax.xml.stream.XMLStreamWriter,org.jdom2.output.support.FormatStack,org.jdom2.Attribute) -> printAttribute
org.jdom2.output.support.AbstractStAXStreamProcessor$1 -> org.jdom2.output.support.AbstractStAXStreamProcessor$1:
    int[] $SwitchMap$org$jdom2$Content$CType -> $SwitchMap$org$jdom2$Content$CType
org.jdom2.output.support.AbstractXMLOutputProcessor -> org.jdom2.output.support.AbstractXMLOutputProcessor:
    java.lang.String CDATAPRE -> CDATAPRE
    java.lang.String CDATAPOST -> CDATAPOST
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.Document) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.DocType) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.Element) -> process
    void process(java.io.Writer,org.jdom2.output.Format,java.util.List) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.CDATA) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.Text) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.Comment) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.ProcessingInstruction) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.EntityRef) -> process
    void write(java.io.Writer,java.lang.String) -> write
    void write(java.io.Writer,char) -> write
    void attributeEscapedEntitiesFilter(java.io.Writer,org.jdom2.output.support.FormatStack,java.lang.String) -> attributeEscapedEntitiesFilter
    void textRaw(java.io.Writer,java.lang.String) -> textRaw
    void textRaw(java.io.Writer,char) -> textRaw
    void textEntityRef(java.io.Writer,java.lang.String) -> textEntityRef
    void textCDATA(java.io.Writer,java.lang.String) -> textCDATA
    void printDocument(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.jdom2.Document) -> printDocument
    void printDeclaration(java.io.Writer,org.jdom2.output.support.FormatStack) -> printDeclaration
    void printDocType(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.DocType) -> printDocType
    void printProcessingInstruction(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.ProcessingInstruction) -> printProcessingInstruction
    void printComment(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.Comment) -> printComment
    void printEntityRef(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.EntityRef) -> printEntityRef
    void printCDATA(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.CDATA) -> printCDATA
    void printText(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.Text) -> printText
    void printElement(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.jdom2.Element) -> printElement
    void printContent(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.util.NamespaceStack,org.jdom2.output.support.Walker) -> printContent
    void printNamespace(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.Namespace) -> printNamespace
    void printAttribute(java.io.Writer,org.jdom2.output.support.FormatStack,org.jdom2.Attribute) -> printAttribute
org.jdom2.output.support.AbstractXMLOutputProcessor$1 -> org.jdom2.output.support.AbstractXMLOutputProcessor$1:
    int[] $SwitchMap$org$jdom2$Content$CType -> $SwitchMap$org$jdom2$Content$CType
org.jdom2.output.support.DOMOutputProcessor -> org.jdom2.output.support.DOMOutputProcessor:
    org.w3c.dom.Document process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.Document) -> process
    org.w3c.dom.Element process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.Element) -> process
    java.util.List process(org.w3c.dom.Document,org.jdom2.output.Format,java.util.List) -> process
    org.w3c.dom.CDATASection process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.CDATA) -> process
    org.w3c.dom.Text process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.Text) -> process
    org.w3c.dom.Comment process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.Comment) -> process
    org.w3c.dom.ProcessingInstruction process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.ProcessingInstruction) -> process
    org.w3c.dom.EntityReference process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.EntityRef) -> process
    org.w3c.dom.Attr process(org.w3c.dom.Document,org.jdom2.output.Format,org.jdom2.Attribute) -> process
org.jdom2.output.support.FormatStack -> org.jdom2.output.support.FormatStack:
    int capacity -> capacity
    int depth -> depth
    org.jdom2.output.Format$TextMode defaultMode -> defaultMode
    java.lang.String indent -> indent
    java.lang.String encoding -> encoding
    java.lang.String lineSeparator -> lineSeparator
    boolean omitDeclaration -> omitDeclaration
    boolean omitEncoding -> omitEncoding
    boolean expandEmptyElements -> expandEmptyElements
    boolean specifiedAttributesOnly -> specifiedAttributesOnly
    org.jdom2.output.EscapeStrategy escapeStrategy -> escapeStrategy
    java.lang.String[] levelIndent -> levelIndent
    java.lang.String[] levelEOL -> levelEOL
    java.lang.String[] levelEOLIndent -> levelEOLIndent
    java.lang.String[] termEOLIndent -> termEOLIndent
    boolean[] ignoreTrAXEscapingPIs -> ignoreTrAXEscapingPIs
    org.jdom2.output.Format$TextMode[] mode -> mode
    boolean[] escapeOutput -> escapeOutput
    void resetReusableIndents() -> resetReusableIndents
    java.lang.String getIndent() -> getIndent
    java.lang.String getLineSeparator() -> getLineSeparator
    java.lang.String getEncoding() -> getEncoding
    boolean isOmitDeclaration() -> isOmitDeclaration
    boolean isSpecifiedAttributesOnly() -> isSpecifiedAttributesOnly
    boolean isOmitEncoding() -> isOmitEncoding
    boolean isExpandEmptyElements() -> isExpandEmptyElements
    org.jdom2.output.EscapeStrategy getEscapeStrategy() -> getEscapeStrategy
    boolean isIgnoreTrAXEscapingPIs() -> isIgnoreTrAXEscapingPIs
    void setIgnoreTrAXEscapingPIs(boolean) -> setIgnoreTrAXEscapingPIs
    boolean getEscapeOutput() -> getEscapeOutput
    void setEscapeOutput(boolean) -> setEscapeOutput
    org.jdom2.output.Format$TextMode getDefaultMode() -> getDefaultMode
    java.lang.String getLevelIndent() -> getLevelIndent
    java.lang.String getPadBetween() -> getPadBetween
    java.lang.String getPadLast() -> getPadLast
    void setLevelIndent(java.lang.String) -> setLevelIndent
    java.lang.String getLevelEOL() -> getLevelEOL
    void setLevelEOL(java.lang.String) -> setLevelEOL
    org.jdom2.output.Format$TextMode getTextMode() -> getTextMode
    void setTextMode(org.jdom2.output.Format$TextMode) -> setTextMode
    void push() -> push
    void pop() -> pop
org.jdom2.output.support.FormatStack$1 -> org.jdom2.output.support.FormatStack$1:
    int[] $SwitchMap$org$jdom2$output$Format$TextMode -> $SwitchMap$org$jdom2$output$Format$TextMode
org.jdom2.output.support.SAXOutputProcessor -> org.jdom2.output.support.SAXOutputProcessor:
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Document) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.DocType) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Element) -> process
    void processAsDocument(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Element) -> processAsDocument
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,java.util.List) -> process
    void processAsDocument(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,java.util.List) -> processAsDocument
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.CDATA) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Text) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.Comment) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.ProcessingInstruction) -> process
    void process(org.jdom2.output.support.SAXTarget,org.jdom2.output.Format,org.jdom2.EntityRef) -> process
org.jdom2.output.support.SAXTarget -> org.jdom2.output.support.SAXTarget:
    org.xml.sax.ContentHandler contentHandler -> contentHandler
    org.xml.sax.ErrorHandler errorHandler -> errorHandler
    org.xml.sax.DTDHandler dtdHandler -> dtdHandler
    org.xml.sax.EntityResolver entityResolver -> entityResolver
    org.xml.sax.ext.LexicalHandler lexicalHandler -> lexicalHandler
    org.xml.sax.ext.DeclHandler declHandler -> declHandler
    org.jdom2.output.support.SAXTarget$SAXLocator locator -> locator
    boolean declareNamespaces -> declareNamespaces
    boolean reportDtdEvents -> reportDtdEvents
    org.xml.sax.ContentHandler getContentHandler() -> getContentHandler
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    org.xml.sax.ext.LexicalHandler getLexicalHandler() -> getLexicalHandler
    org.xml.sax.ext.DeclHandler getDeclHandler() -> getDeclHandler
    boolean isDeclareNamespaces() -> isDeclareNamespaces
    boolean isReportDTDEvents() -> isReportDTDEvents
    org.jdom2.output.support.SAXTarget$SAXLocator getLocator() -> getLocator
org.jdom2.output.support.SAXTarget$SAXLocator -> org.jdom2.output.support.SAXTarget$SAXLocator:
    java.lang.String publicid -> publicid
    java.lang.String systemid -> systemid
    java.lang.Object node -> node
    int getColumnNumber() -> getColumnNumber
    int getLineNumber() -> getLineNumber
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getSystemId() -> getSystemId
    java.lang.Object getNode() -> getNode
    void setNode(java.lang.Object) -> setNode
org.jdom2.output.support.StAXEventProcessor -> org.jdom2.output.support.StAXEventProcessor:
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.Document) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.DocType) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.Element) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,java.util.List) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.CDATA) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.Text) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.Comment) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.ProcessingInstruction) -> process
    void process(javax.xml.stream.util.XMLEventConsumer,org.jdom2.output.Format,javax.xml.stream.XMLEventFactory,org.jdom2.EntityRef) -> process
org.jdom2.output.support.StAXStreamProcessor -> org.jdom2.output.support.StAXStreamProcessor:
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.Document) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.DocType) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.Element) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,java.util.List) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.CDATA) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.Text) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.Comment) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.ProcessingInstruction) -> process
    void process(javax.xml.stream.XMLStreamWriter,org.jdom2.output.Format,org.jdom2.EntityRef) -> process
org.jdom2.output.support.Walker -> org.jdom2.output.support.Walker:
    boolean isAllText() -> isAllText
    boolean isAllWhitespace() -> isAllWhitespace
    boolean hasNext() -> hasNext
    org.jdom2.Content next() -> next
    java.lang.String text() -> text
    boolean isCDATA() -> isCDATA
org.jdom2.output.support.WalkerNORMALIZE -> org.jdom2.output.support.WalkerNORMALIZE:
    boolean isSpaceFirst(java.lang.String) -> isSpaceFirst
    boolean isSpaceLast(java.lang.String) -> isSpaceLast
    void analyzeMultiText(org.jdom2.output.support.AbstractFormattedWalker$MultiText,int,int) -> analyzeMultiText
org.jdom2.output.support.WalkerNORMALIZE$1 -> org.jdom2.output.support.WalkerNORMALIZE$1:
    int[] $SwitchMap$org$jdom2$Content$CType -> $SwitchMap$org$jdom2$Content$CType
org.jdom2.output.support.WalkerPRESERVE -> org.jdom2.output.support.WalkerPRESERVE:
    java.util.Iterator EMPTYIT -> EMPTYIT
    java.util.Iterator iter -> iter
    boolean alltext -> alltext
    boolean isAllText() -> isAllText
    boolean hasNext() -> hasNext
    org.jdom2.Content next() -> next
    java.lang.String text() -> text
    boolean isCDATA() -> isCDATA
    boolean isAllWhitespace() -> isAllWhitespace
org.jdom2.output.support.WalkerPRESERVE$1 -> org.jdom2.output.support.WalkerPRESERVE$1:
    boolean hasNext() -> hasNext
    org.jdom2.Content next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jdom2.output.support.WalkerTRIM -> org.jdom2.output.support.WalkerTRIM:
    void analyzeMultiText(org.jdom2.output.support.AbstractFormattedWalker$MultiText,int,int) -> analyzeMultiText
org.jdom2.output.support.WalkerTRIM$1 -> org.jdom2.output.support.WalkerTRIM$1:
    int[] $SwitchMap$org$jdom2$Content$CType -> $SwitchMap$org$jdom2$Content$CType
org.jdom2.output.support.WalkerTRIM_FULL_WHITE -> org.jdom2.output.support.WalkerTRIM_FULL_WHITE:
    void analyzeMultiText(org.jdom2.output.support.AbstractFormattedWalker$MultiText,int,int) -> analyzeMultiText
org.jdom2.output.support.WalkerTRIM_FULL_WHITE$1 -> org.jdom2.output.support.WalkerTRIM_FULL_WHITE$1:
    int[] $SwitchMap$org$jdom2$Content$CType -> $SwitchMap$org$jdom2$Content$CType
org.jdom2.output.support.XMLOutputProcessor -> org.jdom2.output.support.XMLOutputProcessor:
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.Document) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.DocType) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.Element) -> process
    void process(java.io.Writer,org.jdom2.output.Format,java.util.List) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.CDATA) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.Text) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.Comment) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.ProcessingInstruction) -> process
    void process(java.io.Writer,org.jdom2.output.Format,org.jdom2.EntityRef) -> process
org.jdom2.transform.JDOMResult -> org.jdom2.transform.JDOMResult:
    java.lang.String JDOM_FEATURE -> JDOM_FEATURE
    java.util.List resultlist -> resultlist
    org.jdom2.Document resultdoc -> resultdoc
    boolean queried -> queried
    org.jdom2.JDOMFactory factory -> factory
    void setResult(java.util.List) -> setResult
    java.util.List getResult() -> getResult
    void setDocument(org.jdom2.Document) -> setDocument
    org.jdom2.Document getDocument() -> getDocument
    void setFactory(org.jdom2.JDOMFactory) -> setFactory
    org.jdom2.JDOMFactory getFactory() -> getFactory
    void retrieveResult() -> retrieveResult
    void setHandler(org.xml.sax.ContentHandler) -> setHandler
    void setLexicalHandler(org.xml.sax.ext.LexicalHandler) -> setLexicalHandler
org.jdom2.transform.JDOMResult$DocumentBuilder -> org.jdom2.transform.JDOMResult$DocumentBuilder:
    org.jdom2.transform.JDOMResult$FragmentHandler saxHandler -> saxHandler
    boolean startDocumentReceived -> startDocumentReceived
    org.jdom2.transform.JDOMResult this$0 -> this$0
    java.util.List getResult() -> getResult
    void ensureInitialization() -> ensureInitialization
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void skippedEntity(java.lang.String) -> skippedEntity
    void startDTD(java.lang.String,java.lang.String,java.lang.String) -> startDTD
    void endDTD() -> endDTD
    void startEntity(java.lang.String) -> startEntity
    void endEntity(java.lang.String) -> endEntity
    void startCDATA() -> startCDATA
    void endCDATA() -> endCDATA
    void comment(char[],int,int) -> comment
org.jdom2.transform.JDOMResult$FragmentHandler -> org.jdom2.transform.JDOMResult$FragmentHandler:
    org.jdom2.Element dummyRoot -> dummyRoot
    java.util.List getResult() -> getResult
    java.util.List getDetachedContent(org.jdom2.Element) -> getDetachedContent
org.jdom2.transform.JDOMSource -> org.jdom2.transform.JDOMSource:
    java.lang.String JDOM_FEATURE -> JDOM_FEATURE
    org.xml.sax.XMLReader xmlReader -> xmlReader
    org.xml.sax.EntityResolver resolver -> resolver
    void setDocument(org.jdom2.Document) -> setDocument
    org.jdom2.Document getDocument() -> getDocument
    void setNodes(java.util.List) -> setNodes
    java.util.List getNodes() -> getNodes
    void setInputSource(org.xml.sax.InputSource) -> setInputSource
    void setXMLReader(org.xml.sax.XMLReader) -> setXMLReader
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    org.xml.sax.XMLReader buildDocumentReader() -> buildDocumentReader
org.jdom2.transform.JDOMSource$DocumentReader -> org.jdom2.transform.JDOMSource$DocumentReader:
    void parse(java.lang.String) -> parse
    void parse(org.xml.sax.InputSource) -> parse
org.jdom2.transform.JDOMSource$JDOMInputSource -> org.jdom2.transform.JDOMSource$JDOMInputSource:
    org.jdom2.Document docsource -> docsource
    java.util.List listsource -> listsource
    java.lang.Object getSource() -> getSource
    void setCharacterStream(java.io.Reader) -> setCharacterStream
    java.io.Reader getCharacterStream() -> getCharacterStream
    void setByteStream(java.io.InputStream) -> setByteStream
    org.jdom2.Document getDocumentSource() -> getDocumentSource
    java.util.List getListSource() -> getListSource
org.jdom2.transform.XSLTransformException -> org.jdom2.transform.XSLTransformException:
    long serialVersionUID -> serialVersionUID
org.jdom2.transform.XSLTransformer -> org.jdom2.transform.XSLTransformer:
    javax.xml.transform.Templates templates -> templates
    org.jdom2.JDOMFactory factory -> factory
    java.util.List transform(java.util.List) -> transform
    org.jdom2.Document transform(org.jdom2.Document) -> transform
    org.jdom2.Document transform(org.jdom2.Document,org.xml.sax.EntityResolver) -> transform
    void setFactory(org.jdom2.JDOMFactory) -> setFactory
    org.jdom2.JDOMFactory getFactory() -> getFactory
org.jdom2.util.IteratorIterable -> org.jdom2.util.IteratorIterable:
org.jdom2.util.NamespaceStack -> org.jdom2.util.NamespaceStack:
    org.jdom2.Namespace[] EMPTY -> EMPTY
    java.lang.Iterable EMPTYITER -> EMPTYITER
    java.util.Comparator NSCOMP -> NSCOMP
    org.jdom2.Namespace[] DEFAULTSEED -> DEFAULTSEED
    org.jdom2.Namespace[][] added -> added
    org.jdom2.Namespace[][] scope -> scope
    int depth -> depth
    int binarySearch(org.jdom2.Namespace[],int,int,org.jdom2.Namespace) -> binarySearch
    org.jdom2.Namespace[] checkNamespace(java.util.List,org.jdom2.Namespace,org.jdom2.Namespace[]) -> checkNamespace
    void push(org.jdom2.Element) -> push
    void push(org.jdom2.Attribute) -> push
    void pushStack(org.jdom2.Namespace,org.jdom2.Namespace[],java.util.List) -> pushStack
    void pop() -> pop
    java.lang.Iterable addedForward() -> addedForward
    java.lang.Iterable addedReverse() -> addedReverse
    java.util.Iterator iterator() -> iterator
    org.jdom2.Namespace[] getScope() -> getScope
    boolean isInScope(org.jdom2.Namespace) -> isInScope
org.jdom2.util.NamespaceStack$1 -> org.jdom2.util.NamespaceStack$1:
    int compare(org.jdom2.Namespace,org.jdom2.Namespace) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.jdom2.util.NamespaceStack$BackwardWalker -> org.jdom2.util.NamespaceStack$BackwardWalker:
    org.jdom2.Namespace[] namespaces -> namespaces
    int cursor -> cursor
    boolean hasNext() -> hasNext
    org.jdom2.Namespace next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jdom2.util.NamespaceStack$EmptyIterable -> org.jdom2.util.NamespaceStack$EmptyIterable:
    java.util.Iterator iterator() -> iterator
    boolean hasNext() -> hasNext
    org.jdom2.Namespace next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jdom2.util.NamespaceStack$ForwardWalker -> org.jdom2.util.NamespaceStack$ForwardWalker:
    org.jdom2.Namespace[] namespaces -> namespaces
    int cursor -> cursor
    boolean hasNext() -> hasNext
    org.jdom2.Namespace next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jdom2.util.NamespaceStack$NamespaceIterable -> org.jdom2.util.NamespaceStack$NamespaceIterable:
    boolean forward -> forward
    org.jdom2.Namespace[] namespaces -> namespaces
    java.util.Iterator iterator() -> iterator
org.jdom2.xpath.XPath -> org.jdom2.xpath.XPath:
    long serialVersionUID -> serialVersionUID
    java.lang.String XPATH_CLASS_PROPERTY -> XPATH_CLASS_PROPERTY
    java.lang.String DEFAULT_XPATH_CLASS -> DEFAULT_XPATH_CLASS
    java.lang.String JDOM_OBJECT_MODEL_URI -> JDOM_OBJECT_MODEL_URI
    java.lang.reflect.Constructor constructor -> constructor
    org.jdom2.xpath.XPath newInstance(java.lang.String) -> newInstance
    void setXPathClass(java.lang.Class) -> setXPathClass
    java.util.List selectNodes(java.lang.Object) -> selectNodes
    java.lang.Object selectSingleNode(java.lang.Object) -> selectSingleNode
    java.lang.String valueOf(java.lang.Object) -> valueOf
    java.lang.Number numberValueOf(java.lang.Object) -> numberValueOf
    void setVariable(java.lang.String,java.lang.Object) -> setVariable
    void addNamespace(org.jdom2.Namespace) -> addNamespace
    void addNamespace(java.lang.String,java.lang.String) -> addNamespace
    java.lang.String getXPath() -> getXPath
    java.util.List selectNodes(java.lang.Object,java.lang.String) -> selectNodes
    java.lang.Object selectSingleNode(java.lang.Object,java.lang.String) -> selectSingleNode
    java.lang.Object writeReplace() -> writeReplace
org.jdom2.xpath.XPath$XPathString -> org.jdom2.xpath.XPath$XPathString:
    long serialVersionUID -> serialVersionUID
    java.lang.String xPath -> xPath
    java.lang.Object readResolve() -> readResolve
org.jdom2.xpath.XPathBuilder -> org.jdom2.xpath.XPathBuilder:
    org.jdom2.filter.Filter filter -> filter
    java.lang.String expression -> expression
    java.util.Map variables -> variables
    java.util.Map namespaces -> namespaces
    boolean setVariable(java.lang.String,java.lang.Object) -> setVariable
    boolean setNamespace(java.lang.String,java.lang.String) -> setNamespace
    boolean setNamespace(org.jdom2.Namespace) -> setNamespace
    boolean setNamespaces(java.util.Collection) -> setNamespaces
    java.lang.Object getVariable(java.lang.String) -> getVariable
    org.jdom2.Namespace getNamespace(java.lang.String) -> getNamespace
    org.jdom2.filter.Filter getFilter() -> getFilter
    java.lang.String getExpression() -> getExpression
    org.jdom2.xpath.XPathExpression compileWith(org.jdom2.xpath.XPathFactory) -> compileWith
org.jdom2.xpath.XPathDiagnostic -> org.jdom2.xpath.XPathDiagnostic:
    java.lang.Object getContext() -> getContext
    org.jdom2.xpath.XPathExpression getXPathExpression() -> getXPathExpression
    java.util.List getResult() -> getResult
    java.util.List getFilteredResults() -> getFilteredResults
    java.util.List getRawResults() -> getRawResults
    boolean isFirstOnly() -> isFirstOnly
org.jdom2.xpath.XPathExpression -> org.jdom2.xpath.XPathExpression:
    org.jdom2.xpath.XPathExpression clone() -> clone
    java.lang.String getExpression() -> getExpression
    org.jdom2.Namespace getNamespace(java.lang.String) -> getNamespace
    org.jdom2.Namespace[] getNamespaces() -> getNamespaces
    java.lang.Object setVariable(java.lang.String,org.jdom2.Namespace,java.lang.Object) -> setVariable
    java.lang.Object setVariable(java.lang.String,java.lang.Object) -> setVariable
    java.lang.Object getVariable(java.lang.String,org.jdom2.Namespace) -> getVariable
    java.lang.Object getVariable(java.lang.String) -> getVariable
    org.jdom2.filter.Filter getFilter() -> getFilter
    java.util.List evaluate(java.lang.Object) -> evaluate
    java.lang.Object evaluateFirst(java.lang.Object) -> evaluateFirst
    org.jdom2.xpath.XPathDiagnostic diagnose(java.lang.Object,boolean) -> diagnose
org.jdom2.xpath.XPathFactory -> org.jdom2.xpath.XPathFactory:
    org.jdom2.Namespace[] EMPTYNS -> EMPTYNS
    java.util.concurrent.atomic.AtomicReference defaultreference -> defaultreference
    java.lang.String DEFAULTFACTORY -> DEFAULTFACTORY
    org.jdom2.xpath.XPathFactory instance() -> instance
    org.jdom2.xpath.XPathFactory newInstance(java.lang.String) -> newInstance
    org.jdom2.xpath.XPathExpression compile(java.lang.String,org.jdom2.filter.Filter,java.util.Map,org.jdom2.Namespace[]) -> compile
    org.jdom2.xpath.XPathExpression compile(java.lang.String,org.jdom2.filter.Filter,java.util.Map,java.util.Collection) -> compile
    org.jdom2.xpath.XPathExpression compile(java.lang.String,org.jdom2.filter.Filter) -> compile
    org.jdom2.xpath.XPathExpression compile(java.lang.String) -> compile
org.jdom2.xpath.XPathHelper -> org.jdom2.xpath.XPathHelper:
    java.lang.StringBuilder getPositionPath(java.lang.Object,java.util.List,java.lang.String,java.lang.StringBuilder) -> getPositionPath
    java.lang.StringBuilder getSingleStep(org.jdom2.NamespaceAware,java.lang.StringBuilder) -> getSingleStep
    java.lang.StringBuilder getRelativeElementPath(org.jdom2.Element,org.jdom2.Parent,java.lang.StringBuilder) -> getRelativeElementPath
    int locate(org.jdom2.Parent,java.util.List) -> locate
    java.lang.String getRelativePath(org.jdom2.Content,org.jdom2.Content) -> getRelativePath
    java.lang.String getRelativePath(org.jdom2.Content,org.jdom2.Attribute) -> getRelativePath
    java.lang.String getRelativePath(org.jdom2.Attribute,org.jdom2.Attribute) -> getRelativePath
    java.lang.String getRelativePath(org.jdom2.Attribute,org.jdom2.Content) -> getRelativePath
    java.lang.String getAbsolutePath(org.jdom2.Content) -> getAbsolutePath
    java.lang.String getAbsolutePath(org.jdom2.Attribute) -> getAbsolutePath
org.jdom2.xpath.jaxen.JDOM2Navigator -> org.jdom2.xpath.jaxen.JDOM2Navigator:
    long serialVersionUID -> serialVersionUID
org.jdom2.xpath.jaxen.JDOMCoreNavigator -> org.jdom2.xpath.jaxen.JDOMCoreNavigator:
    long serialVersionUID -> serialVersionUID
    java.util.IdentityHashMap emtnsmap -> emtnsmap
    void reset() -> reset
    org.jaxen.XPath parseXPath(java.lang.String) -> parseXPath
    java.lang.Object getDocument(java.lang.String) -> getDocument
    boolean isText(java.lang.Object) -> isText
    boolean isProcessingInstruction(java.lang.Object) -> isProcessingInstruction
    boolean isNamespace(java.lang.Object) -> isNamespace
    boolean isElement(java.lang.Object) -> isElement
    boolean isDocument(java.lang.Object) -> isDocument
    boolean isComment(java.lang.Object) -> isComment
    boolean isAttribute(java.lang.Object) -> isAttribute
    java.lang.String getTextStringValue(java.lang.Object) -> getTextStringValue
    java.lang.String getNamespaceStringValue(java.lang.Object) -> getNamespaceStringValue
    java.lang.String getNamespacePrefix(java.lang.Object) -> getNamespacePrefix
    void recurseElementText(org.jdom2.Element,java.lang.StringBuilder) -> recurseElementText
    java.lang.String getElementStringValue(java.lang.Object) -> getElementStringValue
    java.lang.String getElementQName(java.lang.Object) -> getElementQName
    java.lang.String getElementNamespaceUri(java.lang.Object) -> getElementNamespaceUri
    java.lang.String getElementName(java.lang.Object) -> getElementName
    java.lang.String getCommentStringValue(java.lang.Object) -> getCommentStringValue
    java.lang.String getAttributeStringValue(java.lang.Object) -> getAttributeStringValue
    java.lang.String getAttributeQName(java.lang.Object) -> getAttributeQName
    java.lang.String getAttributeNamespaceUri(java.lang.Object) -> getAttributeNamespaceUri
    java.lang.String getAttributeName(java.lang.Object) -> getAttributeName
    java.lang.String getProcessingInstructionTarget(java.lang.Object) -> getProcessingInstructionTarget
    java.lang.String getProcessingInstructionData(java.lang.Object) -> getProcessingInstructionData
    java.lang.Object getDocumentNode(java.lang.Object) -> getDocumentNode
    java.lang.Object getParentNode(java.lang.Object) -> getParentNode
    java.util.Iterator getAttributeAxisIterator(java.lang.Object) -> getAttributeAxisIterator
    java.util.Iterator getChildAxisIterator(java.lang.Object) -> getChildAxisIterator
    java.util.Iterator getNamespaceAxisIterator(java.lang.Object) -> getNamespaceAxisIterator
    java.util.Iterator getParentAxisIterator(java.lang.Object) -> getParentAxisIterator
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
org.jdom2.xpath.jaxen.JDOMNavigator -> org.jdom2.xpath.jaxen.JDOMNavigator:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap nsFromContext -> nsFromContext
    java.util.HashMap nsFromUser -> nsFromUser
    void reset() -> reset
    void setContext(java.lang.Object) -> setContext
    void includeNamespace(org.jdom2.Namespace) -> includeNamespace
    java.lang.String translateNamespacePrefixToUri(java.lang.String) -> translateNamespacePrefixToUri
org.jdom2.xpath.jaxen.JDOMXPath -> org.jdom2.xpath.jaxen.JDOMXPath:
    long serialVersionUID -> serialVersionUID
    org.jaxen.XPath xPath -> xPath
    org.jdom2.xpath.jaxen.JDOMNavigator navigator -> navigator
    java.lang.Object unWrapNS(java.lang.Object) -> unWrapNS
    java.util.List unWrap(java.util.List) -> unWrap
    java.util.List selectNodes(java.lang.Object) -> selectNodes
    java.lang.Object selectSingleNode(java.lang.Object) -> selectSingleNode
    java.lang.String valueOf(java.lang.Object) -> valueOf
    java.lang.Number numberValueOf(java.lang.Object) -> numberValueOf
    void setVariable(java.lang.String,java.lang.Object) -> setVariable
    void addNamespace(org.jdom2.Namespace) -> addNamespace
    java.lang.String getXPath() -> getXPath
    void setXPath(java.lang.String) -> setXPath
    java.lang.String toString() -> toString
org.jdom2.xpath.jaxen.JaxenCompiled -> org.jdom2.xpath.jaxen.JaxenCompiled:
    org.jaxen.XPath xPath -> xPath
    org.jdom2.xpath.jaxen.JDOM2Navigator navigator -> navigator
    java.lang.Object unWrapNS(java.lang.Object) -> unWrapNS
    java.util.List unWrap(java.util.List) -> unWrap
    java.lang.String translateNamespacePrefixToUri(java.lang.String) -> translateNamespacePrefixToUri
    java.lang.Object getVariableValue(java.lang.String,java.lang.String,java.lang.String) -> getVariableValue
    java.util.List evaluateRawAll(java.lang.Object) -> evaluateRawAll
    java.lang.Object evaluateRawFirst(java.lang.Object) -> evaluateRawFirst
org.jdom2.xpath.jaxen.JaxenXPathFactory -> org.jdom2.xpath.jaxen.JaxenXPathFactory:
    org.jdom2.xpath.XPathExpression compile(java.lang.String,org.jdom2.filter.Filter,java.util.Map,org.jdom2.Namespace[]) -> compile
org.jdom2.xpath.jaxen.NamespaceContainer -> org.jdom2.xpath.jaxen.NamespaceContainer:
    org.jdom2.Namespace ns -> ns
    org.jdom2.Element emt -> emt
    org.jdom2.Namespace getNamespace() -> getNamespace
    org.jdom2.Element getParentElement() -> getParentElement
    java.lang.String toString() -> toString
org.jdom2.xpath.util.AbstractXPathCompiled -> org.jdom2.xpath.util.AbstractXPathCompiled:
    org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator NSSORT -> NSSORT
    java.util.Map xnamespaces -> xnamespaces
    java.util.Map xvariables -> xvariables
    java.lang.String xquery -> xquery
    org.jdom2.filter.Filter xfilter -> xfilter
    org.jdom2.xpath.XPathExpression clone() -> clone
    java.lang.String getExpression() -> getExpression
    org.jdom2.Namespace getNamespace(java.lang.String) -> getNamespace
    org.jdom2.Namespace[] getNamespaces() -> getNamespaces
    java.lang.Object getVariable(java.lang.String,org.jdom2.Namespace) -> getVariable
    java.lang.Object getVariable(java.lang.String) -> getVariable
    java.lang.Object setVariable(java.lang.String,org.jdom2.Namespace,java.lang.Object) -> setVariable
    java.lang.Object setVariable(java.lang.String,java.lang.Object) -> setVariable
    org.jdom2.filter.Filter getFilter() -> getFilter
    java.util.List evaluate(java.lang.Object) -> evaluate
    java.lang.Object evaluateFirst(java.lang.Object) -> evaluateFirst
    org.jdom2.xpath.XPathDiagnostic diagnose(java.lang.Object,boolean) -> diagnose
    java.lang.String toString() -> toString
    java.util.List evaluateRawAll(java.lang.Object) -> evaluateRawAll
    java.lang.Object evaluateRawFirst(java.lang.Object) -> evaluateRawFirst
    java.lang.Object clone() -> clone
org.jdom2.xpath.util.AbstractXPathCompiled$1 -> org.jdom2.xpath.util.AbstractXPathCompiled$1:
org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator -> org.jdom2.xpath.util.AbstractXPathCompiled$NamespaceComparator:
    int compare(org.jdom2.Namespace,org.jdom2.Namespace) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.jdom2.xpath.util.XPathDiagnosticImpl -> org.jdom2.xpath.util.XPathDiagnosticImpl:
    java.lang.Object dcontext -> dcontext
    org.jdom2.xpath.XPathExpression dxpath -> dxpath
    java.util.List draw -> draw
    java.util.List dfiltered -> dfiltered
    java.util.List dresult -> dresult
    boolean dfirstonly -> dfirstonly
    java.lang.Object getContext() -> getContext
    org.jdom2.xpath.XPathExpression getXPathExpression() -> getXPathExpression
    java.util.List getResult() -> getResult
    java.util.List getFilteredResults() -> getFilteredResults
    java.util.List getRawResults() -> getRawResults
    boolean isFirstOnly() -> isFirstOnly
    java.lang.String toString() -> toString
